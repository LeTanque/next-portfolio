{"version":3,"file":"2.js","sources":["webpack:///./components/TextLoop.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\n\n\nconst TextLooper = () => {\n    const namesOfSkills = [ \"deadlines\", \"three.js\", \"passion\", \"teams\", \"friends\", \"open-source\", \"Raspberry Pi\", \"Arduino\", \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"JavaScript\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"Linux\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\" ] \n    const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n    const [ skillsWithCharacters, setSkillsWithCharacters ] = useState();\n    \n\n    useEffect(() => {\n        if (!skillsWithCharacters) {\n            const finalArray = getArrSkillsWithCharacters(namesOfSkills, characters);\n            setSkillsWithCharacters(finalArray);\n        }\n    }, [])\n    \n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    // const getNumberOfRandomCharacters = (number, chars) => {\n    //     if (!number) number = 9;\n    //     return chars.substr(getRandomInt(0, chars.length - number), number + 1)\n    // }\n\n    const getArrSkillsWithCharacters = (skills, chars) => {\n        let skillCharArr = [];\n        for (let i=0; i<=88; i++) {\n            let selectSkill = skills[getRandomInt(0, namesOfSkills.length - 1)];\n            // let createChars = getNumberOfRandomCharacters(selectSkill.length - 1, chars)\n            skillCharArr.push(selectSkill);\n        };\n        return skillCharArr;\n    }\n\n    return (\n        <main className=\"main__textlooper header-major\">\n            <div className=\"block__title\">I love building with&nbsp;</div>\n            \n            {skillsWithCharacters ? (\n                <TextLoop \n                    interval={[2000, 3000]}\n                    delay={0}\n                    mask={false} \n                    fade={true}\n                    noWrap={false}\n                    springConfig={{ stiffness: 300, damping: 53, precision: 0.1 }}\n                    adjustingSpeed={150}\n                    className=\"text-loop\"\n                >\n                    {skillsWithCharacters.map((entry, index) => (\n                        <React.Fragment key={index + \"-\" + entry}>\n                            <h3 >\n                                {skillsWithCharacters[index]}\n                            </h3>\n                            <SimpleIcons \n                                name={entry}\n                                className=\"icon--skills\"\n                            />\n                        </React.Fragment>\n                    ))}\n                </TextLoop >\n            ) : null}\n\n        </main>\n    );\n}\n\n\nexport default TextLooper;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAEA;;;;A","sourceRoot":""}