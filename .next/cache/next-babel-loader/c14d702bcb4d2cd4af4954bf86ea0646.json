{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLayoutEffect, useState, useEffect } from \"react\"; // import ProgressiveImage from \"react-progressive-image-loading\";\n// import { Random } from \"react-animated-text\";\n// import { FaReact } from \"react-icons/fa\";\n// import { DiDebian, DiHtml5, DiCss3, DiJsBadge, DiRasberryPi, DiPython, DiIllustrator, DiSass } from \"react-icons/di\";\n\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\"; // This is the body of the skills page\n// const SkillsBody = () => {\n// This hook listens for resize events, updates the above state with results\n// useLayoutEffect(() => {\n//     // Check to see whether the client is a browser or not\n//     if (process.browser) {\n//         // Add the event listener looking for resize. Set the hook.\n//         window.addEventListener('resize', () => {\n//             setWidth(window.innerWidth)\n//         });\n//         setWidth(window.innerWidth);\n//     }\n//     if (width <= 800) {\n//         setSkillsBlockHeight(\"300px\")\n//     } else if (width <= 1200 && width >= 801) {\n//         setSkillsBlockHeight(\"200px\")\n//     } else {\n//         setSkillsBlockHeight(\"100%\")\n//     }\n// }, [width])\n// return(\n//     <section className=\"block--skills-wrapper\" >\n//         <div className=\"block--skills\">\n//             <p></p>\n//         </div>\n//     </section>\n// )}\n\nconst Skills = () => {\n  const {\n    0: textLoopChildren,\n    1: setTextLoopChildren\n  } = useState(\"\");\n  const {\n    0: textLoopInterval,\n    1: setTextLoopInterval\n  } = useState([3000, 1000]);\n  const namesOfSkills = [\"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"GNOME\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\"];\n  const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n  useEffect(() => {\n    setTextLoopChildren(characters);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"section__skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block__skill-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, namesOfSkills.map(eachSkill => __jsx(SimpleIcons, {\n    name: eachSkill,\n    className: \"icon--skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), __jsx(TextLoop, {\n    interval: [1000, 3700] // interval={textLoopInterval}\n    // children={textLoopChildren}\n    ,\n    delay: 0,\n    mask: false,\n    fade: true,\n    springConfig: {\n      stiffness: 70,\n      damping: 31\n    },\n    adjustingSpeed: 150,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, textLoopChildren), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Technologies I love\"))));\n};\n\nexport default Skills;","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx"],"names":["useLayoutEffect","useState","useEffect","SimpleIcons","TextLoop","Skills","textLoopChildren","setTextLoopChildren","textLoopInterval","setTextLoopInterval","namesOfSkills","characters","map","eachSkill","stiffness","damping"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAA,OAAEC,gBAAF;AAAA,OAAoBC;AAApB,MAA4CN,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM;AAAA,OAAEO,gBAAF;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAA1D;AACA,QAAMS,aAAa,GAAG,CAAE,SAAF,EAAa,OAAb,EAAsB,OAAtB,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,YAArD,EAAmE,QAAnE,EAA6E,QAA7E,EAAuF,QAAvF,EAAiG,OAAjG,EAA0G,mBAA1G,EAA+H,MAA/H,EAAuI,MAAvI,EAA+I,QAA/I,EAAyJ,QAAzJ,CAAtB;AACA,QAAMC,UAAU,GAAG,+FAAnB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,mBAAmB,CAACI,UAAD,CAAnB;AACH,GAFQ,EAEN,EAFM,CAAT;AASA,SACI,4BACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,aAAa,CAACE,GAAd,CAAkBC,SAAS,IACxB,MAAC,WAAD;AACI,IAAA,IAAI,EAAEA,SADV;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAFJ,EAWI,MAAC,QAAD;AACI,IAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,IAAP,CADd,CAEI;AACA;AAHJ;AAII,IAAA,KAAK,EAAE,CAJX;AAKI,IAAA,IAAI,EAAE,KALV;AAMI,IAAA,IAAI,EAAE,IANV;AAOI,IAAA,YAAY,EAAE;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAPlB;AAQI,IAAA,cAAc,EAAE,GARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,gBAAP,CAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXJ,CAXJ,CADJ,CADJ;AAyDH,CAxED;;AA2EA,eAAeD,MAAf","sourcesContent":["import { useLayoutEffect, useState, useEffect } from \"react\";\n// import ProgressiveImage from \"react-progressive-image-loading\";\n// import { Random } from \"react-animated-text\";\n// import { FaReact } from \"react-icons/fa\";\n// import { DiDebian, DiHtml5, DiCss3, DiJsBadge, DiRasberryPi, DiPython, DiIllustrator, DiSass } from \"react-icons/di\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\n\n\n\n\n// This is the body of the skills page\n// const SkillsBody = () => {\n// This hook listens for resize events, updates the above state with results\n// useLayoutEffect(() => {\n//     // Check to see whether the client is a browser or not\n//     if (process.browser) {\n//         // Add the event listener looking for resize. Set the hook.\n//         window.addEventListener('resize', () => {\n//             setWidth(window.innerWidth)\n//         });\n//         setWidth(window.innerWidth);\n//     }\n//     if (width <= 800) {\n//         setSkillsBlockHeight(\"300px\")\n//     } else if (width <= 1200 && width >= 801) {\n//         setSkillsBlockHeight(\"200px\")\n//     } else {\n//         setSkillsBlockHeight(\"100%\")\n//     }\n// }, [width])\n// return(\n//     <section className=\"block--skills-wrapper\" >\n//         <div className=\"block--skills\">\n//             <p></p>\n//         </div>\n//     </section>\n// )}\n\n\n\n\n\nconst Skills = () => {\n    const [ textLoopChildren, setTextLoopChildren ] = useState(\"\");\n    const [ textLoopInterval, setTextLoopInterval ] = useState([3000, 1000]);\n    const namesOfSkills = [ \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"GNOME\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\" ] \n    const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n    \n    useEffect(() => {\n        setTextLoopChildren(characters);\n    }, [])\n    \n\n    \n\n\n\n    return (\n        <>\n            <section className=\"section__skills\" >\n\n                <div className=\"block__skill-icons\">\n                    {namesOfSkills.map(eachSkill => (\n                        <SimpleIcons \n                            name={eachSkill}\n                            className=\"icon--skills\"\n                        />\n                    ))}\n                </div>\n\n                <TextLoop \n                    interval={[1000, 3700]} \n                    // interval={textLoopInterval}\n                    // children={textLoopChildren}\n                    delay={0}\n                    mask={false} \n                    fade={true}\n                    springConfig={{ stiffness: 70, damping: 31 }}\n                    adjustingSpeed={150}\n                >\n                    <span>{textLoopChildren}</span>\n                    <span>Technologies I love</span>\n                </TextLoop >\n\n            </section>\n\n\n\n            {/* <Random\n                text={characters}\n                paused={state.paused}\n                iterations={1}\n                effect=\"verticalFadeIn\"\n                effectChange={2}\n                effectDirection=\"up\"\n            /> */}\n\n\n            {/* <ProgressiveImage\n                preview=\"/static/bogomil-mihaylov-small.jpg\"\n                src=\"/static/bogomil-mihaylov-wVTLXWM-Gh0-unsplash.jpg\"\n                transitionTime={700}\n                transitionFunction=\"ease\"\n                render={(src, style) => (\n                    <section className=\"section__skills\" style={Object.assign(style, { backgroundImage: `url(${src})` })} >\n                        {style.filter === \"blur(0px)\" ? (\n                            <SkillsBody   />\n                        ) : null}\n                    </section>\n                )}\n            /> */}\n\n        </>\n    );\n}\n\n\nexport default Skills;\n\n"]},"metadata":{},"sourceType":"module"}