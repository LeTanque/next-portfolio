{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\nimport { Line } from '../objects/Line.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { FrontSide, BackSide } from '../constants.js';\n\nfunction PlaneHelper(plane, size, hex) {\n  this.type = 'PlaneHelper';\n  this.plane = plane;\n  this.size = size === undefined ? 1 : size;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n  var geometry = new BufferGeometry();\n  geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n  geometry.computeBoundingSphere();\n  Line.call(this, geometry, new LineBasicMaterial({\n    color: color\n  })); //\n\n  var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n  var geometry2 = new BufferGeometry();\n  geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n  geometry2.computeBoundingSphere();\n  this.add(new Mesh(geometry2, new MeshBasicMaterial({\n    color: color,\n    opacity: 0.2,\n    transparent: true,\n    depthWrite: false\n  })));\n}\n\nPlaneHelper.prototype = _Object$create(Line.prototype);\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function (force) {\n  var scale = -this.plane.constant;\n  if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n  this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n  this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n  this.lookAt(this.plane.normal);\n  Object3D.prototype.updateMatrixWorld.call(this, force);\n};\n\nexport { PlaneHelper };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/helpers/PlaneHelper.js"],"names":["Line","Mesh","LineBasicMaterial","MeshBasicMaterial","Float32BufferAttribute","BufferGeometry","Object3D","FrontSide","BackSide","PlaneHelper","plane","size","hex","type","undefined","color","positions","geometry","setAttribute","computeBoundingSphere","call","positions2","geometry2","add","opacity","transparent","depthWrite","prototype","constructor","updateMatrixWorld","force","scale","constant","Math","abs","set","children","material","side","lookAt","normal"],"mappings":"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","sourcesContent":["/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { Line } from '../objects/Line.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { FrontSide, BackSide } from '../constants.js';\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\nexport { PlaneHelper };\n"]},"metadata":{},"sourceType":"module"}