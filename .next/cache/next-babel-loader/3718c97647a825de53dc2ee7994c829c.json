{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Vector3 } from './Vector3.js';\nimport { _Math } from './Math.js';\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _startP = new Vector3();\n\nvar _startEnd = new Vector3();\n\nfunction Line3(start, end) {\n  this.start = start !== undefined ? start : new Vector3();\n  this.end = end !== undefined ? end : new Vector3();\n}\n\n_Object$assign(Line3.prototype, {\n  set: function set(start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  copy: function copy(line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  getCenter: function getCenter(target) {\n    if (target === undefined) {\n      console.warn('THREE.Line3: .getCenter() target is now required');\n      target = new Vector3();\n    }\n\n    return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function delta(target) {\n    if (target === undefined) {\n      console.warn('THREE.Line3: .delta() target is now required');\n      target = new Vector3();\n    }\n\n    return target.subVectors(this.end, this.start);\n  },\n  distanceSq: function distanceSq() {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function distance() {\n    return this.start.distanceTo(this.end);\n  },\n  at: function at(t, target) {\n    if (target === undefined) {\n      console.warn('THREE.Line3: .at() target is now required');\n      target = new Vector3();\n    }\n\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function closestPointToPointParameter(point, clampToLine) {\n    _startP.subVectors(point, this.start);\n\n    _startEnd.subVectors(this.end, this.start);\n\n    var startEnd2 = _startEnd.dot(_startEnd);\n\n    var startEnd_startP = _startEnd.dot(_startP);\n\n    var t = startEnd_startP / startEnd2;\n\n    if (clampToLine) {\n      t = _Math.clamp(t, 0, 1);\n    }\n\n    return t;\n  },\n  closestPointToPoint: function closestPointToPoint(point, clampToLine, target) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n\n    if (target === undefined) {\n      console.warn('THREE.Line3: .closestPointToPoint() target is now required');\n      target = new Vector3();\n    }\n\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function applyMatrix4(matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function equals(line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n});\n\nexport { Line3 };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/math/Line3.js"],"names":["Vector3","_Math","_startP","_startEnd","Line3","start","end","undefined","prototype","set","copy","clone","constructor","line","getCenter","target","console","warn","addVectors","multiplyScalar","delta","subVectors","distanceSq","distanceToSquared","distance","distanceTo","at","t","add","closestPointToPointParameter","point","clampToLine","startEnd2","dot","startEnd_startP","clamp","closestPointToPoint","applyMatrix4","matrix","equals"],"mappings":"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","sourcesContent":["import { Vector3 } from './Vector3.js';\nimport { _Math } from './Math.js';\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _startP = new Vector3();\nvar _startEnd = new Vector3();\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\tvar t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t},\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n\nexport { Line3 };\n"]},"metadata":{},"sourceType":"module"}