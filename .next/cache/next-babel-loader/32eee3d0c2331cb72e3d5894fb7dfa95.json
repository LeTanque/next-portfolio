{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function RenderPass(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.overrideMaterial = overrideMaterial;\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n};\n\nRenderPass.prototype = _Object$assign(_Object$create(Pass.prototype), {\n  constructor: RenderPass,\n  render: function render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.scene.overrideMaterial = this.overrideMaterial;\n    var oldClearColor, oldClearAlpha;\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex();\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { RenderPass };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/threejs-render/resources/postprocessing/RenderPass.js"],"names":["RenderPass","Pass","clearAlpha","constructor","render","oldAutoClear","renderer","oldClearColor","oldClearAlpha"],"mappings":";;AAAA,SAAA,IAAA,QAAA,WAAA;AACA;;;;AAIA,IAAIA,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAA,MAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAMf;AACEC,EAAAA,IAAI,CAAJA,IAAAA,CAAAA,IAAAA;AAEA,OAAA,KAAA,GAAA,KAAA;AACA,OAAA,MAAA,GAAA,MAAA;AAEA,OAAA,gBAAA,GAAA,gBAAA;AAEA,OAAA,UAAA,GAAA,UAAA;AACA,OAAA,UAAA,GAAkBC,UAAU,KAAVA,SAAAA,GAAAA,UAAAA,GAAlB,CAAA;AAEA,OAAA,KAAA,GAAA,IAAA;AACA,OAAA,UAAA,GAAA,KAAA;AACA,OAAA,SAAA,GAAA,KAAA;AAnBJ,CAAA;;AAsBAF,UAAU,CAAVA,SAAAA,GAAuB,cAAA,CAAc,cAAA,CAAcC,IAAI,CAAhC,SAAc,CAAd,EAA6C;AAChEE,EAAAA,WAAW,EADqD,UAAA;AAGhEC,EAAAA,MAAM,EAAE,SAAA,MAAA,CAAA,QAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAmE;AACvE,QAAIC,YAAY,GAAGC,QAAQ,CAA3B,SAAA;AACAA,IAAAA,QAAQ,CAARA,SAAAA,GAAAA,KAAAA;AAEA,SAAA,KAAA,CAAA,gBAAA,GAA8B,KAA9B,gBAAA;AAEA,QAAA,aAAA,EAAA,aAAA;;AAEA,QAAI,KAAJ,UAAA,EAAqB;AACjBC,MAAAA,aAAa,GAAGD,QAAQ,CAARA,aAAAA,GAAhBC,MAAgBD,EAAhBC;AACAC,MAAAA,aAAa,GAAGF,QAAQ,CAAxBE,aAAgBF,EAAhBE;AAEAF,MAAAA,QAAQ,CAARA,aAAAA,CAAuB,KAAvBA,UAAAA,EAAwC,KAAxCA,UAAAA;AACH;;AAED,QAAI,KAAJ,UAAA,EAAqB;AACjBA,MAAAA,QAAQ,CAARA,UAAAA;AACH;;AAEDA,IAAAA,QAAQ,CAARA,eAAAA,CAAyB,KAAA,cAAA,GAAA,IAAA,GAnB8C,UAmBvEA,EAnBuE,CAqBvE;;AACA,QAAI,KAAJ,KAAA,EACIA,QAAQ,CAARA,KAAAA,CACIA,QAAQ,CADZA,cAAAA,EAEIA,QAAQ,CAFZA,cAAAA,EAGIA,QAAQ,CAHZA,gBAAAA;AAKJA,IAAAA,QAAQ,CAARA,MAAAA,CAAgB,KAAhBA,KAAAA,EAA4B,KAA5BA,MAAAA;;AAEA,QAAI,KAAJ,UAAA,EAAqB;AACjBA,MAAAA,QAAQ,CAARA,aAAAA,CAAAA,aAAAA,EAAAA,aAAAA;AACH;;AAED,SAAA,KAAA,CAAA,gBAAA,GAAA,IAAA;AACAA,IAAAA,QAAQ,CAARA,SAAAA,GAAAA,YAAAA;AACH;AAvC+D,CAA7C,CAAvBN;AA0CA,SAAA,UAAA","sourcesContent":["import { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function(\n    scene,\n    camera,\n    overrideMaterial,\n    clearColor,\n    clearAlpha\n) {\n    Pass.call(this);\n\n    this.scene = scene;\n    this.camera = camera;\n\n    this.overrideMaterial = overrideMaterial;\n\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\n    this.clear = true;\n    this.clearDepth = false;\n    this.needsSwap = false;\n};\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n    constructor: RenderPass,\n\n    render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n        var oldAutoClear = renderer.autoClear;\n        renderer.autoClear = false;\n\n        this.scene.overrideMaterial = this.overrideMaterial;\n\n        var oldClearColor, oldClearAlpha;\n\n        if (this.clearColor) {\n            oldClearColor = renderer.getClearColor().getHex();\n            oldClearAlpha = renderer.getClearAlpha();\n\n            renderer.setClearColor(this.clearColor, this.clearAlpha);\n        }\n\n        if (this.clearDepth) {\n            renderer.clearDepth();\n        }\n\n        renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n\n        // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n        if (this.clear)\n            renderer.clear(\n                renderer.autoClearColor,\n                renderer.autoClearDepth,\n                renderer.autoClearStencil\n            );\n        renderer.render(this.scene, this.camera);\n\n        if (this.clearColor) {\n            renderer.setClearColor(oldClearColor, oldClearAlpha);\n        }\n\n        this.scene.overrideMaterial = null;\n        renderer.autoClear = oldAutoClear;\n    }\n});\n\nexport { RenderPass };\n"]},"metadata":{},"sourceType":"module"}