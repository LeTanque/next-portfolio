{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/components/dnd/Box.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ItemTypes from './ItemTypes';\nimport { DragSource } from 'react-dnd';\n\nconst Box = ({\n  name,\n  isDragging,\n  connectDragSource\n}) => {\n  const opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: connectDragSource,\n    className: \"block__box\",\n    style: {\n      opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, name);\n};\n\nexport default DragSource(ItemTypes.BOX, {\n  beginDrag: props => ({\n    name: props.name\n  }),\n\n  endDrag(props, monitor) {\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n\n    if (dropResult) {\n      alert(`You dropped ${item.name} into ${dropResult.name}!`);\n    }\n  }\n\n}, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))(Box);","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/dnd/Box.jsx"],"names":["React","ItemTypes","DragSource","Box","name","isDragging","connectDragSource","opacity","BOX","beginDrag","props","endDrag","monitor","item","getItem","dropResult","getDropResult","alert","connect","dragSource"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAIA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAA6C;AACvD,QAAMC,OAAO,GAAGF,UAAU,GAAG,GAAH,GAAS,CAAnC;AACA,SACE;AAAK,IAAA,GAAG,EAAEC,iBAAV;AAA8B,IAAA,SAAS,EAAC,YAAxC;AAAsD,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IADH,CADF;AAKD,CAPD;;AASA,eAAeF,UAAU,CACvBD,SAAS,CAACO,GADa,EAEvB;AACEC,EAAAA,SAAS,EAAEC,KAAK,KAAK;AAAEN,IAAAA,IAAI,EAAEM,KAAK,CAACN;AAAd,GAAL,CADlB;;AAEEO,EAAAA,OAAO,CAACD,KAAD,EAAQE,OAAR,EAAiB;AACtB,UAAMC,IAAI,GAAGD,OAAO,CAACE,OAAR,EAAb;AACA,UAAMC,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdE,MAAAA,KAAK,CAAE,eAAcJ,IAAI,CAACT,IAAK,SAAQW,UAAU,CAACX,IAAK,GAAlD,CAAL;AACD;AACF;;AARH,CAFuB,EAYvB,CAACc,OAAD,EAAUN,OAAV,MAAuB;AACrBN,EAAAA,iBAAiB,EAAEY,OAAO,CAACC,UAAR,EADE;AAErBd,EAAAA,UAAU,EAAEO,OAAO,CAACP,UAAR;AAFS,CAAvB,CAZuB,CAAV,CAgBbF,GAhBa,CAAf","sourcesContent":["import React from 'react'\nimport ItemTypes from './ItemTypes';\nimport { DragSource } from 'react-dnd';\n\n\n\nconst Box = ({ name, isDragging, connectDragSource }) => {\n  const opacity = isDragging ? 0.4 : 1\n  return (\n    <div ref={connectDragSource}  className=\"block__box\"  style={{ opacity }} >\n      {name}\n    </div>\n  )\n}\n\nexport default DragSource(\n  ItemTypes.BOX,\n  {\n    beginDrag: props => ({ name: props.name }),\n    endDrag(props, monitor) {\n      const item = monitor.getItem()\n      const dropResult = monitor.getDropResult()\n      if (dropResult) {\n        alert(`You dropped ${item.name} into ${dropResult.name}!`)\n      }\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }),\n)(Box)\n"]},"metadata":{},"sourceType":"module"}