{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { InterpolateLinear } from '../../constants.js';\nimport { KeyframeTrack } from '../KeyframeTrack.js';\nimport { QuaternionLinearInterpolant } from '../../math/interpolants/QuaternionLinearInterpolant.js';\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\n\nQuaternionKeyframeTrack.prototype = _Object$assign(_Object$create(KeyframeTrack.prototype), {\n  constructor: QuaternionKeyframeTrack,\n  ValueTypeName: 'quaternion',\n  // ValueBufferType is inherited\n  DefaultInterpolation: InterpolateLinear,\n  InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n    return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n});\nexport { QuaternionKeyframeTrack };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/animation/tracks/QuaternionKeyframeTrack.js"],"names":["InterpolateLinear","KeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","name","times","values","interpolation","call","prototype","constructor","ValueTypeName","DefaultInterpolation","InterpolantFactoryMethodLinear","result","getValueSize","InterpolantFactoryMethodSmooth","undefined"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,2BAAT,QAA4C,wDAA5C;AAEA;;;;;;;;;AASA,SAASC,uBAAT,CAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,aAAvD,EAAuE;AAEtEN,EAAAA,aAAa,CAACO,IAAd,CAAoB,IAApB,EAA0BJ,IAA1B,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA+CC,aAA/C;AAEA;;AAEDJ,uBAAuB,CAACM,SAAxB,GAAoC,eAAe,eAAeR,aAAa,CAACQ,SAA7B,CAAf,EAAyD;AAE5FC,EAAAA,WAAW,EAAEP,uBAF+E;AAI5FQ,EAAAA,aAAa,EAAE,YAJ6E;AAM5F;AAEAC,EAAAA,oBAAoB,EAAEZ,iBARsE;AAU5Fa,EAAAA,8BAA8B,EAAE,wCAAWC,MAAX,EAAoB;AAEnD,WAAO,IAAIZ,2BAAJ,CAAiC,KAAKG,KAAtC,EAA6C,KAAKC,MAAlD,EAA0D,KAAKS,YAAL,EAA1D,EAA+ED,MAA/E,CAAP;AAEA,GAd2F;AAgB5FE,EAAAA,8BAA8B,EAAEC,SAhB4D,CAgBlD;;AAhBkD,CAAzD,CAApC;AAoBA,SAASd,uBAAT","sourcesContent":["import { InterpolateLinear } from '../../constants.js';\nimport { KeyframeTrack } from '../KeyframeTrack.js';\nimport { QuaternionLinearInterpolant } from '../../math/interpolants/QuaternionLinearInterpolant.js';\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\nexport { QuaternionKeyframeTrack };\n"]},"metadata":{},"sourceType":"module"}