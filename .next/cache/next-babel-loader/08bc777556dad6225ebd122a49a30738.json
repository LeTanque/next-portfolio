{"ast":null,"code":"/**\n * @author thespite / http://www.twitter.com/thespite\n */\nimport { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType } from '../../constants.js';\n\nfunction WebGLUtils(gl, extensions, capabilities) {\n  var isWebGL2 = capabilities.isWebGL2;\n\n  function convert(p) {\n    var extension;\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n\n    if (p === HalfFloatType) {\n      if (isWebGL2) return gl.HALF_FLOAT;\n      extension = extensions.get('OES_texture_half_float');\n\n      if (extension !== null) {\n        return extension.HALF_FLOAT_OES;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBFormat) return gl.RGB;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n    if (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n    if (p === RedIntegerFormat) return gl.RED_INTEGER;\n    if (p === RGFormat) return gl.RG;\n    if (p === RGIntegerFormat) return gl.RG_INTEGER;\n    if (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n    if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n      if (extension !== null) {\n        if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n        if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n      if (extension !== null) {\n        return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_astc');\n\n      if (extension !== null) {\n        // TODO Complete?\n        return p;\n      } else {\n        return null;\n      }\n    }\n\n    if (p === UnsignedInt248Type) {\n      if (isWebGL2) return gl.UNSIGNED_INT_24_8;\n      extension = extensions.get('WEBGL_depth_texture');\n\n      if (extension !== null) {\n        return extension.UNSIGNED_INT_24_8_WEBGL;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return {\n    convert: convert\n  };\n}\n\nexport { WebGLUtils };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/renderers/webgl/WebGLUtils.js"],"names":["RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGB_ETC1_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT5_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT1_Format","RGB_S3TC_DXT1_Format","DepthFormat","DepthStencilFormat","LuminanceAlphaFormat","LuminanceFormat","RedFormat","RGBAFormat","RGBFormat","AlphaFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","HalfFloatType","FloatType","UnsignedIntType","IntType","UnsignedShortType","ShortType","ByteType","UnsignedInt248Type","UnsignedShort565Type","UnsignedShort5551Type","UnsignedShort4444Type","UnsignedByteType","WebGLUtils","gl","extensions","capabilities","isWebGL2","convert","p","extension","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","get","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL"],"mappings":"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","sourcesContent":["/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nimport { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n"]},"metadata":{},"sourceType":"module"}