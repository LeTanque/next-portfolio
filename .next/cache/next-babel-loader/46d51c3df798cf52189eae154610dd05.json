{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\nimport { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nfunction ImageBitmapLoader(manager) {\n  if (typeof createImageBitmap === 'undefined') {\n    console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n  }\n\n  if (typeof fetch === 'undefined') {\n    console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n  }\n\n  Loader.call(this, manager);\n  this.options = undefined;\n}\n\nImageBitmapLoader.prototype = _Object$assign(_Object$create(Loader.prototype), {\n  constructor: ImageBitmapLoader,\n  setOptions: function setOptions(options) {\n    this.options = options;\n    return this;\n  },\n  load: function (url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    var scope = this;\n    var cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    fetch(url).then(function (res) {\n      return res.blob();\n    }).then(function (blob) {\n      if (scope.options === undefined) {\n        // Workaround for FireFox. It causes an error if you pass options.\n        return createImageBitmap(blob);\n      } else {\n        return createImageBitmap(blob, scope.options);\n      }\n    }).then(function (imageBitmap) {\n      Cache.add(url, imageBitmap);\n      if (onLoad) onLoad(imageBitmap);\n      scope.manager.itemEnd(url);\n    }).catch(function (e) {\n      if (onError) onError(e);\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    });\n    scope.manager.itemStart(url);\n  }\n});\nexport { ImageBitmapLoader };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/loaders/ImageBitmapLoader.js"],"names":["Cache","Loader","ImageBitmapLoader","manager","createImageBitmap","console","warn","fetch","call","options","undefined","prototype","constructor","setOptions","load","url","onLoad","onProgress","onError","path","resolveURL","scope","cached","get","itemStart","setTimeout","itemEnd","then","res","blob","imageBitmap","add","catch","e","itemError"],"mappings":";;;AAAA;;;AAIA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAGA,SAASC,iBAAT,CAA4BC,OAA5B,EAAsC;AAErC,MAAK,OAAOC,iBAAP,KAA6B,WAAlC,EAAgD;AAE/CC,IAAAA,OAAO,CAACC,IAAR,CAAc,6DAAd;AAEA;;AAED,MAAK,OAAOC,KAAP,KAAiB,WAAtB,EAAoC;AAEnCF,IAAAA,OAAO,CAACC,IAAR,CAAc,iDAAd;AAEA;;AAEDL,EAAAA,MAAM,CAACO,IAAP,CAAa,IAAb,EAAmBL,OAAnB;AAEA,OAAKM,OAAL,GAAeC,SAAf;AAEA;;AAEDR,iBAAiB,CAACS,SAAlB,GAA8B,eAAe,eAAeV,MAAM,CAACU,SAAtB,CAAf,EAAkD;AAE/EC,EAAAA,WAAW,EAAEV,iBAFkE;AAI/EW,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAqBJ,OAArB,EAA+B;AAE1C,SAAKA,OAAL,GAAeA,OAAf;AAEA,WAAO,IAAP;AAEA,GAV8E;AAY/EK,EAAAA,IAAI,EAAE,UAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,QAAKH,GAAG,KAAKL,SAAb,EAAyBK,GAAG,GAAG,EAAN;AAEzB,QAAK,KAAKI,IAAL,KAAcT,SAAnB,EAA+BK,GAAG,GAAG,KAAKI,IAAL,GAAYJ,GAAlB;AAE/BA,IAAAA,GAAG,GAAG,KAAKZ,OAAL,CAAaiB,UAAb,CAAyBL,GAAzB,CAAN;AAEA,QAAIM,KAAK,GAAG,IAAZ;AAEA,QAAIC,MAAM,GAAGtB,KAAK,CAACuB,GAAN,CAAWR,GAAX,CAAb;;AAEA,QAAKO,MAAM,KAAKZ,SAAhB,EAA4B;AAE3BW,MAAAA,KAAK,CAAClB,OAAN,CAAcqB,SAAd,CAAyBT,GAAzB;AAEAU,MAAAA,UAAU,CAAE,YAAY;AAEvB,YAAKT,MAAL,EAAcA,MAAM,CAAEM,MAAF,CAAN;AAEdD,QAAAA,KAAK,CAAClB,OAAN,CAAcuB,OAAd,CAAuBX,GAAvB;AAEA,OANS,EAMP,CANO,CAAV;AAQA,aAAOO,MAAP;AAEA;;AAEDf,IAAAA,KAAK,CAAEQ,GAAF,CAAL,CAAaY,IAAb,CAAmB,UAAWC,GAAX,EAAiB;AAEnC,aAAOA,GAAG,CAACC,IAAJ,EAAP;AAEA,KAJD,EAIIF,IAJJ,CAIU,UAAWE,IAAX,EAAkB;AAE3B,UAAKR,KAAK,CAACZ,OAAN,KAAkBC,SAAvB,EAAmC;AAElC;AACA,eAAON,iBAAiB,CAAEyB,IAAF,CAAxB;AAEA,OALD,MAKO;AAEN,eAAOzB,iBAAiB,CAAEyB,IAAF,EAAQR,KAAK,CAACZ,OAAd,CAAxB;AAEA;AAED,KAjBD,EAiBIkB,IAjBJ,CAiBU,UAAWG,WAAX,EAAyB;AAElC9B,MAAAA,KAAK,CAAC+B,GAAN,CAAWhB,GAAX,EAAgBe,WAAhB;AAEA,UAAKd,MAAL,EAAcA,MAAM,CAAEc,WAAF,CAAN;AAEdT,MAAAA,KAAK,CAAClB,OAAN,CAAcuB,OAAd,CAAuBX,GAAvB;AAEA,KAzBD,EAyBIiB,KAzBJ,CAyBW,UAAWC,CAAX,EAAe;AAEzB,UAAKf,OAAL,EAAeA,OAAO,CAAEe,CAAF,CAAP;AAEfZ,MAAAA,KAAK,CAAClB,OAAN,CAAc+B,SAAd,CAAyBnB,GAAzB;AACAM,MAAAA,KAAK,CAAClB,OAAN,CAAcuB,OAAd,CAAuBX,GAAvB;AAEA,KAhCD;AAkCAM,IAAAA,KAAK,CAAClB,OAAN,CAAcqB,SAAd,CAAyBT,GAAzB;AAEA;AA5E8E,CAAlD,CAA9B;AAgFA,SAASb,iBAAT","sourcesContent":["/**\n * @author thespite / http://clicktorelease.com/\n */\n\nimport { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tLoader.call( this, manager );\n\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n} );\n\nexport { ImageBitmapLoader };\n"]},"metadata":{},"sourceType":"module"}