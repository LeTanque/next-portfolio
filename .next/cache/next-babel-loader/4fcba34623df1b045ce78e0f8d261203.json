{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\nimport { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { FaceColors } from '../constants.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = new Vector3();\n\nvar _camera = new Camera();\n\nfunction CameraHelper(camera) {\n  var geometry = new BufferGeometry();\n  var material = new LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: FaceColors\n  });\n  var vertices = [];\n  var colors = [];\n  var pointMap = {}; // colors\n\n  var colorFrustum = new Color(0xffaa00);\n  var colorCone = new Color(0xff0000);\n  var colorUp = new Color(0x00aaff);\n  var colorTarget = new Color(0xffffff);\n  var colorCross = new Color(0x333333); // near\n\n  addLine('n1', 'n2', colorFrustum);\n  addLine('n2', 'n4', colorFrustum);\n  addLine('n4', 'n3', colorFrustum);\n  addLine('n3', 'n1', colorFrustum); // far\n\n  addLine('f1', 'f2', colorFrustum);\n  addLine('f2', 'f4', colorFrustum);\n  addLine('f4', 'f3', colorFrustum);\n  addLine('f3', 'f1', colorFrustum); // sides\n\n  addLine('n1', 'f1', colorFrustum);\n  addLine('n2', 'f2', colorFrustum);\n  addLine('n3', 'f3', colorFrustum);\n  addLine('n4', 'f4', colorFrustum); // cone\n\n  addLine('p', 'n1', colorCone);\n  addLine('p', 'n2', colorCone);\n  addLine('p', 'n3', colorCone);\n  addLine('p', 'n4', colorCone); // up\n\n  addLine('u1', 'u2', colorUp);\n  addLine('u2', 'u3', colorUp);\n  addLine('u3', 'u1', colorUp); // target\n\n  addLine('c', 't', colorTarget);\n  addLine('p', 'c', colorCross); // cross\n\n  addLine('cn1', 'cn2', colorCross);\n  addLine('cn3', 'cn4', colorCross);\n  addLine('cf1', 'cf2', colorCross);\n  addLine('cf3', 'cf4', colorCross);\n\n  function addLine(a, b, color) {\n    addPoint(a, color);\n    addPoint(b, color);\n  }\n\n  function addPoint(id, color) {\n    vertices.push(0, 0, 0);\n    colors.push(color.r, color.g, color.b);\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(vertices.length / 3 - 1);\n  }\n\n  geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n  LineSegments.call(this, geometry, material);\n  this.camera = camera;\n  if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n}\n\nCameraHelper.prototype = _Object$create(LineSegments.prototype);\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n  var geometry = this.geometry;\n  var pointMap = this.pointMap;\n  var w = 1,\n      h = 1; // we need just camera projection matrix inverse\n  // world matrix must be identity\n\n  _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n  setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n  setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n  setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n  setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n  setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n  setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n  setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n  setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n  setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n  setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n  setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n  setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n  setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n  setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n  setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n  setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n  setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n  setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n  setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n  setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n  setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n  geometry.getAttribute('position').needsUpdate = true;\n};\n\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n\n  var points = pointMap[point];\n\n  if (points !== undefined) {\n    var position = geometry.getAttribute('position');\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\n\nexport { CameraHelper };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/helpers/CameraHelper.js"],"names":["Camera","Vector3","LineSegments","Color","FaceColors","LineBasicMaterial","BufferGeometry","Float32BufferAttribute","_vector","_camera","CameraHelper","camera","geometry","material","color","vertexColors","vertices","colors","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","a","b","addPoint","id","push","r","g","undefined","length","setAttribute","call","updateProjectionMatrix","matrix","matrixWorld","matrixAutoUpdate","update","prototype","constructor","w","h","projectionMatrixInverse","copy","setPoint","getAttribute","needsUpdate","point","x","y","z","set","unproject","points","position","i","l","setXYZ"],"mappings":"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","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nimport { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { FaceColors } from '../constants.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = new Vector3();\nvar _camera = new Camera();\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry = this.geometry;\n\tvar pointMap = this.pointMap;\n\n\tvar w = 1, h = 1;\n\n\t// we need just camera projection matrix inverse\n\t// world matrix must be identity\n\n\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t// center / target\n\n\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t// near\n\n\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t// far\n\n\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t// up\n\n\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t// cross\n\n\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n};\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tvar points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nexport { CameraHelper };\n"]},"metadata":{},"sourceType":"module"}