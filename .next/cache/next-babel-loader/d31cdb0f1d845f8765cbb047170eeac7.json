{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\n\n/**\n * @author Artur Trzesiok\n */\nimport { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture3D(data, width, height, depth) {\n  // We're going to add .setXXX() methods for setting properties later.\n  // Users can still set in DataTexture3D directly.\n  //\n  //\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n  // \ttexture.anisotropy = 16;\n  //\n  // See #14839\n  Texture.call(this, null);\n  this.image = {\n    data: data || null,\n    width: width || 1,\n    height: height || 1,\n    depth: depth || 1\n  };\n  this.magFilter = NearestFilter;\n  this.minFilter = NearestFilter;\n  this.wrapR = ClampToEdgeWrapping;\n  this.generateMipmaps = false;\n  this.flipY = false;\n  this.needsUpdate = true;\n}\n\nDataTexture3D.prototype = _Object$create(Texture.prototype);\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\nexport { DataTexture3D };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/textures/DataTexture3D.js"],"names":["Texture","ClampToEdgeWrapping","NearestFilter","DataTexture3D","data","width","height","depth","call","image","magFilter","minFilter","wrapR","generateMipmaps","flipY","needsUpdate","prototype","constructor","isDataTexture3D"],"mappings":";;AAAA;;;AAIA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,iBAAnD;;AAEA,SAASC,aAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAqD;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AAEAP,EAAAA,OAAO,CAACQ,IAAR,CAAc,IAAd,EAAoB,IAApB;AAEA,OAAKC,KAAL,GAAa;AAAEL,IAAAA,IAAI,EAAEA,IAAI,IAAI,IAAhB;AAAsBC,IAAAA,KAAK,EAAEA,KAAK,IAAI,CAAtC;AAAyCC,IAAAA,MAAM,EAAEA,MAAM,IAAI,CAA3D;AAA8DC,IAAAA,KAAK,EAAEA,KAAK,IAAI;AAA9E,GAAb;AAEA,OAAKG,SAAL,GAAiBR,aAAjB;AACA,OAAKS,SAAL,GAAiBT,aAAjB;AAEA,OAAKU,KAAL,GAAaX,mBAAb;AAEA,OAAKY,eAAL,GAAuB,KAAvB;AACA,OAAKC,KAAL,GAAa,KAAb;AAEA,OAAKC,WAAL,GAAmB,IAAnB;AAGA;;AAEDZ,aAAa,CAACa,SAAd,GAA0B,eAAehB,OAAO,CAACgB,SAAvB,CAA1B;AACAb,aAAa,CAACa,SAAd,CAAwBC,WAAxB,GAAsCd,aAAtC;AACAA,aAAa,CAACa,SAAd,CAAwBE,eAAxB,GAA0C,IAA1C;AAEA,SAASf,aAAT","sourcesContent":["/**\n * @author Artur Trzesiok\n */\n\nimport { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\nexport { DataTexture3D };\n"]},"metadata":{},"sourceType":"module"}