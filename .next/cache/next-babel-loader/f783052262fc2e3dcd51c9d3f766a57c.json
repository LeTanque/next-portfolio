{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { VertexColors } from '../constants.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Object3D } from '../core/Object3D.js';\n\nvar _vector = new Vector3();\n\nvar _boneMatrix = new Matrix4();\n\nvar _matrixWorldInv = new Matrix4();\n\nfunction getBoneList(object) {\n  var boneList = [];\n\n  if (object && object.isBone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n\n  return boneList;\n}\n\nfunction SkeletonHelper(object) {\n  var bones = getBoneList(object);\n  var geometry = new BufferGeometry();\n  var vertices = [];\n  var colors = [];\n  var color1 = new Color(0, 0, 1);\n  var color2 = new Color(0, 1, 0);\n\n  for (var i = 0; i < bones.length; i++) {\n    var bone = bones[i];\n\n    if (bone.parent && bone.parent.isBone) {\n      vertices.push(0, 0, 0);\n      vertices.push(0, 0, 0);\n      colors.push(color1.r, color1.g, color1.b);\n      colors.push(color2.r, color2.g, color2.b);\n    }\n  }\n\n  geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  LineSegments.call(this, geometry, material);\n  this.root = object;\n  this.bones = bones;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n}\n\nSkeletonHelper.prototype = _Object$create(LineSegments.prototype);\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function (force) {\n  var bones = this.bones;\n  var geometry = this.geometry;\n  var position = geometry.getAttribute('position');\n\n  _matrixWorldInv.getInverse(this.root.matrixWorld);\n\n  for (var i = 0, j = 0; i < bones.length; i++) {\n    var bone = bones[i];\n\n    if (bone.parent && bone.parent.isBone) {\n      _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n      _vector.setFromMatrixPosition(_boneMatrix);\n\n      position.setXYZ(j, _vector.x, _vector.y, _vector.z);\n\n      _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n      _vector.setFromMatrixPosition(_boneMatrix);\n\n      position.setXYZ(j + 1, _vector.x, _vector.y, _vector.z);\n      j += 2;\n    }\n  }\n\n  geometry.getAttribute('position').needsUpdate = true;\n  Object3D.prototype.updateMatrixWorld.call(this, force);\n};\n\nexport { SkeletonHelper };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/helpers/SkeletonHelper.js"],"names":["LineSegments","Matrix4","VertexColors","LineBasicMaterial","Color","Vector3","BufferGeometry","Float32BufferAttribute","Object3D","_vector","_boneMatrix","_matrixWorldInv","getBoneList","object","boneList","isBone","push","i","children","length","apply","SkeletonHelper","bones","geometry","vertices","colors","color1","color2","bone","parent","r","g","b","setAttribute","material","vertexColors","depthTest","depthWrite","transparent","call","root","matrix","matrixWorld","matrixAutoUpdate","prototype","constructor","updateMatrixWorld","force","position","getAttribute","getInverse","j","multiplyMatrices","setFromMatrixPosition","setXYZ","x","y","z","needsUpdate"],"mappings":"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","sourcesContent":["/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { VertexColors } from '../constants.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Object3D } from '../core/Object3D.js';\n\nvar _vector = new Vector3();\nvar _boneMatrix = new Matrix4();\nvar _matrixWorldInv = new Matrix4();\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar bones = this.bones;\n\n\tvar geometry = this.geometry;\n\tvar position = geometry.getAttribute( 'position' );\n\n\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t_vector.setFromMatrixPosition( _boneMatrix );\n\t\t\tposition.setXYZ( j, _vector.x, _vector.y, _vector.z );\n\n\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t_vector.setFromMatrixPosition( _boneMatrix );\n\t\t\tposition.setXYZ( j + 1, _vector.x, _vector.y, _vector.z );\n\n\t\t\tj += 2;\n\n\t\t}\n\n\t}\n\n\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\nexport { SkeletonHelper };\n"]},"metadata":{},"sourceType":"module"}