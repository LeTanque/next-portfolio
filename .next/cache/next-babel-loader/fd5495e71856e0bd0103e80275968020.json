{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function RenderPass(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.overrideMaterial = overrideMaterial;\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n};\n\nRenderPass.prototype = _Object$assign(_Object$create(Pass.prototype), {\n  constructor: RenderPass,\n  render: function render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.scene.overrideMaterial = this.overrideMaterial;\n    var oldClearColor, oldClearAlpha;\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex();\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { RenderPass };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/threejs-render/resources/postprocessing/RenderPass.js"],"names":["Pass","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","call","undefined","clear","clearDepth","needsSwap","prototype","constructor","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","oldAutoClear","autoClear","oldClearColor","oldClearAlpha","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,WAArB;AACA;;;;AAIA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CACbC,KADa,EAEbC,MAFa,EAGbC,gBAHa,EAIbC,UAJa,EAKbC,UALa,EAMf;AACEN,EAAAA,IAAI,CAACO,IAAL,CAAU,IAAV;AAEA,OAAKL,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AAEA,OAAKC,gBAAL,GAAwBA,gBAAxB;AAEA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,UAAL,GAAkBA,UAAU,KAAKE,SAAf,GAA2BF,UAA3B,GAAwC,CAA1D;AAEA,OAAKG,KAAL,GAAa,IAAb;AACA,OAAKC,UAAL,GAAkB,KAAlB;AACA,OAAKC,SAAL,GAAiB,KAAjB;AACH,CApBD;;AAsBAV,UAAU,CAACW,SAAX,GAAuB,eAAc,eAAcZ,IAAI,CAACY,SAAnB,CAAd,EAA6C;AAChEC,EAAAA,WAAW,EAAEZ,UADmD;AAGhEa,EAAAA,MAAM,EAAE,gBAASC,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,SAA5C,EAAuDC,UAAvD,EAAmE;AACvE,QAAIC,YAAY,GAAGL,QAAQ,CAACM,SAA5B;AACAN,IAAAA,QAAQ,CAACM,SAAT,GAAqB,KAArB;AAEA,SAAKnB,KAAL,CAAWE,gBAAX,GAA8B,KAAKA,gBAAnC;AAEA,QAAIkB,aAAJ,EAAmBC,aAAnB;;AAEA,QAAI,KAAKlB,UAAT,EAAqB;AACjBiB,MAAAA,aAAa,GAAGP,QAAQ,CAACS,aAAT,GAAyBC,MAAzB,EAAhB;AACAF,MAAAA,aAAa,GAAGR,QAAQ,CAACW,aAAT,EAAhB;AAEAX,MAAAA,QAAQ,CAACY,aAAT,CAAuB,KAAKtB,UAA5B,EAAwC,KAAKC,UAA7C;AACH;;AAED,QAAI,KAAKI,UAAT,EAAqB;AACjBK,MAAAA,QAAQ,CAACL,UAAT;AACH;;AAEDK,IAAAA,QAAQ,CAACa,eAAT,CAAyB,KAAKC,cAAL,GAAsB,IAAtB,GAA6BZ,UAAtD,EAnBuE,CAqBvE;;AACA,QAAI,KAAKR,KAAT,EACIM,QAAQ,CAACN,KAAT,CACIM,QAAQ,CAACe,cADb,EAEIf,QAAQ,CAACgB,cAFb,EAGIhB,QAAQ,CAACiB,gBAHb;AAKJjB,IAAAA,QAAQ,CAACD,MAAT,CAAgB,KAAKZ,KAArB,EAA4B,KAAKC,MAAjC;;AAEA,QAAI,KAAKE,UAAT,EAAqB;AACjBU,MAAAA,QAAQ,CAACY,aAAT,CAAuBL,aAAvB,EAAsCC,aAAtC;AACH;;AAED,SAAKrB,KAAL,CAAWE,gBAAX,GAA8B,IAA9B;AACAW,IAAAA,QAAQ,CAACM,SAAT,GAAqBD,YAArB;AACH;AAvC+D,CAA7C,CAAvB;AA0CA,SAASnB,UAAT","sourcesContent":["import { Pass } from \"./Pass.js\";\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function(\n    scene,\n    camera,\n    overrideMaterial,\n    clearColor,\n    clearAlpha\n) {\n    Pass.call(this);\n\n    this.scene = scene;\n    this.camera = camera;\n\n    this.overrideMaterial = overrideMaterial;\n\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\n    this.clear = true;\n    this.clearDepth = false;\n    this.needsSwap = false;\n};\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n    constructor: RenderPass,\n\n    render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n        var oldAutoClear = renderer.autoClear;\n        renderer.autoClear = false;\n\n        this.scene.overrideMaterial = this.overrideMaterial;\n\n        var oldClearColor, oldClearAlpha;\n\n        if (this.clearColor) {\n            oldClearColor = renderer.getClearColor().getHex();\n            oldClearAlpha = renderer.getClearAlpha();\n\n            renderer.setClearColor(this.clearColor, this.clearAlpha);\n        }\n\n        if (this.clearDepth) {\n            renderer.clearDepth();\n        }\n\n        renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n\n        // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n        if (this.clear)\n            renderer.clear(\n                renderer.autoClearColor,\n                renderer.autoClearDepth,\n                renderer.autoClearStencil\n            );\n        renderer.render(this.scene, this.camera);\n\n        if (this.clearColor) {\n            renderer.setClearColor(oldClearColor, oldClearAlpha);\n        }\n\n        this.scene.overrideMaterial = null;\n        renderer.autoClear = oldAutoClear;\n    }\n});\n\nexport { RenderPass };\n"]},"metadata":{},"sourceType":"module"}