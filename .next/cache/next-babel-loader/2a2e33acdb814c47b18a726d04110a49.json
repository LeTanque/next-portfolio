{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial(parameters) {\n  Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new Color(0xffffff);\n  this.map = null;\n  this.alphaMap = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.morphTargets = false;\n  this.setValues(parameters);\n}\n\nPointsMaterial.prototype = _Object$create(Material.prototype);\nPointsMaterial.prototype.constructor = PointsMaterial;\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.morphTargets = source.morphTargets;\n  return this;\n};\n\nexport { PointsMaterial };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/materials/PointsMaterial.js"],"names":["Material","Color","PointsMaterial","parameters","call","type","color","map","alphaMap","size","sizeAttenuation","morphTargets","setValues","prototype","constructor","isPointsMaterial","copy","source"],"mappings":";AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA;;;;;;;;;;;;;;;;;AAiBA,SAASC,cAAT,CAAyBC,UAAzB,EAAsC;AAErCH,EAAAA,QAAQ,CAACI,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,gBAAZ;AAEA,OAAKC,KAAL,GAAa,IAAIL,KAAJ,CAAW,QAAX,CAAb;AAEA,OAAKM,GAAL,GAAW,IAAX;AAEA,OAAKC,QAAL,GAAgB,IAAhB;AAEA,OAAKC,IAAL,GAAY,CAAZ;AACA,OAAKC,eAAL,GAAuB,IAAvB;AAEA,OAAKC,YAAL,GAAoB,KAApB;AAEA,OAAKC,SAAL,CAAgBT,UAAhB;AAEA;;AAEDD,cAAc,CAACW,SAAf,GAA2B,eAAeb,QAAQ,CAACa,SAAxB,CAA3B;AACAX,cAAc,CAACW,SAAf,CAAyBC,WAAzB,GAAuCZ,cAAvC;AAEAA,cAAc,CAACW,SAAf,CAAyBE,gBAAzB,GAA4C,IAA5C;;AAEAb,cAAc,CAACW,SAAf,CAAyBG,IAAzB,GAAgC,UAAWC,MAAX,EAAoB;AAEnDjB,EAAAA,QAAQ,CAACa,SAAT,CAAmBG,IAAnB,CAAwBZ,IAAxB,CAA8B,IAA9B,EAAoCa,MAApC;AAEA,OAAKX,KAAL,CAAWU,IAAX,CAAiBC,MAAM,CAACX,KAAxB;AAEA,OAAKC,GAAL,GAAWU,MAAM,CAACV,GAAlB;AAEA,OAAKC,QAAL,GAAgBS,MAAM,CAACT,QAAvB;AAEA,OAAKC,IAAL,GAAYQ,MAAM,CAACR,IAAnB;AACA,OAAKC,eAAL,GAAuBO,MAAM,CAACP,eAA9B;AAEA,OAAKC,YAAL,GAAoBM,MAAM,CAACN,YAA3B;AAEA,SAAO,IAAP;AAEA,CAjBD;;AAoBA,SAAST,cAAT","sourcesContent":["import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n\nexport { PointsMaterial };\n"]},"metadata":{},"sourceType":"module"}