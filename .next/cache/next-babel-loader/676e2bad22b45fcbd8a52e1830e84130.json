{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\nvar AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function arraySlice(array, from, to) {\n    if (AnimationUtils.isTypedArray(array)) {\n      // in ios9 array.subarray(from, undefined) will return empty array\n      // but array.subarray(from) or array.subarray(from, len) is correct\n      return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n    }\n\n    return array.slice(from, to);\n  },\n  // converts an array to a specific type\n  convertArray: function convertArray(array, type, forceClone) {\n    if (!array || // let 'undefined' and 'null' pass\n    !forceClone && array.constructor === type) return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n  isTypedArray: function isTypedArray(object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function getKeyframeOrder(times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    var n = times.length;\n    var result = new Array(n);\n\n    for (var i = 0; i !== n; ++i) {\n      result[i] = i;\n    }\n\n    result.sort(compareTime);\n    return result;\n  },\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function sortedArray(values, stride, order) {\n    var nValues = values.length;\n    var result = new values.constructor(nValues);\n\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      var srcOffset = order[i] * stride;\n\n      for (var j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n  // function for parsing AOS keyframe formats\n  flattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n    var i = 1,\n        key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    var value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (_Array$isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  },\n  subclip: function subclip(sourceClip, name, startFrame, endFrame, fps) {\n    fps = fps || 30;\n    var clip = sourceClip.clone();\n    clip.name = name;\n    var tracks = [];\n\n    for (var i = 0; i < clip.tracks.length; ++i) {\n      var track = clip.tracks[i];\n      var valueSize = track.getValueSize();\n      var times = [];\n      var values = [];\n\n      for (var j = 0; j < track.times.length; ++j) {\n        var frame = track.times[j] * fps;\n        if (frame < startFrame || frame >= endFrame) continue;\n        times.push(track.times[j]);\n\n        for (var k = 0; k < valueSize; ++k) {\n          values.push(track.values[j * valueSize + k]);\n        }\n      }\n\n      if (times.length === 0) continue;\n      track.times = AnimationUtils.convertArray(times, track.times.constructor);\n      track.values = AnimationUtils.convertArray(values, track.values.constructor);\n      tracks.push(track);\n    }\n\n    clip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n    var minStartTime = Infinity;\n\n    for (var i = 0; i < clip.tracks.length; ++i) {\n      if (minStartTime > clip.tracks[i].times[0]) {\n        minStartTime = clip.tracks[i].times[0];\n      }\n    } // shift all tracks such that clip begins at t=0\n\n\n    for (var i = 0; i < clip.tracks.length; ++i) {\n      clip.tracks[i].shift(-1 * minStartTime);\n    }\n\n    clip.resetDuration();\n    return clip;\n  }\n};\nexport { AnimationUtils };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/animation/AnimationUtils.js"],"names":["AnimationUtils","arraySlice","array","from","to","isTypedArray","constructor","subarray","undefined","length","slice","convertArray","type","forceClone","BYTES_PER_ELEMENT","Array","prototype","call","object","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","i","j","n","result","sort","sortedArray","values","stride","order","nValues","dstOffset","srcOffset","flattenJSON","jsonKeys","valuePropertyName","key","value","push","time","apply","toArray","subclip","sourceClip","name","startFrame","endFrame","fps","clip","clone","tracks","track","valueSize","getValueSize","frame","k","minStartTime","Infinity","shift","resetDuration"],"mappings":"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","sourcesContent":["/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\tfps = fps || 30;\n\n\t\tvar clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tvar track = clip.tracks[ i ];\n\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tvar minStartTime = Infinity;\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t}\n\n};\n\nexport { AnimationUtils };\n"]},"metadata":{},"sourceType":"module"}