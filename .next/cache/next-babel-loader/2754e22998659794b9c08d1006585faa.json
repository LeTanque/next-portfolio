{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\nimport { SphericalHarmonics3 } from '../math/SphericalHarmonics3.js';\nimport { Light } from './Light.js';\n\nfunction LightProbe(sh, intensity) {\n  Light.call(this, undefined, intensity);\n  this.sh = sh !== undefined ? sh : new SphericalHarmonics3();\n}\n\nLightProbe.prototype = _Object$assign(_Object$create(Light.prototype), {\n  constructor: LightProbe,\n  isLightProbe: true,\n  copy: function copy(source) {\n    Light.prototype.copy.call(this, source);\n    this.sh.copy(source.sh);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function toJSON(meta) {\n    var data = Light.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n    return data;\n  }\n});\nexport { LightProbe };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/lights/LightProbe.js"],"names":["SphericalHarmonics3","Light","LightProbe","sh","intensity","call","undefined","prototype","constructor","isLightProbe","copy","source","toJSON","meta","data"],"mappings":";;;AAAA;;;;;AAMA,SAASA,mBAAT,QAAoC,gCAApC;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,SAASC,UAAT,CAAqBC,EAArB,EAAyBC,SAAzB,EAAqC;AAEpCH,EAAAA,KAAK,CAACI,IAAN,CAAY,IAAZ,EAAkBC,SAAlB,EAA6BF,SAA7B;AAEA,OAAKD,EAAL,GAAYA,EAAE,KAAKG,SAAT,GAAuBH,EAAvB,GAA4B,IAAIH,mBAAJ,EAAtC;AAEA;;AAEDE,UAAU,CAACK,SAAX,GAAuB,eAAe,eAAeN,KAAK,CAACM,SAArB,CAAf,EAAiD;AAEvEC,EAAAA,WAAW,EAAEN,UAF0D;AAIvEO,EAAAA,YAAY,EAAE,IAJyD;AAMvEC,EAAAA,IAAI,EAAE,cAAWC,MAAX,EAAoB;AAEzBV,IAAAA,KAAK,CAACM,SAAN,CAAgBG,IAAhB,CAAqBL,IAArB,CAA2B,IAA3B,EAAiCM,MAAjC;AAEA,SAAKR,EAAL,CAAQO,IAAR,CAAcC,MAAM,CAACR,EAArB;AACA,SAAKC,SAAL,GAAiBO,MAAM,CAACP,SAAxB;AAEA,WAAO,IAAP;AAEA,GAfsE;AAiBvEQ,EAAAA,MAAM,EAAE,gBAAWC,IAAX,EAAkB;AAEzB,QAAIC,IAAI,GAAGb,KAAK,CAACM,SAAN,CAAgBK,MAAhB,CAAuBP,IAAvB,CAA6B,IAA7B,EAAmCQ,IAAnC,CAAX,CAFyB,CAIzB;;AAEA,WAAOC,IAAP;AAEA;AAzBsE,CAAjD,CAAvB;AA6BA,SAASZ,UAAT","sourcesContent":["/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\n\nimport { SphericalHarmonics3 } from '../math/SphericalHarmonics3.js';\nimport { Light } from './Light.js';\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nexport { LightProbe };\n"]},"metadata":{},"sourceType":"module"}