{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial(parameters) {\n  Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.setValues(parameters);\n}\n\nLineBasicMaterial.prototype = _Object$create(Material.prototype);\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  return this;\n};\n\nexport { LineBasicMaterial };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/materials/LineBasicMaterial.js"],"names":["Material","Color","LineBasicMaterial","parameters","call","type","color","linewidth","linecap","linejoin","setValues","prototype","constructor","isLineBasicMaterial","copy","source"],"mappings":";AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA;;;;;;;;;;;;;;AAcA,SAASC,iBAAT,CAA4BC,UAA5B,EAAyC;AAExCH,EAAAA,QAAQ,CAACI,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,mBAAZ;AAEA,OAAKC,KAAL,GAAa,IAAIL,KAAJ,CAAW,QAAX,CAAb;AAEA,OAAKM,SAAL,GAAiB,CAAjB;AACA,OAAKC,OAAL,GAAe,OAAf;AACA,OAAKC,QAAL,GAAgB,OAAhB;AAEA,OAAKC,SAAL,CAAgBP,UAAhB;AAEA;;AAEDD,iBAAiB,CAACS,SAAlB,GAA8B,eAAeX,QAAQ,CAACW,SAAxB,CAA9B;AACAT,iBAAiB,CAACS,SAAlB,CAA4BC,WAA5B,GAA0CV,iBAA1C;AAEAA,iBAAiB,CAACS,SAAlB,CAA4BE,mBAA5B,GAAkD,IAAlD;;AAEAX,iBAAiB,CAACS,SAAlB,CAA4BG,IAA5B,GAAmC,UAAWC,MAAX,EAAoB;AAEtDf,EAAAA,QAAQ,CAACW,SAAT,CAAmBG,IAAnB,CAAwBV,IAAxB,CAA8B,IAA9B,EAAoCW,MAApC;AAEA,OAAKT,KAAL,CAAWQ,IAAX,CAAiBC,MAAM,CAACT,KAAxB;AAEA,OAAKC,SAAL,GAAiBQ,MAAM,CAACR,SAAxB;AACA,OAAKC,OAAL,GAAeO,MAAM,CAACP,OAAtB;AACA,OAAKC,QAAL,GAAgBM,MAAM,CAACN,QAAvB;AAEA,SAAO,IAAP;AAEA,CAZD;;AAeA,SAASP,iBAAT","sourcesContent":["import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n\nexport { LineBasicMaterial };\n"]},"metadata":{},"sourceType":"module"}