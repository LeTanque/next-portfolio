{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { AudioContext } from '../audio/AudioContext.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader(manager) {\n  Loader.call(this, manager);\n}\n\nAudioLoader.prototype = _Object$assign(_Object$create(Loader.prototype), {\n  constructor: AudioLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.setPath(this.path);\n    loader.load(url, function (buffer) {\n      // Create a copy of the buffer. The `decodeAudioData` method\n      // detaches the buffer when complete, preventing reuse.\n      var bufferCopy = buffer.slice(0);\n      var context = AudioContext.getContext();\n      context.decodeAudioData(bufferCopy, function (audioBuffer) {\n        onLoad(audioBuffer);\n      });\n    }, onProgress, onError);\n  }\n});\nexport { AudioLoader };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/loaders/AudioLoader.js"],"names":["AudioContext","FileLoader","Loader","AudioLoader","manager","call","prototype","constructor","load","url","onLoad","onProgress","onError","loader","setResponseType","setPath","path","buffer","bufferCopy","slice","context","getContext","decodeAudioData","audioBuffer"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA;;;;AAIA,SAASC,WAAT,CAAsBC,OAAtB,EAAgC;AAE/BF,EAAAA,MAAM,CAACG,IAAP,CAAa,IAAb,EAAmBD,OAAnB;AAEA;;AAEDD,WAAW,CAACG,SAAZ,GAAwB,eAAe,eAAeJ,MAAM,CAACI,SAAtB,CAAf,EAAkD;AAEzEC,EAAAA,WAAW,EAAEJ,WAF4D;AAIzEK,EAAAA,IAAI,EAAE,cAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,QAAIC,MAAM,GAAG,IAAIZ,UAAJ,CAAgB,KAAKG,OAArB,CAAb;AACAS,IAAAA,MAAM,CAACC,eAAP,CAAwB,aAAxB;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAgB,KAAKC,IAArB;AACAH,IAAAA,MAAM,CAACL,IAAP,CAAaC,GAAb,EAAkB,UAAWQ,MAAX,EAAoB;AAErC;AACA;AACA,UAAIC,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAc,CAAd,CAAjB;AAEA,UAAIC,OAAO,GAAGpB,YAAY,CAACqB,UAAb,EAAd;AACAD,MAAAA,OAAO,CAACE,eAAR,CAAyBJ,UAAzB,EAAqC,UAAWK,WAAX,EAAyB;AAE7Db,QAAAA,MAAM,CAAEa,WAAF,CAAN;AAEA,OAJD;AAMA,KAbD,EAaGZ,UAbH,EAaeC,OAbf;AAeA;AAxBwE,CAAlD,CAAxB;AA6BA,SAAST,WAAT","sourcesContent":["import { AudioContext } from '../audio/AudioContext.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AudioLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n\nexport { AudioLoader };\n"]},"metadata":{},"sourceType":"module"}