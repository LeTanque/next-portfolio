{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Object3D } from '../core/Object3D.js';\nimport { WebGLRenderTargetCube } from '../renderers/WebGLRenderTargetCube.js';\nimport { LinearFilter, RGBFormat } from '../constants.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90,\n    aspect = 1;\n\nfunction CubeCamera(near, far, cubeResolution, options) {\n  Object3D.call(this);\n  this.type = 'CubeCamera';\n  var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  options = options || {\n    format: RGBFormat,\n    magFilter: LinearFilter,\n    minFilter: LinearFilter\n  };\n  this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n  this.renderTarget.texture.name = \"CubeCamera\";\n\n  this.update = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var currentRenderTarget = renderer.getRenderTarget();\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderer.setRenderTarget(renderTarget, 0);\n    renderer.render(scene, cameraPX);\n    renderer.setRenderTarget(renderTarget, 1);\n    renderer.render(scene, cameraNX);\n    renderer.setRenderTarget(renderTarget, 2);\n    renderer.render(scene, cameraPY);\n    renderer.setRenderTarget(renderTarget, 3);\n    renderer.render(scene, cameraNY);\n    renderer.setRenderTarget(renderTarget, 4);\n    renderer.render(scene, cameraPZ);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderer.setRenderTarget(renderTarget, 5);\n    renderer.render(scene, cameraNZ);\n    renderer.setRenderTarget(currentRenderTarget);\n  };\n\n  this.clear = function (renderer, color, depth, stencil) {\n    var currentRenderTarget = renderer.getRenderTarget();\n    var renderTarget = this.renderTarget;\n\n    for (var i = 0; i < 6; i++) {\n      renderer.setRenderTarget(renderTarget, i);\n      renderer.clear(color, depth, stencil);\n    }\n\n    renderer.setRenderTarget(currentRenderTarget);\n  };\n}\n\nCubeCamera.prototype = _Object$create(Object3D.prototype);\nCubeCamera.prototype.constructor = CubeCamera;\nexport { CubeCamera };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/cameras/CubeCamera.js"],"names":["Object3D","WebGLRenderTargetCube","LinearFilter","RGBFormat","Vector3","PerspectiveCamera","fov","aspect","CubeCamera","near","far","cubeResolution","options","call","type","cameraPX","up","set","lookAt","add","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","format","magFilter","minFilter","renderTarget","texture","name","update","renderer","scene","parent","updateMatrixWorld","currentRenderTarget","getRenderTarget","generateMipmaps","setRenderTarget","render","clear","color","depth","stencil","i","prototype","constructor"],"mappings":"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","sourcesContent":["import { Object3D } from '../core/Object3D.js';\nimport { WebGLRenderTargetCube } from '../renderers/WebGLRenderTargetCube.js';\nimport { LinearFilter, RGBFormat } from '../constants.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n\nexport { CubeCamera };\n"]},"metadata":{},"sourceType":"module"}