{"ast":null,"code":"import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n  basic: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      specular: {\n        value: new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      roughness: {\n        value: 0.5\n      },\n      metalness: {\n        value: 0.5\n      },\n      envMapIntensity: {\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  toon: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      specular: {\n        value: new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshtoon_vert,\n    fragmentShader: ShaderChunk.meshtoon_frag\n  },\n  matcap: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n      matcap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshmatcap_vert,\n    fragmentShader: ShaderChunk.meshmatcap_frag\n  },\n  points: {\n    uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n      scale: {\n        value: 1\n      },\n      dashSize: {\n        value: 1\n      },\n      totalSize: {\n        value: 2\n      }\n    }]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.normal_vert,\n    fragmentShader: ShaderChunk.normal_frag\n  },\n  sprite: {\n    uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n    vertexShader: ShaderChunk.sprite_vert,\n    fragmentShader: ShaderChunk.sprite_frag\n  },\n  background: {\n    uniforms: {\n      uvTransform: {\n        value: new Matrix3()\n      },\n      t2D: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.background_vert,\n    fragmentShader: ShaderChunk.background_frag\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  cube: {\n    uniforms: mergeUniforms([UniformsLib.envmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  equirect: {\n    uniforms: {\n      tEquirect: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n      referencePosition: {\n        value: new Vector3()\n      },\n      nearDistance: {\n        value: 1\n      },\n      farDistance: {\n        value: 1000\n      }\n    }]),\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  },\n  shadow: {\n    uniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n      color: {\n        value: new Color(0x00000)\n      },\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n    transparency: {\n      value: 0\n    },\n    clearcoat: {\n      value: 0\n    },\n    clearcoatRoughness: {\n      value: 0\n    },\n    sheen: {\n      value: new Color(0x000000)\n    },\n    clearcoatNormalScale: {\n      value: new Vector2(1, 1)\n    },\n    clearcoatNormalMap: {\n      value: null\n    }\n  }]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\nexport { ShaderLib };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/renderers/shaders/ShaderLib.js"],"names":["ShaderChunk","mergeUniforms","Vector2","Vector3","UniformsLib","Color","Matrix3","ShaderLib","basic","uniforms","common","specularmap","envmap","aomap","lightmap","fog","vertexShader","meshbasic_vert","fragmentShader","meshbasic_frag","lambert","emissivemap","lights","emissive","value","meshlambert_vert","meshlambert_frag","phong","bumpmap","normalmap","displacementmap","specular","shininess","meshphong_vert","meshphong_frag","standard","roughnessmap","metalnessmap","roughness","metalness","envMapIntensity","meshphysical_vert","meshphysical_frag","toon","gradientmap","meshtoon_vert","meshtoon_frag","matcap","meshmatcap_vert","meshmatcap_frag","points","points_vert","points_frag","dashed","scale","dashSize","totalSize","linedashed_vert","linedashed_frag","depth","depth_vert","depth_frag","normal","opacity","normal_vert","normal_frag","sprite","sprite_vert","sprite_frag","background","uvTransform","t2D","background_vert","background_frag","cube","cube_vert","cube_frag","equirect","tEquirect","equirect_vert","equirect_frag","distanceRGBA","referencePosition","nearDistance","farDistance","distanceRGBA_vert","distanceRGBA_frag","shadow","color","shadow_vert","shadow_frag","physical","transparency","clearcoat","clearcoatRoughness","sheen","clearcoatNormalScale","clearcoatNormalMap"],"mappings":"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","sourcesContent":["import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\ttransparency: { value: 0 },\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n"]},"metadata":{},"sourceType":"module"}