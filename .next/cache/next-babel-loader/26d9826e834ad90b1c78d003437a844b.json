{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\nimport ThreeContainer from \"../components/threejs-render/ThreeContainer\";\n\nconst Skills = () => {\n  const namesOfSkills = [\"passion\", \"teams\", \"friends\", \"open-source\", \"Raspberry Pi\", \"Arduino\", \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"JavaScript\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"Linux\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\"];\n  const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n  const {\n    0: skillsWithCharacters,\n    1: setSkillsWithCharacters\n  } = useState();\n  useEffect(() => {\n    if (!skillsWithCharacters) {\n      const finalArray = getArrSkillsWithCharacters(namesOfSkills, characters);\n      setSkillsWithCharacters(finalArray);\n    }\n  }, []);\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const getNumberOfRandomCharacters = (number, chars) => {\n    if (!number) number = 9;\n    return chars.substr(getRandomInt(0, chars.length - number), number + 1);\n  };\n\n  const getArrSkillsWithCharacters = (skills, chars) => {\n    let skillCharArr = [];\n\n    for (let i = 0; i <= 88; i++) {\n      let selectSkill = skills[getRandomInt(0, namesOfSkills.length - 1)];\n      let createChars = getNumberOfRandomCharacters(selectSkill.length - 1, chars);\n      skillCharArr.push(selectSkill);\n    }\n\n    ;\n    return skillCharArr;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"section__skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    className: \"main__textlooper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"I love building with\\xA0\"), skillsWithCharacters ? __jsx(TextLoop, {\n    interval: [2000, 3000],\n    delay: 0,\n    mask: false,\n    fade: true,\n    noWrap: false,\n    springConfig: {\n      stiffness: 300,\n      damping: 53,\n      precision: 0.1\n    },\n    adjustingSpeed: 150,\n    className: \"text-loop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, skillsWithCharacters.map((entry, index) => __jsx(React.Fragment, {\n    key: index + \"-\" + entry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, skillsWithCharacters[index]), __jsx(SimpleIcons, {\n    name: entry,\n    className: \"icon--skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))) : null), __jsx(ThreeContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n};\n\nexport default Skills;","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx"],"names":["useState","useEffect","SimpleIcons","TextLoop","ThreeContainer","Skills","namesOfSkills","characters","skillsWithCharacters","setSkillsWithCharacters","finalArray","getArrSkillsWithCharacters","getRandomInt","min","max","Math","ceil","floor","random","getNumberOfRandomCharacters","number","chars","substr","length","skills","skillCharArr","i","selectSkill","createChars","push","stiffness","damping","precision","map","entry","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\nimport ThreeContainer from \"../components/threejs-render/ThreeContainer\";\n\n\nconst Skills = () => {\n    const namesOfSkills = [ \"passion\", \"teams\", \"friends\", \"open-source\", \"Raspberry Pi\", \"Arduino\", \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"JavaScript\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"Linux\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\" ] \n    const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n    const [ skillsWithCharacters, setSkillsWithCharacters ] = useState();\n    \n    useEffect(() => {\n        if (!skillsWithCharacters) {\n            const finalArray = getArrSkillsWithCharacters(namesOfSkills, characters);\n            setSkillsWithCharacters(finalArray);\n        }\n    }, [])\n    \n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    const getNumberOfRandomCharacters = (number, chars) => {\n        if (!number) number = 9;\n        return chars.substr(getRandomInt(0, chars.length - number), number + 1)\n    }\n\n    const getArrSkillsWithCharacters = (skills, chars) => {\n        let skillCharArr = [];\n        for (let i=0; i<=88; i++) {\n            let selectSkill = skills[getRandomInt(0, namesOfSkills.length - 1)];\n            let createChars = getNumberOfRandomCharacters(selectSkill.length - 1, chars)\n            skillCharArr.push(selectSkill);\n        };\n        return skillCharArr;\n    }\n\n    return (\n        <>\n            <section className=\"section__skills\" >\n\n                <main className=\"main__textlooper\">\n                    <div className=\"block__title\">I love building with&nbsp;</div>\n                    {skillsWithCharacters ? (\n                        <TextLoop \n                            interval={[2000, 3000]}\n                            delay={0}\n                            mask={false} \n                            fade={true}\n                            noWrap={false}\n                            springConfig={{ stiffness: 300, damping: 53, precision: 0.1 }}\n                            adjustingSpeed={150}\n                            className=\"text-loop\"\n                        >\n                            {skillsWithCharacters.map((entry, index) => (\n                                <React.Fragment key={index + \"-\" + entry}>\n                                    <h3 >\n                                        {skillsWithCharacters[index]}\n                                    </h3>\n                                    <SimpleIcons \n                                        name={entry}\n                                        className=\"icon--skills\"\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </TextLoop >\n                    ) : null}\n\n                </main>\n\n                <ThreeContainer />\n\n            </section>\n        </>\n    );\n}\n\n\nexport default Skills;\n\n"]},"metadata":{},"sourceType":"module"}