{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow(camera) {\n  this.camera = camera;\n  this.bias = 0;\n  this.radius = 1;\n  this.mapSize = new Vector2(512, 512);\n  this.map = null;\n  this.mapPass = null;\n  this.matrix = new Matrix4();\n  this._frustum = new Frustum();\n  this._frameExtents = new Vector2(1, 1);\n  this._viewportCount = 1;\n  this._viewports = [new Vector4(0, 0, 1, 1)];\n}\n\n_Object$assign(LightShadow.prototype, {\n  _projScreenMatrix: new Matrix4(),\n  _lightPositionWorld: new Vector3(),\n  _lookTarget: new Vector3(),\n  getViewportCount: function getViewportCount() {\n    return this._viewportCount;\n  },\n  getFrustum: function getFrustum() {\n    return this._frustum;\n  },\n  updateMatrices: function updateMatrices(light) {\n    var shadowCamera = this.camera,\n        shadowMatrix = this.matrix,\n        projScreenMatrix = this._projScreenMatrix,\n        lookTarget = this._lookTarget,\n        lightPositionWorld = this._lightPositionWorld;\n    lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n    shadowCamera.position.copy(lightPositionWorld);\n    lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n    shadowCamera.lookAt(lookTarget);\n    shadowCamera.updateMatrixWorld();\n    projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n    this._frustum.setFromMatrix(projScreenMatrix);\n\n    shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    shadowMatrix.multiply(shadowCamera.projectionMatrix);\n    shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n  },\n  getViewport: function getViewport(viewportIndex) {\n    return this._viewports[viewportIndex];\n  },\n  getFrameExtents: function getFrameExtents() {\n    return this._frameExtents;\n  },\n  copy: function copy(source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor().copy(this);\n  },\n  toJSON: function toJSON() {\n    var object = {};\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n});\n\nexport { LightShadow };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/lights/LightShadow.js"],"names":["Matrix4","Vector2","Vector3","Vector4","Frustum","LightShadow","camera","bias","radius","mapSize","map","mapPass","matrix","_frustum","_frameExtents","_viewportCount","_viewports","prototype","_projScreenMatrix","_lightPositionWorld","_lookTarget","getViewportCount","getFrustum","updateMatrices","light","shadowCamera","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","setFromMatrixPosition","matrixWorld","position","copy","target","lookAt","updateMatrixWorld","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","set","multiply","getViewport","viewportIndex","getFrameExtents","source","clone","constructor","toJSON","object","x","y","toArray"],"mappings":"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","sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.mapPass = null;\n\tthis.matrix = new Matrix4();\n\n\tthis._frustum = new Frustum();\n\tthis._frameExtents = new Vector2( 1, 1 );\n\n\tthis._viewportCount = 1;\n\n\tthis._viewports = [\n\n\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t];\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\t_projScreenMatrix: new Matrix4(),\n\n\t_lightPositionWorld: new Vector3(),\n\n\t_lookTarget: new Vector3(),\n\n\tgetViewportCount: function () {\n\n\t\treturn this._viewportCount;\n\n\t},\n\n\tgetFrustum: function () {\n\n\t\treturn this._frustum;\n\n\t},\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar shadowCamera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t},\n\n\tgetViewport: function ( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t},\n\n\tgetFrameExtents: function () {\n\n\t\treturn this._frameExtents;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n\nexport { LightShadow };\n"]},"metadata":{},"sourceType":"module"}