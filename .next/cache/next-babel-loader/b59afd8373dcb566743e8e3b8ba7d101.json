{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ProgressiveImage from \"react-progressive-image-loading\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { RandomTanque } from 'react-animated-text-tanque'; // This is the body of the skills page\n\nconst SkillsBody = () => __jsx(\"section\", {\n  className: \"block--skills-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"block--skills\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})));\n\nconst Skills = () => {\n  const {\n    0: width,\n    1: setWidth\n  } = useState(null);\n  const {\n    0: skillsBlockHeight,\n    1: setSkillsBlockHeight\n  } = useState(\"200px\");\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    paused: true\n  }); // This hook listens for resize events, updates the above state with results\n\n  useLayoutEffect(() => {\n    // Check to see whether the client is a browser or not\n    if (false) {\n      // Add the event listener looking for resize. Set the hook.\n      window.addEventListener('resize', () => {\n        setWidth(window.innerWidth);\n      });\n      setWidth(window.innerWidth);\n    }\n\n    if (width <= 800) {\n      setSkillsBlockHeight(\"300px\");\n    } else if (width <= 1200 && width >= 801) {\n      setSkillsBlockHeight(\"200px\");\n    } else {\n      setSkillsBlockHeight(\"100%\");\n    }\n  }, [width]);\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"section__skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Random, {\n    text: \"aewjoaevoaevmoaevmaoeivm\",\n    paused: state.paused,\n    iterations: 1,\n    effect: \"verticalFadeIn\",\n    effectChange: 2,\n    effectDirection: \"up\",\n    className: \"cfont-pastegrey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default Skills;","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx"],"names":["ProgressiveImage","useLayoutEffect","useState","RandomTanque","SkillsBody","Skills","width","setWidth","skillsBlockHeight","setSkillsBlockHeight","state","setState","paused","window","addEventListener","innerWidth"],"mappings":";;;AAAA,OAAOA,gBAAP,MAA6B,iCAA7B;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CAMA;;AACA,MAAMC,UAAU,GAAG,MACf;AAAS,EAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;;AAYA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAAEM,iBAAF;AAAA,OAAqBC;AAArB,MAA8CP,QAAQ,CAAC,OAAD,CAA5D;AACA,QAAM;AAAA,OAAEQ,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACjCU,IAAAA,MAAM,EAAE;AADyB,GAAD,CAApC,CAHiB,CAOjB;;AACAX,EAAAA,eAAe,CAAC,MAAM;AAElB;AACA,eAAqB;AAEjB;AACAY,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpCP,QAAAA,QAAQ,CAACM,MAAM,CAACE,UAAR,CAAR;AACH,OAFD;AAIAR,MAAAA,QAAQ,CAACM,MAAM,CAACE,UAAR,CAAR;AACH;;AAED,QAAIT,KAAK,IAAI,GAAb,EAAkB;AACdG,MAAAA,oBAAoB,CAAC,OAAD,CAApB;AACH,KAFD,MAEO,IAAIH,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAI,GAA9B,EAAmC;AACtCG,MAAAA,oBAAoB,CAAC,OAAD,CAApB;AACH,KAFM,MAEA;AACHA,MAAAA,oBAAoB,CAAC,MAAD,CAApB;AACH;AAEJ,GArBc,EAqBZ,CAACH,KAAD,CArBY,CAAf;AAwBA,SACI,4BACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,MAAD;AACI,IAAA,IAAI,EAAE,0BADV;AAEI,IAAA,MAAM,EAAEI,KAAK,CAACE,MAFlB;AAGI,IAAA,UAAU,EAAE,CAHhB;AAII,IAAA,MAAM,EAAC,gBAJX;AAKI,IAAA,YAAY,EAAE,CALlB;AAMI,IAAA,eAAe,EAAC,IANpB;AAOI,IAAA,SAAS,EAAC,iBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAgCH,CAhED;;AAmEA,eAAeP,MAAf","sourcesContent":["import ProgressiveImage from \"react-progressive-image-loading\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { RandomTanque } from 'react-animated-text-tanque';\n\n\n\n\n\n// This is the body of the skills page\nconst SkillsBody = () => (\n    <section className=\"block--skills-wrapper\" >\n        <div className=\"block--skills\">\n            <p></p>\n        </div>\n    </section>\n)\n\n\n\n\n\nconst Skills = () => {\n    const [ width, setWidth ] = useState(null);\n    const [ skillsBlockHeight, setSkillsBlockHeight ] = useState(\"200px\")\n    const [ state, setState ] = useState({\n        paused: true\n    })\n\n    // This hook listens for resize events, updates the above state with results\n    useLayoutEffect(() => {\n\n        // Check to see whether the client is a browser or not\n        if (process.browser) {\n\n            // Add the event listener looking for resize. Set the hook.\n            window.addEventListener('resize', () => {\n                setWidth(window.innerWidth)\n            });\n\n            setWidth(window.innerWidth);\n        }\n\n        if (width <= 800) {\n            setSkillsBlockHeight(\"300px\")\n        } else if (width <= 1200 && width >= 801) {\n            setSkillsBlockHeight(\"200px\")\n        } else {\n            setSkillsBlockHeight(\"100%\")\n        }\n\n    }, [width])\n\n\n    return (\n        <>\n            <section className=\"section__skills\" >\n\n                <Random\n                    text={\"aewjoaevoaevmoaevmaoeivm\"}\n                    paused={state.paused}\n                    iterations={1}\n                    effect=\"verticalFadeIn\"\n                    effectChange={2}\n                    effectDirection=\"up\"\n                    className=\"cfont-pastegrey\"\n                />\n\n            </section>\n\n            {/* <ProgressiveImage\n                preview=\"/static/bogomil-mihaylov-small.jpg\"\n                src=\"/static/bogomil-mihaylov-wVTLXWM-Gh0-unsplash.jpg\"\n                transitionTime={700}\n                transitionFunction=\"ease\"\n                render={(src, style) => (\n                    <section className=\"section__skills\" style={Object.assign(style, { backgroundImage: `url(${src})` })} >\n                        {style.filter === \"blur(0px)\" ? (\n                            <SkillsBody   />\n                        ) : null}\n                    </section>\n                )}\n            /> */}\n\n        </>\n    );\n}\n\n\nexport default Skills;\n\n"]},"metadata":{},"sourceType":"module"}