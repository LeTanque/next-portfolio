{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { _Math } from './Math.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nvar _matrix = new Matrix4();\n\nvar _quaternion = new Quaternion();\n\nfunction Euler(x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || Euler.DefaultOrder;\n}\n\nEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nEuler.DefaultOrder = 'XYZ';\n\n_Object$defineProperties(Euler.prototype, {\n  x: {\n    get: function get() {\n      return this._x;\n    },\n    set: function set(value) {\n      this._x = value;\n\n      this._onChangeCallback();\n    }\n  },\n  y: {\n    get: function get() {\n      return this._y;\n    },\n    set: function set(value) {\n      this._y = value;\n\n      this._onChangeCallback();\n    }\n  },\n  z: {\n    get: function get() {\n      return this._z;\n    },\n    set: function set(value) {\n      this._z = value;\n\n      this._onChangeCallback();\n    }\n  },\n  order: {\n    get: function get() {\n      return this._order;\n    },\n    set: function set(value) {\n      this._order = value;\n\n      this._onChangeCallback();\n    }\n  }\n});\n\n_Object$assign(Euler.prototype, {\n  isEuler: true,\n  set: function set(x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n\n    this._onChangeCallback();\n\n    return this;\n  },\n  clone: function clone() {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function copy(euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n\n    this._onChangeCallback();\n\n    return this;\n  },\n  setFromRotationMatrix: function setFromRotationMatrix(m, order, update) {\n    var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.9999999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.9999999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.9999999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.9999999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.9999999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.9999999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this._onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function setFromQuaternion(q, order, update) {\n    _matrix.makeRotationFromQuaternion(q);\n\n    return this.setFromRotationMatrix(_matrix, order, update);\n  },\n  setFromVector3: function setFromVector3(v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function reorder(newOrder) {\n    // WARNING: this discards revolution information -bhouston\n    _quaternion.setFromEuler(this);\n\n    return this.setFromQuaternion(_quaternion, newOrder);\n  },\n  equals: function equals(euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function fromArray(array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n\n    this._onChangeCallback();\n\n    return this;\n  },\n  toArray: function toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new Vector3(this._x, this._y, this._z);\n    }\n  },\n  _onChange: function _onChange(callback) {\n    this._onChangeCallback = callback;\n    return this;\n  },\n  _onChangeCallback: function _onChangeCallback() {}\n});\n\nexport { Euler };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/math/Euler.js"],"names":["Quaternion","Vector3","Matrix4","_Math","_matrix","_quaternion","Euler","x","y","z","order","_x","_y","_z","_order","DefaultOrder","RotationOrders","prototype","get","set","value","_onChangeCallback","isEuler","clone","constructor","copy","euler","setFromRotationMatrix","m","update","clamp","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","Math","asin","abs","atan2","console","warn","setFromQuaternion","q","makeRotationFromQuaternion","setFromVector3","v","reorder","newOrder","setFromEuler","equals","fromArray","array","undefined","toArray","offset","toVector3","optionalResult","_onChange","callback"],"mappings":"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","sourcesContent":["import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { _Math } from './Math.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nvar _matrix = new Matrix4();\nvar _quaternion = new Quaternion();\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t},\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function ( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\n\n\t},\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Euler };\n"]},"metadata":{},"sourceType":"module"}