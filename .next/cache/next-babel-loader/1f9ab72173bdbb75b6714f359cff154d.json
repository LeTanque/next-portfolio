{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Vector2 } from './Vector2.js';\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector = new Vector2();\n\nfunction Box2(min, max) {\n  this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n  this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n}\n\n_Object$assign(Box2.prototype, {\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function (center, size) {\n    var halfSize = _vector.copy(size).multiplyScalar(0.5);\n\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  getCenter: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Box2: .getCenter() target is now required');\n      target = new Vector2();\n    }\n\n    return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  getSize: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Box2: .getSize() target is now required');\n      target = new Vector2();\n    }\n\n    return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n  },\n  containsBox: function (box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n  },\n  getParameter: function (point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    if (target === undefined) {\n      console.warn('THREE.Box2: .getParameter() target is now required');\n      target = new Vector2();\n    }\n\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  intersectsBox: function (box) {\n    // using 4 splitting planes to rule out intersections\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n  },\n  clampPoint: function (point, target) {\n    if (target === undefined) {\n      console.warn('THREE.Box2: .clampPoint() target is now required');\n      target = new Vector2();\n    }\n\n    return target.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function (point) {\n    var clampedPoint = _vector.copy(point).clamp(this.min, this.max);\n\n    return clampedPoint.sub(point).length();\n  },\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n});\n\nexport { Box2 };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/math/Box2.js"],"names":["Vector2","_vector","Box2","min","max","undefined","Infinity","prototype","set","copy","setFromPoints","points","makeEmpty","i","il","length","expandByPoint","setFromCenterAndSize","center","size","halfSize","multiplyScalar","sub","add","clone","constructor","box","x","y","isEmpty","getCenter","target","console","warn","addVectors","getSize","subVectors","point","expandByVector","vector","expandByScalar","scalar","addScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","clamp","distanceToPoint","clampedPoint","intersect","union","translate","offset","equals"],"mappings":"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","sourcesContent":["import { Vector2 } from './Vector2.js';\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector = new Vector2();\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n\nexport { Box2 };\n"]},"metadata":{},"sourceType":"module"}