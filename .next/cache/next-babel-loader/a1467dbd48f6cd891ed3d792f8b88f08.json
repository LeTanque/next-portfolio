{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/components/dnd-draglayer/Container.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { DropTarget } from \"react-dnd\";\nimport ItemTypes from \"./ItemTypes\";\nimport DraggableBox from \"./DraggableBox\";\nimport snapToGrid from \"./snapToGrid\";\nimport update from \"immutability-helper\";\n\nclass Container extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      boxes: {\n        a: {\n          top: 20,\n          left: 80,\n          title: \"Lakeside Herbal\",\n          image: \"/static/project/lakeside-logo-dark(1080x1080).png\"\n        },\n        b: {\n          top: 180,\n          left: 20,\n          title: \"Magic cards\",\n          image: \"/static/project/magical-screenshot.png\"\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      connectDropTarget\n    } = this.props;\n    const {\n      boxes\n    } = this.state;\n    return connectDropTarget(__jsx(\"main\", {\n      className: \"main__drag-layer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, _Object$keys(boxes).map(key => this.renderBox(boxes[key], key))));\n  }\n\n  moveBox(id, left, top) {\n    this.setState(update(this.state, {\n      boxes: {\n        [id]: {\n          $merge: {\n            left,\n            top\n          }\n        }\n      }\n    }));\n    console.log(\"Move box just fired inside of container\");\n  }\n\n  renderBox(item, key) {\n    return __jsx(DraggableBox, _extends({\n      key: key,\n      id: key\n    }, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DropTarget(ItemTypes.BOX, {\n  drop(props, monitor, component) {\n    if (!component) {\n      return;\n    }\n\n    const delta = monitor.getDifferenceFromInitialOffset();\n    const item = monitor.getItem();\n    let left = Math.round(item.left + delta.x);\n    let top = Math.round(item.top + delta.y);\n\n    if (props.snapToGrid) {\n      [left, top] = snapToGrid(left, top);\n    }\n\n    component.moveBox(item.id, left, top);\n  }\n\n}, connect => ({\n  connectDropTarget: connect.dropTarget()\n}))(Container);","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/dnd-draglayer/Container.jsx"],"names":["React","DropTarget","ItemTypes","DraggableBox","snapToGrid","update","Container","PureComponent","constructor","arguments","state","boxes","a","top","left","title","image","b","render","connectDropTarget","props","map","key","renderBox","moveBox","id","setState","$merge","console","log","item","BOX","drop","monitor","component","delta","getDifferenceFromInitialOffset","getItem","Math","round","x","y","connect","dropTarget"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { DropTarget } from \"react-dnd\";\nimport ItemTypes from \"./ItemTypes\";\nimport DraggableBox from \"./DraggableBox\";\nimport snapToGrid from \"./snapToGrid\";\nimport update from \"immutability-helper\";\n\n\n\nclass Container extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            boxes: {\n                a: { top: 20, left: 80, title: \"Lakeside Herbal\", image: \"/static/project/lakeside-logo-dark(1080x1080).png\" },\n                b: { top: 180, left: 20, title: \"Magic cards\", image: \"/static/project/magical-screenshot.png\" }\n            }\n        };\n    }\n    \n    render() {\n        const { connectDropTarget } = this.props;\n        const { boxes } = this.state;\n\n        return connectDropTarget(\n            <main className=\"main__drag-layer-container\">\n                {Object.keys(boxes).map(key => this.renderBox(boxes[key], key))}\n            </main>\n        );\n    }\n    moveBox(id, left, top) {\n        this.setState(\n            update(this.state, {\n                boxes: {\n                    [id]: {\n                        $merge: { left, top }\n                    }\n                }\n            })\n        );\n        console.log(\"Move box just fired inside of container\")\n    }\n    renderBox(item, key) {\n        return <DraggableBox key={key} id={key} {...item} />;\n    }\n}\n\nexport default DropTarget(\n    ItemTypes.BOX,\n    {\n        drop(props, monitor, component) {\n            if (!component) {\n                return;\n            }\n            const delta = monitor.getDifferenceFromInitialOffset();\n            const item = monitor.getItem();\n            let left = Math.round(item.left + delta.x);\n            let top = Math.round(item.top + delta.y);\n            if (props.snapToGrid) {\n                [left, top] = snapToGrid(left, top);\n            }\n            component.moveBox(item.id, left, top);\n        }\n    },\n    connect => ({\n        connectDropTarget: connect.dropTarget()\n    })\n)(Container);\n"]},"metadata":{},"sourceType":"module"}