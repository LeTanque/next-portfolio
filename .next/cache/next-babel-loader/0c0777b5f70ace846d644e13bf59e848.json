{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial(parameters) {\n  Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new Color(0xffffff);\n  this.map = null;\n  this.alphaMap = null;\n  this.rotation = 0;\n  this.sizeAttenuation = true;\n  this.transparent = true;\n  this.setValues(parameters);\n}\n\nSpriteMaterial.prototype = _Object$create(Material.prototype);\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.rotation = source.rotation;\n  this.sizeAttenuation = source.sizeAttenuation;\n  return this;\n};\n\nexport { SpriteMaterial };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/materials/SpriteMaterial.js"],"names":["Material","Color","SpriteMaterial","parameters","call","type","color","map","alphaMap","rotation","sizeAttenuation","transparent","setValues","prototype","constructor","isSpriteMaterial","copy","source"],"mappings":";AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA;;;;;;;;;;;;AAYA,SAASC,cAAT,CAAyBC,UAAzB,EAAsC;AAErCH,EAAAA,QAAQ,CAACI,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,gBAAZ;AAEA,OAAKC,KAAL,GAAa,IAAIL,KAAJ,CAAW,QAAX,CAAb;AAEA,OAAKM,GAAL,GAAW,IAAX;AAEA,OAAKC,QAAL,GAAgB,IAAhB;AAEA,OAAKC,QAAL,GAAgB,CAAhB;AAEA,OAAKC,eAAL,GAAuB,IAAvB;AAEA,OAAKC,WAAL,GAAmB,IAAnB;AAEA,OAAKC,SAAL,CAAgBT,UAAhB;AAEA;;AAEDD,cAAc,CAACW,SAAf,GAA2B,eAAeb,QAAQ,CAACa,SAAxB,CAA3B;AACAX,cAAc,CAACW,SAAf,CAAyBC,WAAzB,GAAuCZ,cAAvC;AACAA,cAAc,CAACW,SAAf,CAAyBE,gBAAzB,GAA4C,IAA5C;;AAEAb,cAAc,CAACW,SAAf,CAAyBG,IAAzB,GAAgC,UAAWC,MAAX,EAAoB;AAEnDjB,EAAAA,QAAQ,CAACa,SAAT,CAAmBG,IAAnB,CAAwBZ,IAAxB,CAA8B,IAA9B,EAAoCa,MAApC;AAEA,OAAKX,KAAL,CAAWU,IAAX,CAAiBC,MAAM,CAACX,KAAxB;AAEA,OAAKC,GAAL,GAAWU,MAAM,CAACV,GAAlB;AAEA,OAAKC,QAAL,GAAgBS,MAAM,CAACT,QAAvB;AAEA,OAAKC,QAAL,GAAgBQ,MAAM,CAACR,QAAvB;AAEA,OAAKC,eAAL,GAAuBO,MAAM,CAACP,eAA9B;AAEA,SAAO,IAAP;AAEA,CAhBD;;AAmBA,SAASR,cAAT","sourcesContent":["import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n\nexport { SpriteMaterial };\n"]},"metadata":{},"sourceType":"module"}