{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light(color, intensity) {\n  Object3D.call(this);\n  this.type = 'Light';\n  this.color = new Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n}\n\nLight.prototype = _Object$assign(_Object$create(Object3D.prototype), {\n  constructor: Light,\n  isLight: true,\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n    return data;\n  }\n});\nexport { Light };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/lights/Light.js"],"names":["Object3D","Color","Light","color","intensity","call","type","undefined","receiveShadow","prototype","constructor","isLight","copy","source","toJSON","meta","data","object","getHex","groundColor","distance","angle","decay","penumbra","shadow"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA;;;;;AAKA,SAASC,KAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAmC;AAElCJ,EAAAA,QAAQ,CAACK,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,OAAZ;AAEA,OAAKH,KAAL,GAAa,IAAIF,KAAJ,CAAWE,KAAX,CAAb;AACA,OAAKC,SAAL,GAAiBA,SAAS,KAAKG,SAAd,GAA0BH,SAA1B,GAAsC,CAAvD;AAEA,OAAKI,aAAL,GAAqBD,SAArB;AAEA;;AAEDL,KAAK,CAACO,SAAN,GAAkB,eAAe,eAAeT,QAAQ,CAACS,SAAxB,CAAf,EAAoD;AAErEC,EAAAA,WAAW,EAAER,KAFwD;AAIrES,EAAAA,OAAO,EAAE,IAJ4D;AAMrEC,EAAAA,IAAI,EAAE,UAAWC,MAAX,EAAoB;AAEzBb,IAAAA,QAAQ,CAACS,SAAT,CAAmBG,IAAnB,CAAwBP,IAAxB,CAA8B,IAA9B,EAAoCQ,MAApC;AAEA,SAAKV,KAAL,CAAWS,IAAX,CAAiBC,MAAM,CAACV,KAAxB;AACA,SAAKC,SAAL,GAAiBS,MAAM,CAACT,SAAxB;AAEA,WAAO,IAAP;AAEA,GAfoE;AAiBrEU,EAAAA,MAAM,EAAE,UAAWC,IAAX,EAAkB;AAEzB,QAAIC,IAAI,GAAGhB,QAAQ,CAACS,SAAT,CAAmBK,MAAnB,CAA0BT,IAA1B,CAAgC,IAAhC,EAAsCU,IAAtC,CAAX;AAEAC,IAAAA,IAAI,CAACC,MAAL,CAAYd,KAAZ,GAAoB,KAAKA,KAAL,CAAWe,MAAX,EAApB;AACAF,IAAAA,IAAI,CAACC,MAAL,CAAYb,SAAZ,GAAwB,KAAKA,SAA7B;AAEA,QAAK,KAAKe,WAAL,KAAqBZ,SAA1B,EAAsCS,IAAI,CAACC,MAAL,CAAYE,WAAZ,GAA0B,KAAKA,WAAL,CAAiBD,MAAjB,EAA1B;AAEtC,QAAK,KAAKE,QAAL,KAAkBb,SAAvB,EAAmCS,IAAI,CAACC,MAAL,CAAYG,QAAZ,GAAuB,KAAKA,QAA5B;AACnC,QAAK,KAAKC,KAAL,KAAed,SAApB,EAAgCS,IAAI,CAACC,MAAL,CAAYI,KAAZ,GAAoB,KAAKA,KAAzB;AAChC,QAAK,KAAKC,KAAL,KAAef,SAApB,EAAgCS,IAAI,CAACC,MAAL,CAAYK,KAAZ,GAAoB,KAAKA,KAAzB;AAChC,QAAK,KAAKC,QAAL,KAAkBhB,SAAvB,EAAmCS,IAAI,CAACC,MAAL,CAAYM,QAAZ,GAAuB,KAAKA,QAA5B;AAEnC,QAAK,KAAKC,MAAL,KAAgBjB,SAArB,EAAiCS,IAAI,CAACC,MAAL,CAAYO,MAAZ,GAAqB,KAAKA,MAAL,CAAYV,MAAZ,EAArB;AAEjC,WAAOE,IAAP;AAEA;AAnCoE,CAApD,CAAlB;AAwCA,SAASd,KAAT","sourcesContent":["import { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n\nexport { Light };\n"]},"metadata":{},"sourceType":"module"}