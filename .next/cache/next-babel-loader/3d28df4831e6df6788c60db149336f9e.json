{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ProgressiveImage from \"react-progressive-image-loading\";\nimport { useLayoutEffect, useState } from \"react\"; // This is the body of the skills page\n\nconst SkillsBody = () => __jsx(\"section\", {\n  className: \"block--skills-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"block--skills\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})));\n\nconst Skills = () => {\n  const {\n    0: width,\n    1: setWidth\n  } = useState(null);\n  const {\n    0: skillsBlockHeight,\n    1: setSkillsBlockHeight\n  } = useState(\"200px\"); // This hook listens for resize events, updates the above state with results\n\n  useLayoutEffect(() => {\n    // Check to see whether the client is a browser or not\n    if (false) {\n      // Add the event listener looking for resize. Set the hook.\n      window.addEventListener('resize', () => {\n        setWidth(window.innerWidth);\n      });\n      setWidth(window.innerWidth);\n    }\n\n    if (width <= 800) {\n      setSkillsBlockHeight(\"300px\");\n    } else if (width <= 1200 && width >= 801) {\n      setSkillsBlockHeight(\"200px\");\n    } else {\n      setSkillsBlockHeight(\"100%\");\n    }\n  }, [width]);\n  return __jsx(React.Fragment, null, __jsx(ProgressiveImage, {\n    preview: \"/static/bogomil-mihaylov-small.jpg\",\n    src: \"/static/bogomil-mihaylov-wVTLXWM-Gh0-unsplash.jpg\",\n    transitionTime: 700,\n    transitionFunction: \"ease\",\n    render: (src, style) => __jsx(\"section\", {\n      className: \"section__skills\",\n      style: _Object$assign(style, {\n        backgroundImage: `url(${src})`\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, style.filter === \"blur(0px)\" ? __jsx(SkillsBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default Skills;","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx"],"names":["ProgressiveImage","useLayoutEffect","useState","SkillsBody","Skills","width","setWidth","skillsBlockHeight","setSkillsBlockHeight","window","addEventListener","innerWidth","src","style","backgroundImage","filter"],"mappings":";;;;AAAA,OAAOA,gBAAP,MAA6B,iCAA7B;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C,C,CAOA;;AACA,MAAMC,UAAU,GAAG,MACf;AAAS,EAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;;AAYA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAAEK,iBAAF;AAAA,OAAqBC;AAArB,MAA8CN,QAAQ,CAAC,OAAD,CAA5D,CAFiB,CAIjB;;AACAD,EAAAA,eAAe,CAAC,MAAM;AAElB;AACA,eAAqB;AAEjB;AACAQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpCJ,QAAAA,QAAQ,CAACG,MAAM,CAACE,UAAR,CAAR;AACH,OAFD;AAIAL,MAAAA,QAAQ,CAACG,MAAM,CAACE,UAAR,CAAR;AACH;;AAED,QAAIN,KAAK,IAAI,GAAb,EAAkB;AACdG,MAAAA,oBAAoB,CAAC,OAAD,CAApB;AACH,KAFD,MAEO,IAAIH,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAI,GAA9B,EAAmC;AACtCG,MAAAA,oBAAoB,CAAC,OAAD,CAApB;AACH,KAFM,MAEA;AACHA,MAAAA,oBAAoB,CAAC,MAAD,CAApB;AACH;AAEJ,GArBc,EAqBZ,CAACH,KAAD,CArBY,CAAf;AAwBA,SACI,4BACI,MAAC,gBAAD;AACI,IAAA,OAAO,EAAC,oCADZ;AAEI,IAAA,GAAG,EAAC,mDAFR;AAGI,IAAA,cAAc,EAAE,GAHpB;AAII,IAAA,kBAAkB,EAAC,MAJvB;AAKI,IAAA,MAAM,EAAE,CAACO,GAAD,EAAMC,KAAN,KACJ;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAqC,MAAA,KAAK,EAAE,eAAcA,KAAd,EAAqB;AAAEC,QAAAA,eAAe,EAAG,OAAMF,GAAI;AAA9B,OAArB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KAAK,CAACE,MAAN,KAAiB,WAAjB,GACG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG,IAHR,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAiBH,CA9CD;;AAiDA,eAAeX,MAAf","sourcesContent":["import ProgressiveImage from \"react-progressive-image-loading\";\nimport { useLayoutEffect, useState } from \"react\";\n\n\n\n\n\n\n// This is the body of the skills page\nconst SkillsBody = () => (\n    <section className=\"block--skills-wrapper\" >\n        <div className=\"block--skills\">\n            <p></p>\n        </div>\n    </section>\n)\n\n\n\n\n\nconst Skills = () => {\n    const [ width, setWidth ] = useState(null);\n    const [ skillsBlockHeight, setSkillsBlockHeight ] = useState(\"200px\")\n\n    // This hook listens for resize events, updates the above state with results\n    useLayoutEffect(() => {\n\n        // Check to see whether the client is a browser or not\n        if (process.browser) {\n\n            // Add the event listener looking for resize. Set the hook.\n            window.addEventListener('resize', () => {\n                setWidth(window.innerWidth)\n            });\n\n            setWidth(window.innerWidth);\n        }\n\n        if (width <= 800) {\n            setSkillsBlockHeight(\"300px\")\n        } else if (width <= 1200 && width >= 801) {\n            setSkillsBlockHeight(\"200px\")\n        } else {\n            setSkillsBlockHeight(\"100%\")\n        }\n\n    }, [width])\n\n    \n    return (\n        <>\n            <ProgressiveImage\n                preview=\"/static/bogomil-mihaylov-small.jpg\"\n                src=\"/static/bogomil-mihaylov-wVTLXWM-Gh0-unsplash.jpg\"\n                transitionTime={700}\n                transitionFunction=\"ease\"\n                render={(src, style) => (\n                    <section className=\"section__skills\" style={Object.assign(style, { backgroundImage: `url(${src})` })} >\n                        {style.filter === \"blur(0px)\" ? (\n                            <SkillsBody   />\n                        ) : null}\n                    </section>\n                )}\n            />\n        </>\n    );\n}\n\n\nexport default Skills;\n\n"]},"metadata":{},"sourceType":"module"}