{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { _Math } from '../math/Math.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nvar _eyeRight = new Matrix4();\n\nvar _eyeLeft = new Matrix4();\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction StereoCamera() {\n  this.type = 'StereoCamera';\n  this.aspect = 1;\n  this.eyeSep = 0.064;\n  this.cameraL = new PerspectiveCamera();\n  this.cameraL.layers.enable(1);\n  this.cameraL.matrixAutoUpdate = false;\n  this.cameraR = new PerspectiveCamera();\n  this.cameraR.layers.enable(2);\n  this.cameraR.matrixAutoUpdate = false;\n  this._cache = {\n    focus: null,\n    fov: null,\n    aspect: null,\n    near: null,\n    far: null,\n    zoom: null,\n    eyeSep: null\n  };\n}\n\n_Object$assign(StereoCamera.prototype, {\n  update: function (camera) {\n    var cache = this._cache;\n    var needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n    if (needsUpdate) {\n      cache.focus = camera.focus;\n      cache.fov = camera.fov;\n      cache.aspect = camera.aspect * this.aspect;\n      cache.near = camera.near;\n      cache.far = camera.far;\n      cache.zoom = camera.zoom;\n      cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n      // http://paulbourke.net/stereographics/stereorender/\n\n      var projectionMatrix = camera.projectionMatrix.clone();\n      var eyeSepHalf = cache.eyeSep / 2;\n      var eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n      var ymax = cache.near * Math.tan(_Math.DEG2RAD * cache.fov * 0.5) / cache.zoom;\n      var xmin, xmax; // translate xOffset\n\n      _eyeLeft.elements[12] = -eyeSepHalf;\n      _eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n      xmin = -ymax * cache.aspect + eyeSepOnProjection;\n      xmax = ymax * cache.aspect + eyeSepOnProjection;\n      projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n      xmin = -ymax * cache.aspect - eyeSepOnProjection;\n      xmax = ymax * cache.aspect - eyeSepOnProjection;\n      projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraR.projectionMatrix.copy(projectionMatrix);\n    }\n\n    this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n    this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n  }\n});\n\nexport { StereoCamera };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/cameras/StereoCamera.js"],"names":["Matrix4","_Math","PerspectiveCamera","_eyeRight","_eyeLeft","StereoCamera","type","aspect","eyeSep","cameraL","layers","enable","matrixAutoUpdate","cameraR","_cache","focus","fov","near","far","zoom","prototype","update","camera","cache","needsUpdate","projectionMatrix","clone","eyeSepHalf","eyeSepOnProjection","ymax","Math","tan","DEG2RAD","xmin","xmax","elements","copy","matrixWorld","multiply"],"mappings":"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","sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { _Math } from '../math/Math.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nvar _eyeRight = new Matrix4();\nvar _eyeLeft = new Matrix4();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n\tthis._cache = {\n\t\tfocus: null,\n\t\tfov: null,\n\t\taspect: null,\n\t\tnear: null,\n\t\tfar: null,\n\t\tzoom: null,\n\t\teyeSep: null\n\t};\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: function ( camera ) {\n\n\t\tvar cache = this._cache;\n\n\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tvar ymax = ( cache.near * Math.tan( _Math.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tvar xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n} );\n\n\nexport { StereoCamera };\n"]},"metadata":{},"sourceType":"module"}