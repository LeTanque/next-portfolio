{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget(width, height, options) {\n  WebGLRenderTarget.call(this, width, height, options);\n  this.samples = 4;\n}\n\nWebGLMultisampleRenderTarget.prototype = _Object$assign(_Object$create(WebGLRenderTarget.prototype), {\n  constructor: WebGLMultisampleRenderTarget,\n  isWebGLMultisampleRenderTarget: true,\n  copy: function copy(source) {\n    WebGLRenderTarget.prototype.copy.call(this, source);\n    this.samples = source.samples;\n    return this;\n  }\n});\nexport { WebGLMultisampleRenderTarget };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/renderers/WebGLMultisampleRenderTarget.js"],"names":["WebGLRenderTarget","WebGLMultisampleRenderTarget","width","height","options","call","samples","prototype","constructor","isWebGLMultisampleRenderTarget","copy","source"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,wBAAlC;AAEA;;;;;AAKA,SAASC,4BAAT,CAAuCC,KAAvC,EAA8CC,MAA9C,EAAsDC,OAAtD,EAAgE;AAE/DJ,EAAAA,iBAAiB,CAACK,IAAlB,CAAwB,IAAxB,EAA8BH,KAA9B,EAAqCC,MAArC,EAA6CC,OAA7C;AAEA,OAAKE,OAAL,GAAe,CAAf;AAEA;;AAEDL,4BAA4B,CAACM,SAA7B,GAAyC,eAAe,eAAeP,iBAAiB,CAACO,SAAjC,CAAf,EAA6D;AAErGC,EAAAA,WAAW,EAAEP,4BAFwF;AAIrGQ,EAAAA,8BAA8B,EAAE,IAJqE;AAMrGC,EAAAA,IAAI,EAAE,cAAWC,MAAX,EAAoB;AAEzBX,IAAAA,iBAAiB,CAACO,SAAlB,CAA4BG,IAA5B,CAAiCL,IAAjC,CAAuC,IAAvC,EAA6CM,MAA7C;AAEA,SAAKL,OAAL,GAAeK,MAAM,CAACL,OAAtB;AAEA,WAAO,IAAP;AAEA;AAdoG,CAA7D,CAAzC;AAmBA,SAASL,4BAAT","sourcesContent":["import { WebGLRenderTarget } from './WebGLRenderTarget.js';\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { WebGLMultisampleRenderTarget };\n"]},"metadata":{},"sourceType":"module"}