{"ast":null,"code":"/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\nvar CopyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1.0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"gl_FragColor = opacity * texel;\", \"}\"].join(\"\\n\")\n};\nexport { CopyShader };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/threejs-render/resources/shaders/CopyShader.js"],"names":["CopyShader","uniforms","tDiffuse","value","opacity","vertexShader","fragmentShader"],"mappings":"AAAA;;;;;AAMA,IAAIA,UAAU,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADJ;AAENC,IAAAA,OAAO,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT;AAFH,GADG;AAMbE,EAAAA,YAAY,EAAE,CAAA,mBAAA,EAAA,eAAA,EAAA,WAAA,EAAA,2EAAA,EAAA,GAAA,EAAA,IAAA,CAND,IAMC,CAND;AAcbC,EAAAA,cAAc,EAAE,CAAA,wBAAA,EAAA,6BAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,0CAAA,EAAA,iCAAA,EAAA,GAAA,EAAA,IAAA,CAAA,IAAA;AAdH,CAAjB;AAyBA,SAAA,UAAA","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        opacity: { value: 1.0 }\n    },\n\n    vertexShader: [\n        \"varying vec2 vUv;\",\n        \"void main() {\",\n        \"vUv = uv;\",\n        \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n        \"}\"\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n        \"uniform float opacity;\",\n        \"uniform sampler2D tDiffuse;\",\n        \"varying vec2 vUv;\",\n        \"void main() {\",\n        \"vec4 texel = texture2D( tDiffuse, vUv );\",\n        \"gl_FragColor = opacity * texel;\",\n        \"}\"\n    ].join(\"\\n\")\n};\n\nexport { CopyShader };\n"]},"metadata":{},"sourceType":"module"}