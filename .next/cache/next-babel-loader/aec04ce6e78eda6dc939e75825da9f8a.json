{"ast":null,"code":"import _Number$isInteger from \"@babel/runtime-corejs2/core-js/number/is-integer\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter } from '../constants.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Group } from '../objects/Group.js';\nimport { InstancedMesh } from '../objects/InstancedMesh.js';\nimport { Sprite } from '../objects/Sprite.js';\nimport { Points } from '../objects/Points.js';\nimport { Line } from '../objects/Line.js';\nimport { LineLoop } from '../objects/LineLoop.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LOD } from '../objects/LOD.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { SkinnedMesh } from '../objects/SkinnedMesh.js';\nimport { Shape } from '../extras/core/Shape.js';\nimport { Fog } from '../scenes/Fog.js';\nimport { FogExp2 } from '../scenes/FogExp2.js';\nimport { HemisphereLight } from '../lights/HemisphereLight.js';\nimport { SpotLight } from '../lights/SpotLight.js';\nimport { PointLight } from '../lights/PointLight.js';\nimport { DirectionalLight } from '../lights/DirectionalLight.js';\nimport { AmbientLight } from '../lights/AmbientLight.js';\nimport { RectAreaLight } from '../lights/RectAreaLight.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Scene } from '../scenes/Scene.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Texture } from '../textures/Texture.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { LoadingManager } from './LoadingManager.js';\nimport { AnimationClip } from '../animation/AnimationClip.js';\nimport { MaterialLoader } from './MaterialLoader.js';\nimport { LoaderUtils } from './LoaderUtils.js';\nimport { BufferGeometryLoader } from './BufferGeometryLoader.js';\nimport { Loader } from './Loader.js';\nimport { FileLoader } from './FileLoader.js';\nimport * as Geometries from '../geometries/Geometries.js';\nimport * as Curves from '../extras/curves/Curves.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader(manager) {\n  Loader.call(this, manager);\n}\n\nObjectLoader.prototype = _Object$assign(_Object$create(Loader.prototype), {\n  constructor: ObjectLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n    this.resourcePath = this.resourcePath || path;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(this.path);\n    loader.load(url, function (text) {\n      var json = null;\n\n      try {\n        json = JSON.parse(text);\n      } catch (error) {\n        if (onError !== undefined) onError(error);\n        console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n        return;\n      }\n\n      var metadata = json.metadata;\n\n      if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n        console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n        return;\n      }\n\n      scope.parse(json, onLoad);\n    }, onProgress, onError);\n  },\n  parse: function (json, onLoad) {\n    var shapes = this.parseShape(json.shapes);\n    var geometries = this.parseGeometries(json.geometries, shapes);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  },\n  parseShape: function (json) {\n    var shapes = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var shape = new Shape().fromJSON(json[i]);\n        shapes[shape.uuid] = shape;\n      }\n    }\n\n    return shapes;\n  },\n  parseGeometries: function (json, shapes) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var bufferGeometryLoader = new BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n          case 'DodecahedronBufferGeometry':\n          case 'IcosahedronGeometry':\n          case 'IcosahedronBufferGeometry':\n          case 'OctahedronGeometry':\n          case 'OctahedronBufferGeometry':\n          case 'TetrahedronGeometry':\n          case 'TetrahedronBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n            break;\n\n          case 'TubeGeometry':\n          case 'TubeBufferGeometry':\n            // This only works for built-in curves (e.g. CatmullRomCurve3).\n            // User defined curves or instances of CurvePath will not be deserialized.\n            geometry = new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n            break;\n\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n            break;\n\n          case 'PolyhedronGeometry':\n          case 'PolyhedronBufferGeometry':\n            geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n            break;\n\n          case 'ShapeGeometry':\n          case 'ShapeBufferGeometry':\n            var geometryShapes = [];\n\n            for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n              var shape = shapes[data.shapes[j]];\n              geometryShapes.push(shape);\n            }\n\n            geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n            break;\n\n          case 'ExtrudeGeometry':\n          case 'ExtrudeBufferGeometry':\n            var geometryShapes = [];\n\n            for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n              var shape = shapes[data.shapes[j]];\n              geometryShapes.push(shape);\n            }\n\n            var extrudePath = data.options.extrudePath;\n\n            if (extrudePath !== undefined) {\n              data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n            }\n\n            geometry = new Geometries[data.type](geometryShapes, data.options);\n            break;\n\n          case 'BufferGeometry':\n          case 'InstancedBufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            if ('THREE' in window && 'LegacyJSONLoader' in THREE) {\n              var geometryLoader = new THREE.LegacyJSONLoader();\n              geometry = geometryLoader.parse(data, this.resourcePath).geometry;\n            } else {\n              console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".');\n            }\n\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function (json, textures) {\n    var cache = {}; // MultiMaterial\n\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.type === 'MultiMaterial') {\n          // Deprecated\n          var array = [];\n\n          for (var j = 0; j < data.materials.length; j++) {\n            var material = data.materials[j];\n\n            if (cache[material.uuid] === undefined) {\n              cache[material.uuid] = loader.parse(material);\n            }\n\n            array.push(cache[material.uuid]);\n          }\n\n          materials[data.uuid] = array;\n        } else {\n          if (cache[data.uuid] === undefined) {\n            cache[data.uuid] = loader.parse(data);\n          }\n\n          materials[data.uuid] = cache[data.uuid];\n        }\n      }\n    }\n\n    return materials;\n  },\n  parseAnimations: function (json) {\n    var animations = [];\n\n    for (var i = 0; i < json.length; i++) {\n      var data = json[i];\n      var clip = AnimationClip.parse(data);\n      if (data.uuid !== undefined) clip.uuid = data.uuid;\n      animations.push(clip);\n    }\n\n    return animations;\n  },\n  parseImages: function (json, onLoad) {\n    var scope = this;\n    var images = {};\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new LoadingManager(onLoad);\n      var loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, il = json.length; i < il; i++) {\n        var image = json[i];\n        var url = image.url;\n\n        if (_Array$isArray(url)) {\n          // load array of images e.g CubeTexture\n          images[image.uuid] = [];\n\n          for (var j = 0, jl = url.length; j < jl; j++) {\n            var currentUrl = url[j];\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n            images[image.uuid].push(loadImage(path));\n          }\n        } else {\n          // load single image\n          var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n          images[image.uuid] = loadImage(path);\n        }\n      }\n    }\n\n    return images;\n  },\n  parseTextures: function (json, images) {\n    function parseConstant(value, type) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return type[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture;\n\n        if (_Array$isArray(images[data.image])) {\n          texture = new CubeTexture(images[data.image]);\n        } else {\n          texture = new Texture(images[data.image]);\n        }\n\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n        if (data.center !== undefined) texture.center.fromArray(data.center);\n        if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n          texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n        }\n\n        if (data.format !== undefined) texture.format = data.format;\n        if (data.type !== undefined) texture.type = data.type;\n        if (data.encoding !== undefined) texture.encoding = data.encoding;\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n        if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n        if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  },\n  parseObject: function (data, geometries, materials) {\n    var object;\n\n    function getGeometry(name) {\n      if (geometries[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined geometry', name);\n      }\n\n      return geometries[name];\n    }\n\n    function getMaterial(name) {\n      if (name === undefined) return undefined;\n\n      if (_Array$isArray(name)) {\n        var array = [];\n\n        for (var i = 0, l = name.length; i < l; i++) {\n          var uuid = name[i];\n\n          if (materials[uuid] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', uuid);\n          }\n\n          array.push(materials[uuid]);\n        }\n\n        return array;\n      }\n\n      if (materials[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined material', name);\n      }\n\n      return materials[name];\n    }\n\n    switch (data.type) {\n      case 'Scene':\n        object = new Scene();\n\n        if (data.background !== undefined) {\n          if (_Number$isInteger(data.background)) {\n            object.background = new Color(data.background);\n          }\n        }\n\n        if (data.fog !== undefined) {\n          if (data.fog.type === 'Fog') {\n            object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n          } else if (data.fog.type === 'FogExp2') {\n            object.fog = new FogExp2(data.fog.color, data.fog.density);\n          }\n        }\n\n        break;\n\n      case 'PerspectiveCamera':\n        object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n        if (data.focus !== undefined) object.focus = data.focus;\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n        if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n        if (data.view !== undefined) object.view = _Object$assign({}, data.view);\n        break;\n\n      case 'OrthographicCamera':\n        object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.view !== undefined) object.view = _Object$assign({}, data.view);\n        break;\n\n      case 'AmbientLight':\n        object = new AmbientLight(data.color, data.intensity);\n        break;\n\n      case 'DirectionalLight':\n        object = new DirectionalLight(data.color, data.intensity);\n        break;\n\n      case 'PointLight':\n        object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n        break;\n\n      case 'RectAreaLight':\n        object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n        break;\n\n      case 'SpotLight':\n        object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n        break;\n\n      case 'HemisphereLight':\n        object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n        break;\n\n      case 'SkinnedMesh':\n        console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n      case 'Mesh':\n        var geometry = getGeometry(data.geometry);\n        var material = getMaterial(data.material);\n\n        if (geometry.bones && geometry.bones.length > 0) {\n          object = new SkinnedMesh(geometry, material);\n        } else {\n          object = new Mesh(geometry, material);\n        }\n\n        break;\n\n      case 'InstancedMesh':\n        var geometry = getGeometry(data.geometry);\n        var material = getMaterial(data.material);\n        var count = data.count;\n        var instanceMatrix = data.instanceMatrix;\n        object = new InstancedMesh(geometry, material, count);\n        object.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n        break;\n\n      case 'LOD':\n        object = new LOD();\n        break;\n\n      case 'Line':\n        object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n        break;\n\n      case 'LineLoop':\n        object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'LineSegments':\n        object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'PointCloud':\n      case 'Points':\n        object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'Sprite':\n        object = new Sprite(getMaterial(data.material));\n        break;\n\n      case 'Group':\n        object = new Group();\n        break;\n\n      default:\n        object = new Object3D();\n    }\n\n    object.uuid = data.uuid;\n    if (data.name !== undefined) object.name = data.name;\n\n    if (data.matrix !== undefined) {\n      object.matrix.fromArray(data.matrix);\n      if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n      if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n    } else {\n      if (data.position !== undefined) object.position.fromArray(data.position);\n      if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n      if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n      if (data.scale !== undefined) object.scale.fromArray(data.scale);\n    }\n\n    if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n    if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n    if (data.shadow) {\n      if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n      if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n      if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n      if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n    }\n\n    if (data.visible !== undefined) object.visible = data.visible;\n    if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n    if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n    if (data.userData !== undefined) object.userData = data.userData;\n    if (data.layers !== undefined) object.layers.mask = data.layers;\n\n    if (data.children !== undefined) {\n      var children = data.children;\n\n      for (var i = 0; i < children.length; i++) {\n        object.add(this.parseObject(children[i], geometries, materials));\n      }\n    }\n\n    if (data.type === 'LOD') {\n      if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n      var levels = data.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        var level = levels[l];\n        var child = object.getObjectByProperty('uuid', level.object);\n\n        if (child !== undefined) {\n          object.addLevel(child, level.distance);\n        }\n      }\n    }\n\n    return object;\n  }\n});\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\nexport { ObjectLoader };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/loaders/ObjectLoader.js"],"names":["UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","BufferAttribute","Color","Object3D","Group","InstancedMesh","Sprite","Points","Line","LineLoop","LineSegments","LOD","Mesh","SkinnedMesh","Shape","Fog","FogExp2","HemisphereLight","SpotLight","PointLight","DirectionalLight","AmbientLight","RectAreaLight","OrthographicCamera","PerspectiveCamera","Scene","CubeTexture","Texture","ImageLoader","LoadingManager","AnimationClip","MaterialLoader","LoaderUtils","BufferGeometryLoader","Loader","FileLoader","Geometries","Curves","ObjectLoader","manager","call","prototype","constructor","load","url","onLoad","onProgress","onError","scope","path","extractUrlBase","resourcePath","loader","setPath","text","json","JSON","parse","error","undefined","console","message","metadata","type","toLowerCase","shapes","parseShape","geometries","parseGeometries","images","parseImages","object","textures","parseTextures","materials","parseMaterials","parseObject","animations","parseAnimations","length","i","l","shape","fromJSON","uuid","bufferGeometryLoader","geometry","data","width","height","widthSegments","heightSegments","depth","depthSegments","radius","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","p","q","closed","points","vertices","indices","details","geometryShapes","j","jl","push","curveSegments","extrudePath","options","window","THREE","geometryLoader","LegacyJSONLoader","warn","name","isBufferGeometry","userData","cache","setTextures","array","material","clip","loadImage","itemStart","itemEnd","itemError","setCrossOrigin","crossOrigin","il","image","currentUrl","test","parseConstant","value","texture","needsUpdate","mapping","TEXTURE_MAPPING","offset","fromArray","repeat","center","rotation","wrap","wrapS","TEXTURE_WRAPPING","wrapT","format","encoding","minFilter","TEXTURE_FILTER","magFilter","anisotropy","flipY","premultiplyAlpha","unpackAlignment","getGeometry","getMaterial","background","fog","color","near","far","density","fov","aspect","focus","zoom","filmGauge","filmOffset","view","left","right","top","bottom","intensity","distance","decay","angle","penumbra","groundColor","bones","count","instanceMatrix","Float32Array","mode","matrix","matrixAutoUpdate","decompose","position","quaternion","scale","castShadow","receiveShadow","shadow","bias","mapSize","camera","visible","frustumCulled","renderOrder","layers","mask","children","add","autoUpdate","levels","level","child","getObjectByProperty","addLevel"],"mappings":";;;;AAAA,SACCA,SADD,EAECC,qBAFD,EAGCC,qBAHD,EAICC,gCAJD,EAKCC,gCALD,EAMCC,0BAND,EAOCC,uBAPD,EAQCC,uBARD,EAUCC,cAVD,EAWCC,mBAXD,EAYCC,sBAZD,EAcCC,aAdD,EAeCC,0BAfD,EAgBCC,yBAhBD,EAiBCC,YAjBD,EAkBCC,yBAlBD,EAmBCC,wBAnBD,QAoBO,iBApBP;AAqBA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,6BAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,4BAAxB;AAEA;;;;AAIA,SAASC,YAAT,CAAuBC,OAAvB,EAAiC;AAEhCL,EAAAA,MAAM,CAACM,IAAP,CAAa,IAAb,EAAmBD,OAAnB;AAEA;;AAEDD,YAAY,CAACG,SAAb,GAAyB,eAAe,eAAeP,MAAM,CAACO,SAAtB,CAAf,EAAkD;AAE1EC,EAAAA,WAAW,EAAEJ,YAF6D;AAI1EK,EAAAA,IAAI,EAAE,UAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,QAAIC,KAAK,GAAG,IAAZ;AAEA,QAAIC,IAAI,GAAK,KAAKA,IAAL,KAAc,EAAhB,GAAuBjB,WAAW,CAACkB,cAAZ,CAA4BN,GAA5B,CAAvB,GAA2D,KAAKK,IAA3E;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,IAAqBF,IAAzC;AAEA,QAAIG,MAAM,GAAG,IAAIjB,UAAJ,CAAgBa,KAAK,CAACT,OAAtB,CAAb;AACAa,IAAAA,MAAM,CAACC,OAAP,CAAgB,KAAKJ,IAArB;AACAG,IAAAA,MAAM,CAACT,IAAP,CAAaC,GAAb,EAAkB,UAAWU,IAAX,EAAkB;AAEnC,UAAIC,IAAI,GAAG,IAAX;;AAEA,UAAI;AAEHA,QAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAYH,IAAZ,CAAP;AAEA,OAJD,CAIE,OAAQI,KAAR,EAAgB;AAEjB,YAAKX,OAAO,KAAKY,SAAjB,EAA6BZ,OAAO,CAAEW,KAAF,CAAP;AAE7BE,QAAAA,OAAO,CAACF,KAAR,CAAe,sCAAsCd,GAAtC,GAA4C,GAA3D,EAAgEc,KAAK,CAACG,OAAtE;AAEA;AAEA;;AAED,UAAIC,QAAQ,GAAGP,IAAI,CAACO,QAApB;;AAEA,UAAKA,QAAQ,KAAKH,SAAb,IAA0BG,QAAQ,CAACC,IAAT,KAAkBJ,SAA5C,IAAyDG,QAAQ,CAACC,IAAT,CAAcC,WAAd,OAAgC,UAA9F,EAA2G;AAE1GJ,QAAAA,OAAO,CAACF,KAAR,CAAe,qCAAqCd,GAApD;AACA;AAEA;;AAEDI,MAAAA,KAAK,CAACS,KAAN,CAAaF,IAAb,EAAmBV,MAAnB;AAEA,KA7BD,EA6BGC,UA7BH,EA6BeC,OA7Bf;AA+BA,GA5CyE;AA8C1EU,EAAAA,KAAK,EAAE,UAAWF,IAAX,EAAiBV,MAAjB,EAA0B;AAEhC,QAAIoB,MAAM,GAAG,KAAKC,UAAL,CAAiBX,IAAI,CAACU,MAAtB,CAAb;AACA,QAAIE,UAAU,GAAG,KAAKC,eAAL,CAAsBb,IAAI,CAACY,UAA3B,EAAuCF,MAAvC,CAAjB;AAEA,QAAII,MAAM,GAAG,KAAKC,WAAL,CAAkBf,IAAI,CAACc,MAAvB,EAA+B,YAAY;AAEvD,UAAKxB,MAAM,KAAKc,SAAhB,EAA4Bd,MAAM,CAAE0B,MAAF,CAAN;AAE5B,KAJY,CAAb;AAMA,QAAIC,QAAQ,GAAG,KAAKC,aAAL,CAAoBlB,IAAI,CAACiB,QAAzB,EAAmCH,MAAnC,CAAf;AACA,QAAIK,SAAS,GAAG,KAAKC,cAAL,CAAqBpB,IAAI,CAACmB,SAA1B,EAAqCF,QAArC,CAAhB;AAEA,QAAID,MAAM,GAAG,KAAKK,WAAL,CAAkBrB,IAAI,CAACgB,MAAvB,EAA+BJ,UAA/B,EAA2CO,SAA3C,CAAb;;AAEA,QAAKnB,IAAI,CAACsB,UAAV,EAAuB;AAEtBN,MAAAA,MAAM,CAACM,UAAP,GAAoB,KAAKC,eAAL,CAAsBvB,IAAI,CAACsB,UAA3B,CAApB;AAEA;;AAED,QAAKtB,IAAI,CAACc,MAAL,KAAgBV,SAAhB,IAA6BJ,IAAI,CAACc,MAAL,CAAYU,MAAZ,KAAuB,CAAzD,EAA6D;AAE5D,UAAKlC,MAAM,KAAKc,SAAhB,EAA4Bd,MAAM,CAAE0B,MAAF,CAAN;AAE5B;;AAED,WAAOA,MAAP;AAEA,GA5EyE;AA8E1EL,EAAAA,UAAU,EAAE,UAAWX,IAAX,EAAkB;AAE7B,QAAIU,MAAM,GAAG,EAAb;;AAEA,QAAKV,IAAI,KAAKI,SAAd,EAA0B;AAEzB,WAAM,IAAIqB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG1B,IAAI,CAACwB,MAA1B,EAAkCC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,YAAIE,KAAK,GAAG,IAAIpE,KAAJ,GAAYqE,QAAZ,CAAsB5B,IAAI,CAAEyB,CAAF,CAA1B,CAAZ;AAEAf,QAAAA,MAAM,CAAEiB,KAAK,CAACE,IAAR,CAAN,GAAuBF,KAAvB;AAEA;AAED;;AAED,WAAOjB,MAAP;AAEA,GAhGyE;AAkG1EG,EAAAA,eAAe,EAAE,UAAWb,IAAX,EAAiBU,MAAjB,EAA0B;AAE1C,QAAIE,UAAU,GAAG,EAAjB;;AAEA,QAAKZ,IAAI,KAAKI,SAAd,EAA0B;AAEzB,UAAI0B,oBAAoB,GAAG,IAAIpD,oBAAJ,EAA3B;;AAEA,WAAM,IAAI+C,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG1B,IAAI,CAACwB,MAA1B,EAAkCC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,YAAIM,QAAJ;AACA,YAAIC,IAAI,GAAGhC,IAAI,CAAEyB,CAAF,CAAf;;AAEA,gBAASO,IAAI,CAACxB,IAAd;AAEC,eAAK,eAAL;AACA,eAAK,qBAAL;AAECuB,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACC,KADK,EAEVD,IAAI,CAACE,MAFK,EAGVF,IAAI,CAACG,aAHK,EAIVH,IAAI,CAACI,cAJK,CAAX;AAOA;;AAED,eAAK,aAAL;AACA,eAAK,mBAAL;AACA,eAAK,cAAL;AAAqB;AAEpBL,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACC,KADK,EAEVD,IAAI,CAACE,MAFK,EAGVF,IAAI,CAACK,KAHK,EAIVL,IAAI,CAACG,aAJK,EAKVH,IAAI,CAACI,cALK,EAMVJ,IAAI,CAACM,aANK,CAAX;AASA;;AAED,eAAK,gBAAL;AACA,eAAK,sBAAL;AAECP,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACO,MADK,EAEVP,IAAI,CAACQ,QAFK,EAGVR,IAAI,CAACS,UAHK,EAIVT,IAAI,CAACU,WAJK,CAAX;AAOA;;AAED,eAAK,kBAAL;AACA,eAAK,wBAAL;AAECX,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACW,SADK,EAEVX,IAAI,CAACY,YAFK,EAGVZ,IAAI,CAACE,MAHK,EAIVF,IAAI,CAACa,cAJK,EAKVb,IAAI,CAACI,cALK,EAMVJ,IAAI,CAACc,SANK,EAOVd,IAAI,CAACS,UAPK,EAQVT,IAAI,CAACU,WARK,CAAX;AAWA;;AAED,eAAK,cAAL;AACA,eAAK,oBAAL;AAECX,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACO,MADK,EAEVP,IAAI,CAACE,MAFK,EAGVF,IAAI,CAACa,cAHK,EAIVb,IAAI,CAACI,cAJK,EAKVJ,IAAI,CAACc,SALK,EAMVd,IAAI,CAACS,UANK,EAOVT,IAAI,CAACU,WAPK,CAAX;AAUA;;AAED,eAAK,gBAAL;AACA,eAAK,sBAAL;AAECX,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACO,MADK,EAEVP,IAAI,CAACG,aAFK,EAGVH,IAAI,CAACI,cAHK,EAIVJ,IAAI,CAACe,QAJK,EAKVf,IAAI,CAACgB,SALK,EAMVhB,IAAI,CAACS,UANK,EAOVT,IAAI,CAACU,WAPK,CAAX;AAUA;;AAED,eAAK,sBAAL;AACA,eAAK,4BAAL;AACA,eAAK,qBAAL;AACA,eAAK,2BAAL;AACA,eAAK,oBAAL;AACA,eAAK,0BAAL;AACA,eAAK,qBAAL;AACA,eAAK,2BAAL;AAECX,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACO,MADK,EAEVP,IAAI,CAACiB,MAFK,CAAX;AAKA;;AAED,eAAK,cAAL;AACA,eAAK,oBAAL;AAEClB,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACkB,WADK,EAEVlB,IAAI,CAACmB,WAFK,EAGVnB,IAAI,CAACoB,aAHK,EAIVpB,IAAI,CAACqB,WAJK,EAKVrB,IAAI,CAACS,UALK,EAMVT,IAAI,CAACU,WANK,CAAX;AASA;;AAED,eAAK,eAAL;AACA,eAAK,qBAAL;AAECX,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACO,MADK,EAEVP,IAAI,CAACsB,IAFK,EAGVtB,IAAI,CAACa,cAHK,EAIVb,IAAI,CAACuB,eAJK,EAKVvB,IAAI,CAACwB,GALK,CAAX;AAQA;;AAED,eAAK,mBAAL;AACA,eAAK,yBAAL;AAECzB,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAACO,MADK,EAEVP,IAAI,CAACsB,IAFK,EAGVtB,IAAI,CAACuB,eAHK,EAIVvB,IAAI,CAACa,cAJK,EAKVb,IAAI,CAACyB,CALK,EAMVzB,IAAI,CAAC0B,CANK,CAAX;AASA;;AAED,eAAK,cAAL;AACA,eAAK,oBAAL;AAEC;AACA;AACA3B,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACV,IAAI1B,MAAM,CAAEkD,IAAI,CAACtC,IAAL,CAAUc,IAAZ,CAAV,GAA+BoB,QAA/B,CAAyCI,IAAI,CAACtC,IAA9C,CADU,EAEVsC,IAAI,CAACuB,eAFK,EAGVvB,IAAI,CAACO,MAHK,EAIVP,IAAI,CAACa,cAJK,EAKVb,IAAI,CAAC2B,MALK,CAAX;AAQA;;AAED,eAAK,eAAL;AACA,eAAK,qBAAL;AAEC5B,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAAC4B,MADK,EAEV5B,IAAI,CAACQ,QAFK,EAGVR,IAAI,CAACe,QAHK,EAIVf,IAAI,CAACgB,SAJK,CAAX;AAOA;;AAED,eAAK,oBAAL;AACA,eAAK,0BAAL;AAECjB,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwB,IAAI,CAAC6B,QADK,EAEV7B,IAAI,CAAC8B,OAFK,EAGV9B,IAAI,CAACO,MAHK,EAIVP,IAAI,CAAC+B,OAJK,CAAX;AAOA;;AAED,eAAK,eAAL;AACA,eAAK,qBAAL;AAEC,gBAAIC,cAAc,GAAG,EAArB;;AAEA,iBAAM,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGlC,IAAI,CAACtB,MAAL,CAAYc,MAAlC,EAA0CyC,CAAC,GAAGC,EAA9C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,kBAAItC,KAAK,GAAGjB,MAAM,CAAEsB,IAAI,CAACtB,MAAL,CAAauD,CAAb,CAAF,CAAlB;AAEAD,cAAAA,cAAc,CAACG,IAAf,CAAqBxC,KAArB;AAEA;;AAEDI,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwD,cADU,EAEVhC,IAAI,CAACoC,aAFK,CAAX;AAKA;;AAGD,eAAK,iBAAL;AACA,eAAK,uBAAL;AAEC,gBAAIJ,cAAc,GAAG,EAArB;;AAEA,iBAAM,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGlC,IAAI,CAACtB,MAAL,CAAYc,MAAlC,EAA0CyC,CAAC,GAAGC,EAA9C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,kBAAItC,KAAK,GAAGjB,MAAM,CAAEsB,IAAI,CAACtB,MAAL,CAAauD,CAAb,CAAF,CAAlB;AAEAD,cAAAA,cAAc,CAACG,IAAf,CAAqBxC,KAArB;AAEA;;AAED,gBAAI0C,WAAW,GAAGrC,IAAI,CAACsC,OAAL,CAAaD,WAA/B;;AAEA,gBAAKA,WAAW,KAAKjE,SAArB,EAAiC;AAEhC4B,cAAAA,IAAI,CAACsC,OAAL,CAAaD,WAAb,GAA2B,IAAIvF,MAAM,CAAEuF,WAAW,CAAC7D,IAAd,CAAV,GAAiCoB,QAAjC,CAA2CyC,WAA3C,CAA3B;AAEA;;AAEDtC,YAAAA,QAAQ,GAAG,IAAIlD,UAAU,CAAEmD,IAAI,CAACxB,IAAP,CAAd,CACVwD,cADU,EAEVhC,IAAI,CAACsC,OAFK,CAAX;AAKA;;AAED,eAAK,gBAAL;AACA,eAAK,yBAAL;AAECvC,YAAAA,QAAQ,GAAGD,oBAAoB,CAAC5B,KAArB,CAA4B8B,IAA5B,CAAX;AAEA;;AAED,eAAK,UAAL;AAEC,gBAAK,WAAWuC,MAAX,IAAqB,sBAAsBC,KAAhD,EAAwD;AAEvD,kBAAIC,cAAc,GAAG,IAAID,KAAK,CAACE,gBAAV,EAArB;AACA3C,cAAAA,QAAQ,GAAG0C,cAAc,CAACvE,KAAf,CAAsB8B,IAAtB,EAA4B,KAAKpC,YAAjC,EAAgDmC,QAA3D;AAGA,aAND,MAMO;AAEN1B,cAAAA,OAAO,CAACF,KAAR,CAAe,yGAAf;AAEA;;AAED;;AAED;AAECE,YAAAA,OAAO,CAACsE,IAAR,CAAc,oDAAoD3C,IAAI,CAACxB,IAAzD,GAAgE,GAA9E;AAEA;AAnQF;;AAuQAuB,QAAAA,QAAQ,CAACF,IAAT,GAAgBG,IAAI,CAACH,IAArB;AAEA,YAAKG,IAAI,CAAC4C,IAAL,KAAcxE,SAAnB,EAA+B2B,QAAQ,CAAC6C,IAAT,GAAgB5C,IAAI,CAAC4C,IAArB;AAC/B,YAAK7C,QAAQ,CAAC8C,gBAAT,KAA8B,IAA9B,IAAsC7C,IAAI,CAAC8C,QAAL,KAAkB1E,SAA7D,EAAyE2B,QAAQ,CAAC+C,QAAT,GAAoB9C,IAAI,CAAC8C,QAAzB;AAEzElE,QAAAA,UAAU,CAAEoB,IAAI,CAACH,IAAP,CAAV,GAA0BE,QAA1B;AAEA;AAED;;AAED,WAAOnB,UAAP;AAEA,GAnYyE;AAqY1EQ,EAAAA,cAAc,EAAE,UAAWpB,IAAX,EAAiBiB,QAAjB,EAA4B;AAE3C,QAAI8D,KAAK,GAAG,EAAZ,CAF2C,CAE3B;;AAChB,QAAI5D,SAAS,GAAG,EAAhB;;AAEA,QAAKnB,IAAI,KAAKI,SAAd,EAA0B;AAEzB,UAAIP,MAAM,GAAG,IAAIrB,cAAJ,EAAb;AACAqB,MAAAA,MAAM,CAACmF,WAAP,CAAoB/D,QAApB;;AAEA,WAAM,IAAIQ,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG1B,IAAI,CAACwB,MAA1B,EAAkCC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,YAAIO,IAAI,GAAGhC,IAAI,CAAEyB,CAAF,CAAf;;AAEA,YAAKO,IAAI,CAACxB,IAAL,KAAc,eAAnB,EAAqC;AAEpC;AAEA,cAAIyE,KAAK,GAAG,EAAZ;;AAEA,eAAM,IAAIhB,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGjC,IAAI,CAACb,SAAL,CAAeK,MAApC,EAA4CyC,CAAC,EAA7C,EAAmD;AAElD,gBAAIiB,QAAQ,GAAGlD,IAAI,CAACb,SAAL,CAAgB8C,CAAhB,CAAf;;AAEA,gBAAKc,KAAK,CAAEG,QAAQ,CAACrD,IAAX,CAAL,KAA2BzB,SAAhC,EAA4C;AAE3C2E,cAAAA,KAAK,CAAEG,QAAQ,CAACrD,IAAX,CAAL,GAAyBhC,MAAM,CAACK,KAAP,CAAcgF,QAAd,CAAzB;AAEA;;AAEDD,YAAAA,KAAK,CAACd,IAAN,CAAYY,KAAK,CAAEG,QAAQ,CAACrD,IAAX,CAAjB;AAEA;;AAEDV,UAAAA,SAAS,CAAEa,IAAI,CAACH,IAAP,CAAT,GAAyBoD,KAAzB;AAEA,SAtBD,MAsBO;AAEN,cAAKF,KAAK,CAAE/C,IAAI,CAACH,IAAP,CAAL,KAAuBzB,SAA5B,EAAwC;AAEvC2E,YAAAA,KAAK,CAAE/C,IAAI,CAACH,IAAP,CAAL,GAAqBhC,MAAM,CAACK,KAAP,CAAc8B,IAAd,CAArB;AAEA;;AAEDb,UAAAA,SAAS,CAAEa,IAAI,CAACH,IAAP,CAAT,GAAyBkD,KAAK,CAAE/C,IAAI,CAACH,IAAP,CAA9B;AAEA;AAED;AAED;;AAED,WAAOV,SAAP;AAEA,GA3byE;AA6b1EI,EAAAA,eAAe,EAAE,UAAWvB,IAAX,EAAkB;AAElC,QAAIsB,UAAU,GAAG,EAAjB;;AAEA,SAAM,IAAIG,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGzB,IAAI,CAACwB,MAA1B,EAAkCC,CAAC,EAAnC,EAAyC;AAExC,UAAIO,IAAI,GAAGhC,IAAI,CAAEyB,CAAF,CAAf;AAEA,UAAI0D,IAAI,GAAG5G,aAAa,CAAC2B,KAAd,CAAqB8B,IAArB,CAAX;AAEA,UAAKA,IAAI,CAACH,IAAL,KAAczB,SAAnB,EAA+B+E,IAAI,CAACtD,IAAL,GAAYG,IAAI,CAACH,IAAjB;AAE/BP,MAAAA,UAAU,CAAC6C,IAAX,CAAiBgB,IAAjB;AAEA;;AAED,WAAO7D,UAAP;AAEA,GA/cyE;AAid1EP,EAAAA,WAAW,EAAE,UAAWf,IAAX,EAAiBV,MAAjB,EAA0B;AAEtC,QAAIG,KAAK,GAAG,IAAZ;AACA,QAAIqB,MAAM,GAAG,EAAb;;AAEA,aAASsE,SAAT,CAAoB/F,GAApB,EAA0B;AAEzBI,MAAAA,KAAK,CAACT,OAAN,CAAcqG,SAAd,CAAyBhG,GAAzB;AAEA,aAAOQ,MAAM,CAACT,IAAP,CAAaC,GAAb,EAAkB,YAAY;AAEpCI,QAAAA,KAAK,CAACT,OAAN,CAAcsG,OAAd,CAAuBjG,GAAvB;AAEA,OAJM,EAIJe,SAJI,EAIO,YAAY;AAEzBX,QAAAA,KAAK,CAACT,OAAN,CAAcuG,SAAd,CAAyBlG,GAAzB;AACAI,QAAAA,KAAK,CAACT,OAAN,CAAcsG,OAAd,CAAuBjG,GAAvB;AAEA,OATM,CAAP;AAWA;;AAED,QAAKW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACwB,MAAL,GAAc,CAAzC,EAA6C;AAE5C,UAAIxC,OAAO,GAAG,IAAIV,cAAJ,CAAoBgB,MAApB,CAAd;AAEA,UAAIO,MAAM,GAAG,IAAIxB,WAAJ,CAAiBW,OAAjB,CAAb;AACAa,MAAAA,MAAM,CAAC2F,cAAP,CAAuB,KAAKC,WAA5B;;AAEA,WAAM,IAAIhE,CAAC,GAAG,CAAR,EAAWiE,EAAE,GAAG1F,IAAI,CAACwB,MAA3B,EAAmCC,CAAC,GAAGiE,EAAvC,EAA2CjE,CAAC,EAA5C,EAAkD;AAEjD,YAAIkE,KAAK,GAAG3F,IAAI,CAAEyB,CAAF,CAAhB;AACA,YAAIpC,GAAG,GAAGsG,KAAK,CAACtG,GAAhB;;AAEA,YAAK,eAAeA,GAAf,CAAL,EAA4B;AAE3B;AAEAyB,UAAAA,MAAM,CAAE6E,KAAK,CAAC9D,IAAR,CAAN,GAAuB,EAAvB;;AAEA,eAAM,IAAIoC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG7E,GAAG,CAACmC,MAA1B,EAAkCyC,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAAiD;AAEhD,gBAAI2B,UAAU,GAAGvG,GAAG,CAAE4E,CAAF,CAApB;AAEA,gBAAIvE,IAAI,GAAG,4BAA4BmG,IAA5B,CAAkCD,UAAlC,IAAiDA,UAAjD,GAA8DnG,KAAK,CAACG,YAAN,GAAqBgG,UAA9F;AAEA9E,YAAAA,MAAM,CAAE6E,KAAK,CAAC9D,IAAR,CAAN,CAAqBsC,IAArB,CAA2BiB,SAAS,CAAE1F,IAAF,CAApC;AAEA;AAED,SAhBD,MAgBO;AAEN;AAEA,cAAIA,IAAI,GAAG,4BAA4BmG,IAA5B,CAAkCF,KAAK,CAACtG,GAAxC,IAAgDsG,KAAK,CAACtG,GAAtD,GAA4DI,KAAK,CAACG,YAAN,GAAqB+F,KAAK,CAACtG,GAAlG;AAEAyB,UAAAA,MAAM,CAAE6E,KAAK,CAAC9D,IAAR,CAAN,GAAuBuD,SAAS,CAAE1F,IAAF,CAAhC;AAEA;AAED;AAED;;AAED,WAAOoB,MAAP;AAEA,GAnhByE;AAqhB1EI,EAAAA,aAAa,EAAE,UAAWlB,IAAX,EAAiBc,MAAjB,EAA0B;AAExC,aAASgF,aAAT,CAAwBC,KAAxB,EAA+BvF,IAA/B,EAAsC;AAErC,UAAK,OAAOuF,KAAP,KAAiB,QAAtB,EAAiC,OAAOA,KAAP;AAEjC1F,MAAAA,OAAO,CAACsE,IAAR,CAAc,sEAAd,EAAsFoB,KAAtF;AAEA,aAAOvF,IAAI,CAAEuF,KAAF,CAAX;AAEA;;AAED,QAAI9E,QAAQ,GAAG,EAAf;;AAEA,QAAKjB,IAAI,KAAKI,SAAd,EAA0B;AAEzB,WAAM,IAAIqB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG1B,IAAI,CAACwB,MAA1B,EAAkCC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,YAAIO,IAAI,GAAGhC,IAAI,CAAEyB,CAAF,CAAf;;AAEA,YAAKO,IAAI,CAAC2D,KAAL,KAAevF,SAApB,EAAgC;AAE/BC,UAAAA,OAAO,CAACsE,IAAR,CAAc,8CAAd,EAA8D3C,IAAI,CAACH,IAAnE;AAEA;;AAED,YAAKf,MAAM,CAAEkB,IAAI,CAAC2D,KAAP,CAAN,KAAyBvF,SAA9B,EAA0C;AAEzCC,UAAAA,OAAO,CAACsE,IAAR,CAAc,qCAAd,EAAqD3C,IAAI,CAAC2D,KAA1D;AAEA;;AAED,YAAIK,OAAJ;;AAEA,YAAK,eAAelF,MAAM,CAAEkB,IAAI,CAAC2D,KAAP,CAArB,CAAL,EAA6C;AAE5CK,UAAAA,OAAO,GAAG,IAAI7H,WAAJ,CAAiB2C,MAAM,CAAEkB,IAAI,CAAC2D,KAAP,CAAvB,CAAV;AAEA,SAJD,MAIO;AAENK,UAAAA,OAAO,GAAG,IAAI5H,OAAJ,CAAa0C,MAAM,CAAEkB,IAAI,CAAC2D,KAAP,CAAnB,CAAV;AAEA;;AAEDK,QAAAA,OAAO,CAACC,WAAR,GAAsB,IAAtB;AAEAD,QAAAA,OAAO,CAACnE,IAAR,GAAeG,IAAI,CAACH,IAApB;AAEA,YAAKG,IAAI,CAAC4C,IAAL,KAAcxE,SAAnB,EAA+B4F,OAAO,CAACpB,IAAR,GAAe5C,IAAI,CAAC4C,IAApB;AAE/B,YAAK5C,IAAI,CAACkE,OAAL,KAAiB9F,SAAtB,EAAkC4F,OAAO,CAACE,OAAR,GAAkBJ,aAAa,CAAE9D,IAAI,CAACkE,OAAP,EAAgBC,eAAhB,CAA/B;AAElC,YAAKnE,IAAI,CAACoE,MAAL,KAAgBhG,SAArB,EAAiC4F,OAAO,CAACI,MAAR,CAAeC,SAAf,CAA0BrE,IAAI,CAACoE,MAA/B;AACjC,YAAKpE,IAAI,CAACsE,MAAL,KAAgBlG,SAArB,EAAiC4F,OAAO,CAACM,MAAR,CAAeD,SAAf,CAA0BrE,IAAI,CAACsE,MAA/B;AACjC,YAAKtE,IAAI,CAACuE,MAAL,KAAgBnG,SAArB,EAAiC4F,OAAO,CAACO,MAAR,CAAeF,SAAf,CAA0BrE,IAAI,CAACuE,MAA/B;AACjC,YAAKvE,IAAI,CAACwE,QAAL,KAAkBpG,SAAvB,EAAmC4F,OAAO,CAACQ,QAAR,GAAmBxE,IAAI,CAACwE,QAAxB;;AAEnC,YAAKxE,IAAI,CAACyE,IAAL,KAAcrG,SAAnB,EAA+B;AAE9B4F,UAAAA,OAAO,CAACU,KAAR,GAAgBZ,aAAa,CAAE9D,IAAI,CAACyE,IAAL,CAAW,CAAX,CAAF,EAAkBE,gBAAlB,CAA7B;AACAX,UAAAA,OAAO,CAACY,KAAR,GAAgBd,aAAa,CAAE9D,IAAI,CAACyE,IAAL,CAAW,CAAX,CAAF,EAAkBE,gBAAlB,CAA7B;AAEA;;AAED,YAAK3E,IAAI,CAAC6E,MAAL,KAAgBzG,SAArB,EAAiC4F,OAAO,CAACa,MAAR,GAAiB7E,IAAI,CAAC6E,MAAtB;AACjC,YAAK7E,IAAI,CAACxB,IAAL,KAAcJ,SAAnB,EAA+B4F,OAAO,CAACxF,IAAR,GAAewB,IAAI,CAACxB,IAApB;AAC/B,YAAKwB,IAAI,CAAC8E,QAAL,KAAkB1G,SAAvB,EAAmC4F,OAAO,CAACc,QAAR,GAAmB9E,IAAI,CAAC8E,QAAxB;AAEnC,YAAK9E,IAAI,CAAC+E,SAAL,KAAmB3G,SAAxB,EAAoC4F,OAAO,CAACe,SAAR,GAAoBjB,aAAa,CAAE9D,IAAI,CAAC+E,SAAP,EAAkBC,cAAlB,CAAjC;AACpC,YAAKhF,IAAI,CAACiF,SAAL,KAAmB7G,SAAxB,EAAoC4F,OAAO,CAACiB,SAAR,GAAoBnB,aAAa,CAAE9D,IAAI,CAACiF,SAAP,EAAkBD,cAAlB,CAAjC;AACpC,YAAKhF,IAAI,CAACkF,UAAL,KAAoB9G,SAAzB,EAAqC4F,OAAO,CAACkB,UAAR,GAAqBlF,IAAI,CAACkF,UAA1B;AAErC,YAAKlF,IAAI,CAACmF,KAAL,KAAe/G,SAApB,EAAgC4F,OAAO,CAACmB,KAAR,GAAgBnF,IAAI,CAACmF,KAArB;AAEhC,YAAKnF,IAAI,CAACoF,gBAAL,KAA0BhH,SAA/B,EAA2C4F,OAAO,CAACoB,gBAAR,GAA2BpF,IAAI,CAACoF,gBAAhC;AAC3C,YAAKpF,IAAI,CAACqF,eAAL,KAAyBjH,SAA9B,EAA0C4F,OAAO,CAACqB,eAAR,GAA0BrF,IAAI,CAACqF,eAA/B;AAE1CpG,QAAAA,QAAQ,CAAEe,IAAI,CAACH,IAAP,CAAR,GAAwBmE,OAAxB;AAEA;AAED;;AAED,WAAO/E,QAAP;AAEA,GA1mByE;AA4mB1EI,EAAAA,WAAW,EAAE,UAAWW,IAAX,EAAiBpB,UAAjB,EAA6BO,SAA7B,EAAyC;AAErD,QAAIH,MAAJ;;AAEA,aAASsG,WAAT,CAAsB1C,IAAtB,EAA6B;AAE5B,UAAKhE,UAAU,CAAEgE,IAAF,CAAV,KAAuBxE,SAA5B,EAAwC;AAEvCC,QAAAA,OAAO,CAACsE,IAAR,CAAc,wCAAd,EAAwDC,IAAxD;AAEA;;AAED,aAAOhE,UAAU,CAAEgE,IAAF,CAAjB;AAEA;;AAED,aAAS2C,WAAT,CAAsB3C,IAAtB,EAA6B;AAE5B,UAAKA,IAAI,KAAKxE,SAAd,EAA0B,OAAOA,SAAP;;AAE1B,UAAK,eAAewE,IAAf,CAAL,EAA6B;AAE5B,YAAIK,KAAK,GAAG,EAAZ;;AAEA,aAAM,IAAIxD,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGkD,IAAI,CAACpD,MAA1B,EAAkCC,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,cAAII,IAAI,GAAG+C,IAAI,CAAEnD,CAAF,CAAf;;AAEA,cAAKN,SAAS,CAAEU,IAAF,CAAT,KAAsBzB,SAA3B,EAAuC;AAEtCC,YAAAA,OAAO,CAACsE,IAAR,CAAc,wCAAd,EAAwD9C,IAAxD;AAEA;;AAEDoD,UAAAA,KAAK,CAACd,IAAN,CAAYhD,SAAS,CAAEU,IAAF,CAArB;AAEA;;AAED,eAAOoD,KAAP;AAEA;;AAED,UAAK9D,SAAS,CAAEyD,IAAF,CAAT,KAAsBxE,SAA3B,EAAuC;AAEtCC,QAAAA,OAAO,CAACsE,IAAR,CAAc,wCAAd,EAAwDC,IAAxD;AAEA;;AAED,aAAOzD,SAAS,CAAEyD,IAAF,CAAhB;AAEA;;AAED,YAAS5C,IAAI,CAACxB,IAAd;AAEC,WAAK,OAAL;AAECQ,QAAAA,MAAM,GAAG,IAAI9C,KAAJ,EAAT;;AAEA,YAAK8D,IAAI,CAACwF,UAAL,KAAoBpH,SAAzB,EAAqC;AAEpC,cAAK,kBAAkB4B,IAAI,CAACwF,UAAvB,CAAL,EAA2C;AAE1CxG,YAAAA,MAAM,CAACwG,UAAP,GAAoB,IAAI7K,KAAJ,CAAWqF,IAAI,CAACwF,UAAhB,CAApB;AAEA;AAED;;AAED,YAAKxF,IAAI,CAACyF,GAAL,KAAarH,SAAlB,EAA8B;AAE7B,cAAK4B,IAAI,CAACyF,GAAL,CAASjH,IAAT,KAAkB,KAAvB,EAA+B;AAE9BQ,YAAAA,MAAM,CAACyG,GAAP,GAAa,IAAIjK,GAAJ,CAASwE,IAAI,CAACyF,GAAL,CAASC,KAAlB,EAAyB1F,IAAI,CAACyF,GAAL,CAASE,IAAlC,EAAwC3F,IAAI,CAACyF,GAAL,CAASG,GAAjD,CAAb;AAEA,WAJD,MAIO,IAAK5F,IAAI,CAACyF,GAAL,CAASjH,IAAT,KAAkB,SAAvB,EAAmC;AAEzCQ,YAAAA,MAAM,CAACyG,GAAP,GAAa,IAAIhK,OAAJ,CAAauE,IAAI,CAACyF,GAAL,CAASC,KAAtB,EAA6B1F,IAAI,CAACyF,GAAL,CAASI,OAAtC,CAAb;AAEA;AAED;;AAED;;AAED,WAAK,mBAAL;AAEC7G,QAAAA,MAAM,GAAG,IAAI/C,iBAAJ,CAAuB+D,IAAI,CAAC8F,GAA5B,EAAiC9F,IAAI,CAAC+F,MAAtC,EAA8C/F,IAAI,CAAC2F,IAAnD,EAAyD3F,IAAI,CAAC4F,GAA9D,CAAT;AAEA,YAAK5F,IAAI,CAACgG,KAAL,KAAe5H,SAApB,EAAgCY,MAAM,CAACgH,KAAP,GAAehG,IAAI,CAACgG,KAApB;AAChC,YAAKhG,IAAI,CAACiG,IAAL,KAAc7H,SAAnB,EAA+BY,MAAM,CAACiH,IAAP,GAAcjG,IAAI,CAACiG,IAAnB;AAC/B,YAAKjG,IAAI,CAACkG,SAAL,KAAmB9H,SAAxB,EAAoCY,MAAM,CAACkH,SAAP,GAAmBlG,IAAI,CAACkG,SAAxB;AACpC,YAAKlG,IAAI,CAACmG,UAAL,KAAoB/H,SAAzB,EAAqCY,MAAM,CAACmH,UAAP,GAAoBnG,IAAI,CAACmG,UAAzB;AACrC,YAAKnG,IAAI,CAACoG,IAAL,KAAchI,SAAnB,EAA+BY,MAAM,CAACoH,IAAP,GAAc,eAAe,EAAf,EAAmBpG,IAAI,CAACoG,IAAxB,CAAd;AAE/B;;AAED,WAAK,oBAAL;AAECpH,QAAAA,MAAM,GAAG,IAAIhD,kBAAJ,CAAwBgE,IAAI,CAACqG,IAA7B,EAAmCrG,IAAI,CAACsG,KAAxC,EAA+CtG,IAAI,CAACuG,GAApD,EAAyDvG,IAAI,CAACwG,MAA9D,EAAsExG,IAAI,CAAC2F,IAA3E,EAAiF3F,IAAI,CAAC4F,GAAtF,CAAT;AAEA,YAAK5F,IAAI,CAACiG,IAAL,KAAc7H,SAAnB,EAA+BY,MAAM,CAACiH,IAAP,GAAcjG,IAAI,CAACiG,IAAnB;AAC/B,YAAKjG,IAAI,CAACoG,IAAL,KAAchI,SAAnB,EAA+BY,MAAM,CAACoH,IAAP,GAAc,eAAe,EAAf,EAAmBpG,IAAI,CAACoG,IAAxB,CAAd;AAE/B;;AAED,WAAK,cAAL;AAECpH,QAAAA,MAAM,GAAG,IAAIlD,YAAJ,CAAkBkE,IAAI,CAAC0F,KAAvB,EAA8B1F,IAAI,CAACyG,SAAnC,CAAT;AAEA;;AAED,WAAK,kBAAL;AAECzH,QAAAA,MAAM,GAAG,IAAInD,gBAAJ,CAAsBmE,IAAI,CAAC0F,KAA3B,EAAkC1F,IAAI,CAACyG,SAAvC,CAAT;AAEA;;AAED,WAAK,YAAL;AAECzH,QAAAA,MAAM,GAAG,IAAIpD,UAAJ,CAAgBoE,IAAI,CAAC0F,KAArB,EAA4B1F,IAAI,CAACyG,SAAjC,EAA4CzG,IAAI,CAAC0G,QAAjD,EAA2D1G,IAAI,CAAC2G,KAAhE,CAAT;AAEA;;AAED,WAAK,eAAL;AAEC3H,QAAAA,MAAM,GAAG,IAAIjD,aAAJ,CAAmBiE,IAAI,CAAC0F,KAAxB,EAA+B1F,IAAI,CAACyG,SAApC,EAA+CzG,IAAI,CAACC,KAApD,EAA2DD,IAAI,CAACE,MAAhE,CAAT;AAEA;;AAED,WAAK,WAAL;AAEClB,QAAAA,MAAM,GAAG,IAAIrD,SAAJ,CAAeqE,IAAI,CAAC0F,KAApB,EAA2B1F,IAAI,CAACyG,SAAhC,EAA2CzG,IAAI,CAAC0G,QAAhD,EAA0D1G,IAAI,CAAC4G,KAA/D,EAAsE5G,IAAI,CAAC6G,QAA3E,EAAqF7G,IAAI,CAAC2G,KAA1F,CAAT;AAEA;;AAED,WAAK,iBAAL;AAEC3H,QAAAA,MAAM,GAAG,IAAItD,eAAJ,CAAqBsE,IAAI,CAAC0F,KAA1B,EAAiC1F,IAAI,CAAC8G,WAAtC,EAAmD9G,IAAI,CAACyG,SAAxD,CAAT;AAEA;;AAED,WAAK,aAAL;AAECpI,QAAAA,OAAO,CAACsE,IAAR,CAAc,oEAAd;;AAED,WAAK,MAAL;AAEC,YAAI5C,QAAQ,GAAGuF,WAAW,CAAEtF,IAAI,CAACD,QAAP,CAA1B;AACA,YAAImD,QAAQ,GAAGqC,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAA1B;;AAEA,YAAKnD,QAAQ,CAACgH,KAAT,IAAkBhH,QAAQ,CAACgH,KAAT,CAAevH,MAAf,GAAwB,CAA/C,EAAmD;AAElDR,UAAAA,MAAM,GAAG,IAAI1D,WAAJ,CAAiByE,QAAjB,EAA2BmD,QAA3B,CAAT;AAEA,SAJD,MAIO;AAENlE,UAAAA,MAAM,GAAG,IAAI3D,IAAJ,CAAU0E,QAAV,EAAoBmD,QAApB,CAAT;AAEA;;AAED;;AAED,WAAK,eAAL;AAEC,YAAInD,QAAQ,GAAGuF,WAAW,CAAEtF,IAAI,CAACD,QAAP,CAA1B;AACA,YAAImD,QAAQ,GAAGqC,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAA1B;AACA,YAAI8D,KAAK,GAAGhH,IAAI,CAACgH,KAAjB;AACA,YAAIC,cAAc,GAAGjH,IAAI,CAACiH,cAA1B;AAEAjI,QAAAA,MAAM,GAAG,IAAIlE,aAAJ,CAAmBiF,QAAnB,EAA6BmD,QAA7B,EAAuC8D,KAAvC,CAAT;AACAhI,QAAAA,MAAM,CAACiI,cAAP,GAAwB,IAAIvM,eAAJ,CAAqB,IAAIwM,YAAJ,CAAkBD,cAAc,CAAChE,KAAjC,CAArB,EAA+D,EAA/D,CAAxB;AAEA;;AAED,WAAK,KAAL;AAECjE,QAAAA,MAAM,GAAG,IAAI5D,GAAJ,EAAT;AAEA;;AAED,WAAK,MAAL;AAEC4D,QAAAA,MAAM,GAAG,IAAI/D,IAAJ,CAAUqK,WAAW,CAAEtF,IAAI,CAACD,QAAP,CAArB,EAAwCwF,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAAnD,EAAsElD,IAAI,CAACmH,IAA3E,CAAT;AAEA;;AAED,WAAK,UAAL;AAECnI,QAAAA,MAAM,GAAG,IAAI9D,QAAJ,CAAcoK,WAAW,CAAEtF,IAAI,CAACD,QAAP,CAAzB,EAA4CwF,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAAvD,CAAT;AAEA;;AAED,WAAK,cAAL;AAEClE,QAAAA,MAAM,GAAG,IAAI7D,YAAJ,CAAkBmK,WAAW,CAAEtF,IAAI,CAACD,QAAP,CAA7B,EAAgDwF,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAA3D,CAAT;AAEA;;AAED,WAAK,YAAL;AACA,WAAK,QAAL;AAEClE,QAAAA,MAAM,GAAG,IAAIhE,MAAJ,CAAYsK,WAAW,CAAEtF,IAAI,CAACD,QAAP,CAAvB,EAA0CwF,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAArD,CAAT;AAEA;;AAED,WAAK,QAAL;AAEClE,QAAAA,MAAM,GAAG,IAAIjE,MAAJ,CAAYwK,WAAW,CAAEvF,IAAI,CAACkD,QAAP,CAAvB,CAAT;AAEA;;AAED,WAAK,OAAL;AAEClE,QAAAA,MAAM,GAAG,IAAInE,KAAJ,EAAT;AAEA;;AAED;AAECmE,QAAAA,MAAM,GAAG,IAAIpE,QAAJ,EAAT;AAvKF;;AA2KAoE,IAAAA,MAAM,CAACa,IAAP,GAAcG,IAAI,CAACH,IAAnB;AAEA,QAAKG,IAAI,CAAC4C,IAAL,KAAcxE,SAAnB,EAA+BY,MAAM,CAAC4D,IAAP,GAAc5C,IAAI,CAAC4C,IAAnB;;AAE/B,QAAK5C,IAAI,CAACoH,MAAL,KAAgBhJ,SAArB,EAAiC;AAEhCY,MAAAA,MAAM,CAACoI,MAAP,CAAc/C,SAAd,CAAyBrE,IAAI,CAACoH,MAA9B;AAEA,UAAKpH,IAAI,CAACqH,gBAAL,KAA0BjJ,SAA/B,EAA2CY,MAAM,CAACqI,gBAAP,GAA0BrH,IAAI,CAACqH,gBAA/B;AAC3C,UAAKrI,MAAM,CAACqI,gBAAZ,EAA+BrI,MAAM,CAACoI,MAAP,CAAcE,SAAd,CAAyBtI,MAAM,CAACuI,QAAhC,EAA0CvI,MAAM,CAACwI,UAAjD,EAA6DxI,MAAM,CAACyI,KAApE;AAE/B,KAPD,MAOO;AAEN,UAAKzH,IAAI,CAACuH,QAAL,KAAkBnJ,SAAvB,EAAmCY,MAAM,CAACuI,QAAP,CAAgBlD,SAAhB,CAA2BrE,IAAI,CAACuH,QAAhC;AACnC,UAAKvH,IAAI,CAACwE,QAAL,KAAkBpG,SAAvB,EAAmCY,MAAM,CAACwF,QAAP,CAAgBH,SAAhB,CAA2BrE,IAAI,CAACwE,QAAhC;AACnC,UAAKxE,IAAI,CAACwH,UAAL,KAAoBpJ,SAAzB,EAAqCY,MAAM,CAACwI,UAAP,CAAkBnD,SAAlB,CAA6BrE,IAAI,CAACwH,UAAlC;AACrC,UAAKxH,IAAI,CAACyH,KAAL,KAAerJ,SAApB,EAAgCY,MAAM,CAACyI,KAAP,CAAapD,SAAb,CAAwBrE,IAAI,CAACyH,KAA7B;AAEhC;;AAED,QAAKzH,IAAI,CAAC0H,UAAL,KAAoBtJ,SAAzB,EAAqCY,MAAM,CAAC0I,UAAP,GAAoB1H,IAAI,CAAC0H,UAAzB;AACrC,QAAK1H,IAAI,CAAC2H,aAAL,KAAuBvJ,SAA5B,EAAwCY,MAAM,CAAC2I,aAAP,GAAuB3H,IAAI,CAAC2H,aAA5B;;AAExC,QAAK3H,IAAI,CAAC4H,MAAV,EAAmB;AAElB,UAAK5H,IAAI,CAAC4H,MAAL,CAAYC,IAAZ,KAAqBzJ,SAA1B,EAAsCY,MAAM,CAAC4I,MAAP,CAAcC,IAAd,GAAqB7H,IAAI,CAAC4H,MAAL,CAAYC,IAAjC;AACtC,UAAK7H,IAAI,CAAC4H,MAAL,CAAYrH,MAAZ,KAAuBnC,SAA5B,EAAwCY,MAAM,CAAC4I,MAAP,CAAcrH,MAAd,GAAuBP,IAAI,CAAC4H,MAAL,CAAYrH,MAAnC;AACxC,UAAKP,IAAI,CAAC4H,MAAL,CAAYE,OAAZ,KAAwB1J,SAA7B,EAAyCY,MAAM,CAAC4I,MAAP,CAAcE,OAAd,CAAsBzD,SAAtB,CAAiCrE,IAAI,CAAC4H,MAAL,CAAYE,OAA7C;AACzC,UAAK9H,IAAI,CAAC4H,MAAL,CAAYG,MAAZ,KAAuB3J,SAA5B,EAAwCY,MAAM,CAAC4I,MAAP,CAAcG,MAAd,GAAuB,KAAK1I,WAAL,CAAkBW,IAAI,CAAC4H,MAAL,CAAYG,MAA9B,CAAvB;AAExC;;AAED,QAAK/H,IAAI,CAACgI,OAAL,KAAiB5J,SAAtB,EAAkCY,MAAM,CAACgJ,OAAP,GAAiBhI,IAAI,CAACgI,OAAtB;AAClC,QAAKhI,IAAI,CAACiI,aAAL,KAAuB7J,SAA5B,EAAwCY,MAAM,CAACiJ,aAAP,GAAuBjI,IAAI,CAACiI,aAA5B;AACxC,QAAKjI,IAAI,CAACkI,WAAL,KAAqB9J,SAA1B,EAAsCY,MAAM,CAACkJ,WAAP,GAAqBlI,IAAI,CAACkI,WAA1B;AACtC,QAAKlI,IAAI,CAAC8C,QAAL,KAAkB1E,SAAvB,EAAmCY,MAAM,CAAC8D,QAAP,GAAkB9C,IAAI,CAAC8C,QAAvB;AACnC,QAAK9C,IAAI,CAACmI,MAAL,KAAgB/J,SAArB,EAAiCY,MAAM,CAACmJ,MAAP,CAAcC,IAAd,GAAqBpI,IAAI,CAACmI,MAA1B;;AAEjC,QAAKnI,IAAI,CAACqI,QAAL,KAAkBjK,SAAvB,EAAmC;AAElC,UAAIiK,QAAQ,GAAGrI,IAAI,CAACqI,QAApB;;AAEA,WAAM,IAAI5I,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG4I,QAAQ,CAAC7I,MAA9B,EAAsCC,CAAC,EAAvC,EAA6C;AAE5CT,QAAAA,MAAM,CAACsJ,GAAP,CAAY,KAAKjJ,WAAL,CAAkBgJ,QAAQ,CAAE5I,CAAF,CAA1B,EAAiCb,UAAjC,EAA6CO,SAA7C,CAAZ;AAEA;AAED;;AAED,QAAKa,IAAI,CAACxB,IAAL,KAAc,KAAnB,EAA2B;AAE1B,UAAKwB,IAAI,CAACuI,UAAL,KAAoBnK,SAAzB,EAAqCY,MAAM,CAACuJ,UAAP,GAAoBvI,IAAI,CAACuI,UAAzB;AAErC,UAAIC,MAAM,GAAGxI,IAAI,CAACwI,MAAlB;;AAEA,WAAM,IAAI9I,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG8I,MAAM,CAAChJ,MAA5B,EAAoCE,CAAC,EAArC,EAA2C;AAE1C,YAAI+I,KAAK,GAAGD,MAAM,CAAE9I,CAAF,CAAlB;AACA,YAAIgJ,KAAK,GAAG1J,MAAM,CAAC2J,mBAAP,CAA4B,MAA5B,EAAoCF,KAAK,CAACzJ,MAA1C,CAAZ;;AAEA,YAAK0J,KAAK,KAAKtK,SAAf,EAA2B;AAE1BY,UAAAA,MAAM,CAAC4J,QAAP,CAAiBF,KAAjB,EAAwBD,KAAK,CAAC/B,QAA9B;AAEA;AAED;AAED;;AAED,WAAO1H,MAAP;AAEA;AAp5ByE,CAAlD,CAAzB;AAw5BA,IAAImF,eAAe,GAAG;AACrB1K,EAAAA,SAAS,EAAEA,SADU;AAErBC,EAAAA,qBAAqB,EAAEA,qBAFF;AAGrBC,EAAAA,qBAAqB,EAAEA,qBAHF;AAIrBC,EAAAA,gCAAgC,EAAEA,gCAJb;AAKrBC,EAAAA,gCAAgC,EAAEA,gCALb;AAMrBC,EAAAA,0BAA0B,EAAEA,0BANP;AAOrBC,EAAAA,uBAAuB,EAAEA,uBAPJ;AAQrBC,EAAAA,uBAAuB,EAAEA;AARJ,CAAtB;AAWA,IAAI2K,gBAAgB,GAAG;AACtB1K,EAAAA,cAAc,EAAEA,cADM;AAEtBC,EAAAA,mBAAmB,EAAEA,mBAFC;AAGtBC,EAAAA,sBAAsB,EAAEA;AAHF,CAAvB;AAMA,IAAI6K,cAAc,GAAG;AACpB5K,EAAAA,aAAa,EAAEA,aADK;AAEpBC,EAAAA,0BAA0B,EAAEA,0BAFR;AAGpBC,EAAAA,yBAAyB,EAAEA,yBAHP;AAIpBC,EAAAA,YAAY,EAAEA,YAJM;AAKpBC,EAAAA,yBAAyB,EAAEA,yBALP;AAMpBC,EAAAA,wBAAwB,EAAEA;AANN,CAArB;AAUA,SAASsC,YAAT","sourcesContent":["import {\n\tUVMapping,\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tEquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping,\n\tSphericalReflectionMapping,\n\tCubeUVReflectionMapping,\n\tCubeUVRefractionMapping,\n\n\tRepeatWrapping,\n\tClampToEdgeWrapping,\n\tMirroredRepeatWrapping,\n\n\tNearestFilter,\n\tNearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter,\n\tLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter\n} from '../constants.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Group } from '../objects/Group.js';\nimport { InstancedMesh } from '../objects/InstancedMesh.js';\nimport { Sprite } from '../objects/Sprite.js';\nimport { Points } from '../objects/Points.js';\nimport { Line } from '../objects/Line.js';\nimport { LineLoop } from '../objects/LineLoop.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LOD } from '../objects/LOD.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { SkinnedMesh } from '../objects/SkinnedMesh.js';\nimport { Shape } from '../extras/core/Shape.js';\nimport { Fog } from '../scenes/Fog.js';\nimport { FogExp2 } from '../scenes/FogExp2.js';\nimport { HemisphereLight } from '../lights/HemisphereLight.js';\nimport { SpotLight } from '../lights/SpotLight.js';\nimport { PointLight } from '../lights/PointLight.js';\nimport { DirectionalLight } from '../lights/DirectionalLight.js';\nimport { AmbientLight } from '../lights/AmbientLight.js';\nimport { RectAreaLight } from '../lights/RectAreaLight.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Scene } from '../scenes/Scene.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Texture } from '../textures/Texture.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { LoadingManager } from './LoadingManager.js';\nimport { AnimationClip } from '../animation/AnimationClip.js';\nimport { MaterialLoader } from './MaterialLoader.js';\nimport { LoaderUtils } from './LoaderUtils.js';\nimport { BufferGeometryLoader } from './BufferGeometryLoader.js';\nimport { Loader } from './Loader.js';\nimport { FileLoader } from './FileLoader.js';\nimport * as Geometries from '../geometries/Geometries.js';\nimport * as Curves from '../extras/curves/Curves.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ObjectLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\t\t\t\tvar count = data.count;\n\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\n\nexport { ObjectLoader };\n"]},"metadata":{},"sourceType":"module"}