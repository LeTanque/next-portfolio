{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Curve } from '../core/Curve.js';\nimport { CubicBezier } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nfunction CubicBezierCurve(v0, v1, v2, v3) {\n  Curve.call(this);\n  this.type = 'CubicBezierCurve';\n  this.v0 = v0 || new Vector2();\n  this.v1 = v1 || new Vector2();\n  this.v2 = v2 || new Vector2();\n  this.v3 = v3 || new Vector2();\n}\n\nCubicBezierCurve.prototype = _Object$create(Curve.prototype);\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n  point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n  return point;\n};\n\nCubicBezierCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  this.v3.copy(source.v3);\n  return this;\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  data.v3 = this.v3.toArray();\n  return data;\n};\n\nCubicBezierCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  this.v3.fromArray(json.v3);\n  return this;\n};\n\nexport { CubicBezierCurve };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/extras/curves/CubicBezierCurve.js"],"names":["Curve","CubicBezier","Vector2","CubicBezierCurve","v0","v1","v2","v3","call","type","prototype","constructor","isCubicBezierCurve","getPoint","t","optionalTarget","point","set","x","y","copy","source","toJSON","data","toArray","fromJSON","json","fromArray"],"mappings":"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","sourcesContent":["import { Curve } from '../core/Curve.js';\nimport { CubicBezier } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\n\nexport { CubicBezierCurve };\n"]},"metadata":{},"sourceType":"module"}