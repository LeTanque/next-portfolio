{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.depthPacking = BasicDepthPacking;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.setValues(parameters);\n}\n\nMeshDepthMaterial.prototype = _Object$create(Material.prototype);\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.depthPacking = source.depthPacking;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n};\n\nexport { MeshDepthMaterial };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/materials/MeshDepthMaterial.js"],"names":["Material","BasicDepthPacking","MeshDepthMaterial","parameters","call","type","depthPacking","skinning","morphTargets","map","alphaMap","displacementMap","displacementScale","displacementBias","wireframe","wireframeLinewidth","fog","setValues","prototype","constructor","isMeshDepthMaterial","copy","source"],"mappings":";AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,iBAAT,CAA4BC,UAA5B,EAAyC;AAExCH,EAAAA,QAAQ,CAACI,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,mBAAZ;AAEA,OAAKC,YAAL,GAAoBL,iBAApB;AAEA,OAAKM,QAAL,GAAgB,KAAhB;AACA,OAAKC,YAAL,GAAoB,KAApB;AAEA,OAAKC,GAAL,GAAW,IAAX;AAEA,OAAKC,QAAL,GAAgB,IAAhB;AAEA,OAAKC,eAAL,GAAuB,IAAvB;AACA,OAAKC,iBAAL,GAAyB,CAAzB;AACA,OAAKC,gBAAL,GAAwB,CAAxB;AAEA,OAAKC,SAAL,GAAiB,KAAjB;AACA,OAAKC,kBAAL,GAA0B,CAA1B;AAEA,OAAKC,GAAL,GAAW,KAAX;AAEA,OAAKC,SAAL,CAAgBd,UAAhB;AAEA;;AAEDD,iBAAiB,CAACgB,SAAlB,GAA8B,eAAelB,QAAQ,CAACkB,SAAxB,CAA9B;AACAhB,iBAAiB,CAACgB,SAAlB,CAA4BC,WAA5B,GAA0CjB,iBAA1C;AAEAA,iBAAiB,CAACgB,SAAlB,CAA4BE,mBAA5B,GAAkD,IAAlD;;AAEAlB,iBAAiB,CAACgB,SAAlB,CAA4BG,IAA5B,GAAmC,UAAWC,MAAX,EAAoB;AAEtDtB,EAAAA,QAAQ,CAACkB,SAAT,CAAmBG,IAAnB,CAAwBjB,IAAxB,CAA8B,IAA9B,EAAoCkB,MAApC;AAEA,OAAKhB,YAAL,GAAoBgB,MAAM,CAAChB,YAA3B;AAEA,OAAKC,QAAL,GAAgBe,MAAM,CAACf,QAAvB;AACA,OAAKC,YAAL,GAAoBc,MAAM,CAACd,YAA3B;AAEA,OAAKC,GAAL,GAAWa,MAAM,CAACb,GAAlB;AAEA,OAAKC,QAAL,GAAgBY,MAAM,CAACZ,QAAvB;AAEA,OAAKC,eAAL,GAAuBW,MAAM,CAACX,eAA9B;AACA,OAAKC,iBAAL,GAAyBU,MAAM,CAACV,iBAAhC;AACA,OAAKC,gBAAL,GAAwBS,MAAM,CAACT,gBAA/B;AAEA,OAAKC,SAAL,GAAiBQ,MAAM,CAACR,SAAxB;AACA,OAAKC,kBAAL,GAA0BO,MAAM,CAACP,kBAAjC;AAEA,SAAO,IAAP;AAEA,CAtBD;;AAyBA,SAASb,iBAAT","sourcesContent":["import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n\nexport { MeshDepthMaterial };\n"]},"metadata":{},"sourceType":"module"}