{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useLayoutEffect, useState, useEffect } from \"react\"; // import ProgressiveImage from \"react-progressive-image-loading\";\n// import { Random } from \"react-animated-text\";\n// import { FaReact } from \"react-icons/fa\";\n// import { DiDebian, DiHtml5, DiCss3, DiJsBadge, DiRasberryPi, DiPython, DiIllustrator, DiSass } from \"react-icons/di\";\n\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\"; // This is the body of the skills page\n// const SkillsBody = () => {\n// This hook listens for resize events, updates the above state with results\n// useLayoutEffect(() => {\n//     // Check to see whether the client is a browser or not\n//     if (process.browser) {\n//         // Add the event listener looking for resize. Set the hook.\n//         window.addEventListener('resize', () => {\n//             setWidth(window.innerWidth)\n//         });\n//         setWidth(window.innerWidth);\n//     }\n//     if (width <= 800) {\n//         setSkillsBlockHeight(\"300px\")\n//     } else if (width <= 1200 && width >= 801) {\n//         setSkillsBlockHeight(\"200px\")\n//     } else {\n//         setSkillsBlockHeight(\"100%\")\n//     }\n// }, [width])\n// return(\n//     <section className=\"block--skills-wrapper\" >\n//         <div className=\"block--skills\">\n//             <p></p>\n//         </div>\n//     </section>\n// )}\n\nconst Skills = () => {\n  const {\n    0: textLoopChildren,\n    1: setTextLoopChildren\n  } = useState(\"\");\n  const {\n    0: textLoopInterval,\n    1: setTextLoopInterval\n  } = useState([3000, 1000]);\n  const namesOfSkills = [\"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"GNOME\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\"];\n  const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n  useEffect(() => {\n    setTextLoopChildren(characters);\n  }, []);\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"section__skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block__skill-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, namesOfSkills.map((eachSkill, index) => __jsx(SimpleIcons, {\n    key: index,\n    name: eachSkill,\n    className: \"icon--skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))), getRandomInt(0, 15), __jsx(\"main\", {\n    className: \"main__textlooper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"span__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"I love building \"), __jsx(TextLoop, {\n    interval: [600, 1700] // interval={textLoopInterval}\n    // children={textLoopChildren}\n    ,\n    delay: 0,\n    mask: true,\n    fade: true,\n    noWrap: true,\n    springConfig: {\n      stiffness: 70,\n      damping: 31,\n      precision: 0.01\n    },\n    adjustingSpeed: 150,\n    className: \"text-loop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, namesOfSkills.map((eachSkill, index) => __jsx(React.Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, eachSkill))), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, textLoopChildren)))));\n};\n\nexport default Skills;","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/pages/skills.jsx"],"names":["useLayoutEffect","useState","useEffect","SimpleIcons","TextLoop","Skills","textLoopChildren","setTextLoopChildren","textLoopInterval","setTextLoopInterval","namesOfSkills","characters","getRandomInt","min","max","Math","ceil","floor","random","map","eachSkill","index","stiffness","damping","precision"],"mappings":"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","sourcesContent":["import { useLayoutEffect, useState, useEffect } from \"react\";\n// import ProgressiveImage from \"react-progressive-image-loading\";\n// import { Random } from \"react-animated-text\";\n// import { FaReact } from \"react-icons/fa\";\n// import { DiDebian, DiHtml5, DiCss3, DiJsBadge, DiRasberryPi, DiPython, DiIllustrator, DiSass } from \"react-icons/di\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\n\n\n\n\n// This is the body of the skills page\n// const SkillsBody = () => {\n// This hook listens for resize events, updates the above state with results\n// useLayoutEffect(() => {\n//     // Check to see whether the client is a browser or not\n//     if (process.browser) {\n//         // Add the event listener looking for resize. Set the hook.\n//         window.addEventListener('resize', () => {\n//             setWidth(window.innerWidth)\n//         });\n//         setWidth(window.innerWidth);\n//     }\n//     if (width <= 800) {\n//         setSkillsBlockHeight(\"300px\")\n//     } else if (width <= 1200 && width >= 801) {\n//         setSkillsBlockHeight(\"200px\")\n//     } else {\n//         setSkillsBlockHeight(\"100%\")\n//     }\n// }, [width])\n// return(\n//     <section className=\"block--skills-wrapper\" >\n//         <div className=\"block--skills\">\n//             <p></p>\n//         </div>\n//     </section>\n// )}\n\n\n\n\n\nconst Skills = () => {\n    const [ textLoopChildren, setTextLoopChildren ] = useState(\"\");\n    const [ textLoopInterval, setTextLoopInterval ] = useState([3000, 1000]);\n    const namesOfSkills = [ \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"GNOME\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\" ] \n    const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n    \n    useEffect(() => {\n        setTextLoopChildren(characters);\n    }, [])\n    \n\n\n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n\n\n    return (\n        <>\n            <section className=\"section__skills\" >\n\n                <div className=\"block__skill-icons\">\n                    {namesOfSkills.map((eachSkill, index) => (\n                        <SimpleIcons \n                            key={index}\n                            name={eachSkill}\n                            className=\"icon--skills\"\n                        />\n                    ))}\n                </div>\n\n                {getRandomInt(0, 15)}\n                <main className=\"main__textlooper\">\n                    <span className=\"span__title\">I love building </span>\n                    <TextLoop \n                        interval={[600, 1700]} \n                        // interval={textLoopInterval}\n                        // children={textLoopChildren}\n                        delay={0}\n                        mask={true} \n                        fade={true}\n                        noWrap={true}\n                        springConfig={{ stiffness: 70, damping: 31, precision: 0.01 }}\n                        adjustingSpeed={150}\n                        className=\"text-loop\"\n                    >\n                        {namesOfSkills.map((eachSkill, index) => (\n                            <React.Fragment key={index}>\n                                <span>{eachSkill}</span>\n                            </React.Fragment>\n                        ))}\n                        \n                        <span>{textLoopChildren}</span>\n                    </TextLoop >\n                </main>\n\n            </section>\n\n\n\n            {/* <Random\n                text={characters}\n                paused={state.paused}\n                iterations={1}\n                effect=\"verticalFadeIn\"\n                effectChange={2}\n                effectDirection=\"up\"\n            /> */}\n\n\n            {/* <ProgressiveImage\n                preview=\"/static/bogomil-mihaylov-small.jpg\"\n                src=\"/static/bogomil-mihaylov-wVTLXWM-Gh0-unsplash.jpg\"\n                transitionTime={700}\n                transitionFunction=\"ease\"\n                render={(src, style) => (\n                    <section className=\"section__skills\" style={Object.assign(style, { backgroundImage: `url(${src})` })} >\n                        {style.filter === \"blur(0px)\" ? (\n                            <SkillsBody   />\n                        ) : null}\n                    </section>\n                )}\n            /> */}\n\n        </>\n    );\n}\n\n\nexport default Skills;\n\n"]},"metadata":{},"sourceType":"module"}