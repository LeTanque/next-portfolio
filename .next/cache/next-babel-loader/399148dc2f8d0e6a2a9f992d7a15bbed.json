{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/components/dnd-draglayer/CustomDragLayer.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { DragLayer } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport BoxDragPreview from './BoxDragPreview';\nimport snapToGrid from './snapToGrid';\n\nfunction getItemStyles(props) {\n  var initialOffset = props.initialOffset,\n      currentOffset = props.currentOffset;\n\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  var x = currentOffset.x,\n      y = currentOffset.y;\n\n  if (props.snapToGrid) {\n    x -= initialOffset.x;\n    y -= initialOffset.y;\n\n    var _snapToGrid = snapToGrid(x, y);\n\n    var _snapToGrid2 = _slicedToArray(_snapToGrid, 2);\n\n    x = _snapToGrid2[0];\n    y = _snapToGrid2[1];\n    x += initialOffset.x;\n    y += initialOffset.y;\n  }\n\n  var transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n  return {\n    transform: transform,\n    WebkitTransform: transform\n  };\n}\n\nvar CustomDragLayer = function CustomDragLayer(props) {\n  var item = props.item,\n      itemType = props.itemType,\n      isDragging = props.isDragging;\n\n  function renderItem() {\n    switch (itemType) {\n      case ItemTypes.BOX:\n        return __jsx(BoxDragPreview, {\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n\n      default:\n        return null;\n    }\n  }\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    className: \"section__custom-drag-layer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: getItemStyles(props),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, renderItem()));\n};\n\nexport default DragLayer(function (monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n})(CustomDragLayer);","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/dnd-draglayer/CustomDragLayer.jsx"],"names":["React","DragLayer","ItemTypes","BoxDragPreview","snapToGrid","getItemStyles","props","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","CustomDragLayer","item","itemType","isDragging","renderItem","BOX","title","monitor","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,MACpBC,aADoB,GACaD,KADb,CACpBC,aADoB;AAAA,MACLC,aADK,GACaF,KADb,CACLE,aADK;;AAE5B,MAAI,CAACD,aAAD,IAAkB,CAACC,aAAvB,EAAsC;AACpC,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;;AAN2B,MAOtBC,CAPsB,GAObF,aAPa,CAOtBE,CAPsB;AAAA,MAOnBC,CAPmB,GAObH,aAPa,CAOnBG,CAPmB;;AAQ5B,MAAIL,KAAK,CAACF,UAAV,EAAsB;AACpBM,IAAAA,CAAC,IAAIH,aAAa,CAACG,CAAnB;AACAC,IAAAA,CAAC,IAAIJ,aAAa,CAACI,CAAnB;;AAFoB,sBAGVP,UAAU,CAACM,CAAD,EAAIC,CAAJ,CAHA;;AAAA;;AAGlBD,IAAAA,CAHkB;AAGfC,IAAAA,CAHe;AAIpBD,IAAAA,CAAC,IAAIH,aAAa,CAACG,CAAnB;AACAC,IAAAA,CAAC,IAAIJ,aAAa,CAACI,CAAnB;AACD;;AACD,MAAMC,SAAS,uBAAgBF,CAAhB,iBAAwBC,CAAxB,QAAf;AACA,SAAO;AACLC,IAAAA,SAAS,EAATA,SADK;AAELC,IAAAA,eAAe,EAAED;AAFZ,GAAP;AAID;;AAED,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAR,KAAK,EAAI;AAAA,MACvBS,IADuB,GACQT,KADR,CACvBS,IADuB;AAAA,MACjBC,QADiB,GACQV,KADR,CACjBU,QADiB;AAAA,MACPC,UADO,GACQX,KADR,CACPW,UADO;;AAE/B,WAASC,UAAT,GAAsB;AACpB,YAAQF,QAAR;AACE,WAAKd,SAAS,CAACiB,GAAf;AACE,eAAO,MAAC,cAAD;AAAgB,UAAA,KAAK,EAAEJ,IAAI,CAACK,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,eAAO,IAAP;AAJJ;AAMD;;AACD,MAAI,CAACH,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEZ,aAAa,CAACC,KAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCY,UAAU,EAA7C,CADF,CADF;AAKD,CAlBD;;AAoBA,eAAejB,SAAS,CAAC,UAAAoB,OAAO;AAAA,SAAK;AACnCN,IAAAA,IAAI,EAAEM,OAAO,CAACC,OAAR,EAD6B;AAEnCN,IAAAA,QAAQ,EAAEK,OAAO,CAACE,WAAR,EAFyB;AAGnChB,IAAAA,aAAa,EAAEc,OAAO,CAACG,4BAAR,EAHoB;AAInChB,IAAAA,aAAa,EAAEa,OAAO,CAACI,qBAAR,EAJoB;AAKnCR,IAAAA,UAAU,EAAEI,OAAO,CAACJ,UAAR;AALuB,GAAL;AAAA,CAAR,CAAT,CAMXH,eANW,CAAf","sourcesContent":["import React from 'react';\nimport { DragLayer } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport BoxDragPreview from './BoxDragPreview';\nimport snapToGrid from './snapToGrid';\n\n\nfunction getItemStyles(props) {\n  const { initialOffset, currentOffset } = props\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    }\n  }\n  let { x, y } = currentOffset\n  if (props.snapToGrid) {\n    x -= initialOffset.x\n    y -= initialOffset.y\n    ;[x, y] = snapToGrid(x, y)\n    x += initialOffset.x\n    y += initialOffset.y\n  }\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform,\n  }\n}\n\nconst CustomDragLayer = props => {\n  const { item, itemType, isDragging } = props\n  function renderItem() {\n    switch (itemType) {\n      case ItemTypes.BOX:\n        return <BoxDragPreview title={item.title} />\n      default:\n        return null\n    }\n  }\n  if (!isDragging) {\n    return null\n  }\n  return (\n    <div className=\"section__custom-drag-layer\"  >\n      <div style={getItemStyles(props)}>{renderItem()}</div>\n    </div>\n  )\n}\n\nexport default DragLayer(monitor => ({\n  item: monitor.getItem(),\n  itemType: monitor.getItemType(),\n  initialOffset: monitor.getInitialSourceClientOffset(),\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging(),\n}))(CustomDragLayer)\n"]},"metadata":{},"sourceType":"module"}