{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport { Curve } from '../core/Curve.js';\nimport { QuadraticBezier } from '../core/Interpolations.js';\nimport { Vector3 } from '../../math/Vector3.js';\n\nfunction QuadraticBezierCurve3(v0, v1, v2) {\n  Curve.call(this);\n  this.type = 'QuadraticBezierCurve3';\n  this.v0 = v0 || new Vector3();\n  this.v1 = v1 || new Vector3();\n  this.v2 = v2 || new Vector3();\n}\n\nQuadraticBezierCurve3.prototype = _Object$create(Curve.prototype);\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n  point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n  return point;\n};\n\nQuadraticBezierCurve3.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nexport { QuadraticBezierCurve3 };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/extras/curves/QuadraticBezierCurve3.js"],"names":["Curve","QuadraticBezier","Vector3","QuadraticBezierCurve3","v0","v1","v2","call","type","prototype","constructor","isQuadraticBezierCurve3","getPoint","t","optionalTarget","point","set","x","y","z","copy","source","toJSON","data","toArray","fromJSON","json","fromArray"],"mappings":"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","sourcesContent":["import { Curve } from '../core/Curve.js';\nimport { QuadraticBezier } from '../core/Interpolations.js';\nimport { Vector3 } from '../../math/Vector3.js';\n\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\n\nexport { QuadraticBezierCurve3 };\n"]},"metadata":{},"sourceType":"module"}