{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport { StaticDrawUsage } from '../constants.js';\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer(array, stride) {\n  this.array = array;\n  this.stride = stride;\n  this.count = array !== undefined ? array.length / stride : 0;\n  this.usage = StaticDrawUsage;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n}\n\n_Object$defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\n\n_Object$assign(InterleavedBuffer.prototype, {\n  isInterleavedBuffer: true,\n  onUploadCallback: function () {},\n  setUsage: function (value) {\n    this.usage = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.count = source.count;\n    this.stride = source.stride;\n    this.usage = source.usage;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (var i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  onUpload: function (callback) {\n    this.onUploadCallback = callback;\n    return this;\n  }\n});\n\nexport { InterleavedBuffer };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/core/InterleavedBuffer.js"],"names":["StaticDrawUsage","InterleavedBuffer","array","stride","count","undefined","length","usage","updateRange","offset","version","prototype","set","value","isInterleavedBuffer","onUploadCallback","setUsage","copy","source","constructor","copyAt","index1","attribute","index2","i","l","clone","onUpload","callback"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,iBAAhC;AAEA;;;;AAIA,SAASC,iBAAT,CAA4BC,KAA5B,EAAmCC,MAAnC,EAA4C;AAE3C,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,KAAL,GAAaF,KAAK,KAAKG,SAAV,GAAsBH,KAAK,CAACI,MAAN,GAAeH,MAArC,GAA8C,CAA3D;AAEA,OAAKI,KAAL,GAAaP,eAAb;AACA,OAAKQ,WAAL,GAAmB;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaL,IAAAA,KAAK,EAAE,CAAE;AAAtB,GAAnB;AAEA,OAAKM,OAAL,GAAe,CAAf;AAEA;;AAED,uBAAuBT,iBAAiB,CAACU,SAAzC,EAAoD,aAApD,EAAmE;AAElEC,EAAAA,GAAG,EAAE,UAAWC,KAAX,EAAmB;AAEvB,QAAKA,KAAK,KAAK,IAAf,EAAsB,KAAKH,OAAL;AAEtB;AANiE,CAAnE;;AAUA,eAAeT,iBAAiB,CAACU,SAAjC,EAA4C;AAE3CG,EAAAA,mBAAmB,EAAE,IAFsB;AAI3CC,EAAAA,gBAAgB,EAAE,YAAY,CAAE,CAJW;AAM3CC,EAAAA,QAAQ,EAAE,UAAWH,KAAX,EAAmB;AAE5B,SAAKN,KAAL,GAAaM,KAAb;AAEA,WAAO,IAAP;AAEA,GAZ0C;AAc3CI,EAAAA,IAAI,EAAE,UAAWC,MAAX,EAAoB;AAEzB,SAAKhB,KAAL,GAAa,IAAIgB,MAAM,CAAChB,KAAP,CAAaiB,WAAjB,CAA8BD,MAAM,CAAChB,KAArC,CAAb;AACA,SAAKE,KAAL,GAAac,MAAM,CAACd,KAApB;AACA,SAAKD,MAAL,GAAce,MAAM,CAACf,MAArB;AACA,SAAKI,KAAL,GAAaW,MAAM,CAACX,KAApB;AAEA,WAAO,IAAP;AAEA,GAvB0C;AAyB3Ca,EAAAA,MAAM,EAAE,UAAWC,MAAX,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAuC;AAE9CF,IAAAA,MAAM,IAAI,KAAKlB,MAAf;AACAoB,IAAAA,MAAM,IAAID,SAAS,CAACnB,MAApB;;AAEA,SAAM,IAAIqB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKtB,MAA1B,EAAkCqB,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAAgD;AAE/C,WAAKtB,KAAL,CAAYmB,MAAM,GAAGG,CAArB,IAA2BF,SAAS,CAACpB,KAAV,CAAiBqB,MAAM,GAAGC,CAA1B,CAA3B;AAEA;;AAED,WAAO,IAAP;AAEA,GAtC0C;AAwC3CZ,EAAAA,GAAG,EAAE,UAAWC,KAAX,EAAkBJ,MAAlB,EAA2B;AAE/B,QAAKA,MAAM,KAAKJ,SAAhB,EAA4BI,MAAM,GAAG,CAAT;AAE5B,SAAKP,KAAL,CAAWU,GAAX,CAAgBC,KAAhB,EAAuBJ,MAAvB;AAEA,WAAO,IAAP;AAEA,GAhD0C;AAkD3CiB,EAAAA,KAAK,EAAE,YAAY;AAElB,WAAO,IAAI,KAAKP,WAAT,GAAuBF,IAAvB,CAA6B,IAA7B,CAAP;AAEA,GAtD0C;AAwD3CU,EAAAA,QAAQ,EAAE,UAAWC,QAAX,EAAsB;AAE/B,SAAKb,gBAAL,GAAwBa,QAAxB;AAEA,WAAO,IAAP;AAEA;AA9D0C,CAA5C;;AAmEA,SAAS3B,iBAAT","sourcesContent":["import { StaticDrawUsage } from '../constants.js';\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { InterleavedBuffer };\n"]},"metadata":{},"sourceType":"module"}