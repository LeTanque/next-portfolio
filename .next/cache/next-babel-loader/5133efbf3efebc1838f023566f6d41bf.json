{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\nimport { Vector3 } from '../math/Vector3.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { VertexColors } from '../constants.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { OctahedronBufferGeometry } from '../geometries/OctahedronGeometry.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = new Vector3();\n\nvar _color1 = new Color();\n\nvar _color2 = new Color();\n\nfunction HemisphereLightHelper(light, size, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var geometry = new OctahedronBufferGeometry(size);\n  geometry.rotateY(Math.PI * 0.5);\n  this.material = new MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  if (this.color === undefined) this.material.vertexColors = VertexColors;\n  var position = geometry.getAttribute('position');\n  var colors = new Float32Array(position.count * 3);\n  geometry.setAttribute('color', new BufferAttribute(colors, 3));\n  this.add(new Mesh(geometry, this.material));\n  this.update();\n}\n\nHemisphereLightHelper.prototype = _Object$create(Object3D.prototype);\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n  this.children[0].geometry.dispose();\n  this.children[0].material.dispose();\n};\n\nHemisphereLightHelper.prototype.update = function () {\n  var mesh = this.children[0];\n\n  if (this.color !== undefined) {\n    this.material.color.set(this.color);\n  } else {\n    var colors = mesh.geometry.getAttribute('color');\n\n    _color1.copy(this.light.color);\n\n    _color2.copy(this.light.groundColor);\n\n    for (var i = 0, l = colors.count; i < l; i++) {\n      var color = i < l / 2 ? _color1 : _color2;\n      colors.setXYZ(i, color.r, color.g, color.b);\n    }\n\n    colors.needsUpdate = true;\n  }\n\n  mesh.lookAt(_vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n};\n\nexport { HemisphereLightHelper };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/helpers/HemisphereLightHelper.js"],"names":["Vector3","Color","Object3D","Mesh","VertexColors","MeshBasicMaterial","OctahedronBufferGeometry","BufferAttribute","_vector","_color1","_color2","HemisphereLightHelper","light","size","color","call","updateMatrixWorld","matrix","matrixWorld","matrixAutoUpdate","geometry","rotateY","Math","PI","material","wireframe","fog","undefined","vertexColors","position","getAttribute","colors","Float32Array","count","setAttribute","add","update","prototype","constructor","dispose","children","mesh","set","copy","groundColor","i","l","setXYZ","r","g","b","needsUpdate","lookAt","setFromMatrixPosition","negate"],"mappings":"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","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Vector3 } from '../math/Vector3.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { VertexColors } from '../constants.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { OctahedronBufferGeometry } from '../geometries/OctahedronGeometry.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = new Vector3();\nvar _color1 = new Color();\nvar _color2 = new Color();\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar mesh = this.children[ 0 ];\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t_color1.copy( this.light.color );\n\t\t_color2.copy( this.light.groundColor );\n\n\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t}\n\n\t\tcolors.needsUpdate = true;\n\n\t}\n\n\tmesh.lookAt( _vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n};\n\n\nexport { HemisphereLightHelper };\n"]},"metadata":{},"sourceType":"module"}