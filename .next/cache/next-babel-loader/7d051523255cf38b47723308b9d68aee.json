{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/components/TextLoop.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\n\nvar TextLooper = function TextLooper() {\n  var namesOfSkills = [\"three.js\", \"passion\", \"teams\", \"friends\", \"open-source\", \"Raspberry Pi\", \"Arduino\", \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"JavaScript\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"Linux\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\"];\n  var characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n\n  var _useState = useState(),\n      skillsWithCharacters = _useState[0],\n      setSkillsWithCharacters = _useState[1];\n\n  useEffect(function () {\n    if (!skillsWithCharacters) {\n      var finalArray = getArrSkillsWithCharacters(namesOfSkills, characters);\n      setSkillsWithCharacters(finalArray);\n    }\n  }, []);\n\n  var getRandomInt = function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }; // const getNumberOfRandomCharacters = (number, chars) => {\n  //     if (!number) number = 9;\n  //     return chars.substr(getRandomInt(0, chars.length - number), number + 1)\n  // }\n\n\n  var getArrSkillsWithCharacters = function getArrSkillsWithCharacters(skills, chars) {\n    var skillCharArr = [];\n\n    for (var i = 0; i <= 88; i++) {\n      var selectSkill = skills[getRandomInt(0, namesOfSkills.length - 1)]; // let createChars = getNumberOfRandomCharacters(selectSkill.length - 1, chars)\n\n      skillCharArr.push(selectSkill);\n    }\n\n    ;\n    return skillCharArr;\n  };\n\n  return __jsx(\"main\", {\n    className: \"main__textlooper header-major\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"I love building with\\xA0\"), skillsWithCharacters ? __jsx(TextLoop, {\n    interval: [2000, 3000],\n    delay: 0,\n    mask: false,\n    fade: true,\n    noWrap: false,\n    springConfig: {\n      stiffness: 300,\n      damping: 53,\n      precision: 0.1\n    },\n    adjustingSpeed: 150,\n    className: \"text-loop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, skillsWithCharacters.map(function (entry, index) {\n    return __jsx(React.Fragment, {\n      key: index + \"-\" + entry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, skillsWithCharacters[index]), __jsx(SimpleIcons, {\n      name: entry,\n      className: \"icon--skills\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  })) : null);\n};\n\nexport default TextLooper;","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/TextLoop.jsx"],"names":["useState","useEffect","SimpleIcons","TextLoop","TextLooper","namesOfSkills","characters","skillsWithCharacters","setSkillsWithCharacters","finalArray","getArrSkillsWithCharacters","getRandomInt","min","max","Math","ceil","floor","random","skills","chars","skillCharArr","i","selectSkill","length","push","stiffness","damping","precision","map","entry","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport SimpleIcons from 'simple-icons-react-component';\nimport TextLoop from \"react-text-loop\";\n\n\nconst TextLooper = () => {\n    const namesOfSkills = [ \"three.js\", \"passion\", \"teams\", \"friends\", \"open-source\", \"Raspberry Pi\", \"Arduino\", \"Next.js\", \"React\", \"Redux\", \"GraphQL\", \"Node.js\", \"JavaScript\", \"PostgreSQL\", \"Apache\", \"Docker\", \"Debian\", \"Linux\", \"Adobe Illustrator\", \"GIMP\", \"Sass\", \"Ripple\", \"Mapbox\" ] \n    const characters = \"日アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\";\n    const [ skillsWithCharacters, setSkillsWithCharacters ] = useState();\n    \n\n    useEffect(() => {\n        if (!skillsWithCharacters) {\n            const finalArray = getArrSkillsWithCharacters(namesOfSkills, characters);\n            setSkillsWithCharacters(finalArray);\n        }\n    }, [])\n    \n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    // const getNumberOfRandomCharacters = (number, chars) => {\n    //     if (!number) number = 9;\n    //     return chars.substr(getRandomInt(0, chars.length - number), number + 1)\n    // }\n\n    const getArrSkillsWithCharacters = (skills, chars) => {\n        let skillCharArr = [];\n        for (let i=0; i<=88; i++) {\n            let selectSkill = skills[getRandomInt(0, namesOfSkills.length - 1)];\n            // let createChars = getNumberOfRandomCharacters(selectSkill.length - 1, chars)\n            skillCharArr.push(selectSkill);\n        };\n        return skillCharArr;\n    }\n\n    return (\n        <main className=\"main__textlooper header-major\">\n            <div className=\"block__title\">I love building with&nbsp;</div>\n            \n            {skillsWithCharacters ? (\n                <TextLoop \n                    interval={[2000, 3000]}\n                    delay={0}\n                    mask={false} \n                    fade={true}\n                    noWrap={false}\n                    springConfig={{ stiffness: 300, damping: 53, precision: 0.1 }}\n                    adjustingSpeed={150}\n                    className=\"text-loop\"\n                >\n                    {skillsWithCharacters.map((entry, index) => (\n                        <React.Fragment key={index + \"-\" + entry}>\n                            <h3 >\n                                {skillsWithCharacters[index]}\n                            </h3>\n                            <SimpleIcons \n                                name={entry}\n                                className=\"icon--skills\"\n                            />\n                        </React.Fragment>\n                    ))}\n                </TextLoop >\n            ) : null}\n\n        </main>\n    );\n}\n\n\nexport default TextLooper;\n\n"]},"metadata":{},"sourceType":"module"}