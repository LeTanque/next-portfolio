{"ast":null,"code":"/**\n * @author mrdoob / http://mrdoob.com/\n */\nfunction WebGLCapabilities(gl, extensions, parameters) {\n  var maxAnisotropy;\n\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n    var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension !== null) {\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n\n    return maxAnisotropy;\n  }\n\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n  /* eslint-disable no-undef */\n\n\n  var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n  /* eslint-enable no-undef */\n\n  var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  var maxPrecision = getMaxPrecision(precision);\n\n  if (maxPrecision !== precision) {\n    console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n    precision = maxPrecision;\n  }\n\n  var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  var maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  var maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  var maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  var vertexTextures = maxVertexTextures > 0;\n  var floatFragmentTextures = isWebGL2 || !!extensions.get('OES_texture_float');\n  var floatVertexTextures = vertexTextures && floatFragmentTextures;\n  var maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n  return {\n    isWebGL2: isWebGL2,\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures,\n    maxSamples: maxSamples\n  };\n}\n\nexport { WebGLCapabilities };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/renderers/webgl/WebGLCapabilities.js"],"names":["WebGLCapabilities","gl","extensions","parameters","maxAnisotropy","getMaxAnisotropy","undefined","extension","get","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","isWebGL2","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","console","warn","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n"]},"metadata":{},"sourceType":"module"}