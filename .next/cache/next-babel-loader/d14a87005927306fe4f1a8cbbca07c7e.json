{"ast":null,"code":"import _WeakMap from \"@babel/runtime-corejs2/core-js/weak-map\";\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries(gl, attributes, info) {\n  var geometries = new _WeakMap();\n  var wireframeAttributes = new _WeakMap();\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries.get(geometry);\n\n    if (buffergeometry.index !== null) {\n      attributes.remove(buffergeometry.index);\n    }\n\n    for (var name in buffergeometry.attributes) {\n      attributes.remove(buffergeometry.attributes[name]);\n    }\n\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    geometries.delete(geometry);\n    var attribute = wireframeAttributes.get(buffergeometry);\n\n    if (attribute) {\n      attributes.remove(attribute);\n      wireframeAttributes.delete(buffergeometry);\n    } //\n\n\n    info.memory.geometries--;\n  }\n\n  function get(object, geometry) {\n    var buffergeometry = geometries.get(geometry);\n    if (buffergeometry) return buffergeometry;\n    geometry.addEventListener('dispose', onGeometryDispose);\n\n    if (geometry.isBufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry.isGeometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries.set(geometry, buffergeometry);\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function update(geometry) {\n    var index = geometry.index;\n    var geometryAttributes = geometry.attributes;\n\n    if (index !== null) {\n      attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n  }\n\n  function updateWireframeAttribute(geometry) {\n    var indices = [];\n    var geometryIndex = geometry.index;\n    var geometryPosition = geometry.attributes.position;\n    var version = 0;\n\n    if (geometryIndex !== null) {\n      var array = geometryIndex.array;\n      version = geometryIndex.version;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      var array = geometryPosition.array;\n      version = geometryPosition.version;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    }\n\n    var attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n    attribute.version = version;\n    attributes.update(attribute, gl.ELEMENT_ARRAY_BUFFER); //\n\n    var previousAttribute = wireframeAttributes.get(geometry);\n    if (previousAttribute) attributes.remove(previousAttribute); //\n\n    wireframeAttributes.set(geometry, attribute);\n  }\n\n  function getWireframeAttribute(geometry) {\n    var currentAttribute = wireframeAttributes.get(geometry);\n\n    if (currentAttribute) {\n      var geometryIndex = geometry.index;\n\n      if (geometryIndex !== null) {\n        // if the attribute is obsolete, create a new one\n        if (currentAttribute.version < geometryIndex.version) {\n          updateWireframeAttribute(geometry);\n        }\n      }\n    } else {\n      updateWireframeAttribute(geometry);\n    }\n\n    return wireframeAttributes.get(geometry);\n  }\n\n  return {\n    get: get,\n    update: update,\n    getWireframeAttribute: getWireframeAttribute\n  };\n}\n\nexport { WebGLGeometries };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/renderers/webgl/WebGLGeometries.js"],"names":["Uint16BufferAttribute","Uint32BufferAttribute","BufferGeometry","arrayMax","WebGLGeometries","gl","attributes","info","geometries","wireframeAttributes","onGeometryDispose","event","geometry","target","buffergeometry","get","index","remove","name","removeEventListener","delete","attribute","memory","object","addEventListener","isBufferGeometry","isGeometry","_bufferGeometry","undefined","setFromObject","set","update","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","morphAttributes","array","i","l","length","updateWireframeAttribute","indices","geometryIndex","geometryPosition","position","version","a","b","c","push","previousAttribute","getWireframeAttribute","currentAttribute"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = new WeakMap();\n\tvar wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryPosition = geometry.attributes.position;\n\t\tvar version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t//\n\n\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n"]},"metadata":{},"sourceType":"module"}