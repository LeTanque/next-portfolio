{"ast":null,"code":"var _jsxFileName = \"/Users/tank/git/Portfolio/next-portfolio/components/dnd/Box.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ItemTypes from './ItemTypes';\nimport { DragSource } from 'react-dnd';\n\nvar Box = function Box(_ref) {\n  var name = _ref.name,\n      isDragging = _ref.isDragging,\n      connectDragSource = _ref.connectDragSource;\n  var opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: connectDragSource,\n    className: \"block__box\",\n    style: {\n      opacity: opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, name);\n};\n\nexport default DragSource(ItemTypes.BOX, {\n  beginDrag: function beginDrag(props) {\n    return {\n      name: props.name\n    };\n  },\n  endDrag: function endDrag(props, monitor) {\n    var item = monitor.getItem();\n    var dropResult = monitor.getDropResult();\n\n    if (dropResult) {\n      alert(\"You dropped \".concat(item.name, \" into \").concat(dropResult.name, \"!\"));\n    }\n  }\n}, function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n})(Box);","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/components/dnd/Box.jsx"],"names":["React","ItemTypes","DragSource","Box","name","isDragging","connectDragSource","opacity","BOX","beginDrag","props","endDrag","monitor","item","getItem","dropResult","getDropResult","alert","connect","dragSource"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAA6C;AAAA,MAA1CC,IAA0C,QAA1CA,IAA0C;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;AACvD,MAAMC,OAAO,GAAGF,UAAU,GAAG,GAAH,GAAS,CAAnC;AACA,SACE;AAAK,IAAA,GAAG,EAAEC,iBAAV;AAA8B,IAAA,SAAS,EAAC,YAAxC;AAAsD,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IADH,CADF;AAKD,CAPD;;AASA,eAAeF,UAAU,CACvBD,SAAS,CAACO,GADa,EAEvB;AACEC,EAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,WAAK;AAAEN,MAAAA,IAAI,EAAEM,KAAK,CAACN;AAAd,KAAL;AAAA,GADlB;AAEEO,EAAAA,OAFF,mBAEUD,KAFV,EAEiBE,OAFjB,EAE0B;AACtB,QAAMC,IAAI,GAAGD,OAAO,CAACE,OAAR,EAAb;AACA,QAAMC,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdE,MAAAA,KAAK,uBAAgBJ,IAAI,CAACT,IAArB,mBAAkCW,UAAU,CAACX,IAA7C,OAAL;AACD;AACF;AARH,CAFuB,EAYvB,UAACc,OAAD,EAAUN,OAAV;AAAA,SAAuB;AACrBN,IAAAA,iBAAiB,EAAEY,OAAO,CAACC,UAAR,EADE;AAErBd,IAAAA,UAAU,EAAEO,OAAO,CAACP,UAAR;AAFS,GAAvB;AAAA,CAZuB,CAAV,CAgBbF,GAhBa,CAAf","sourcesContent":["import React from 'react'\nimport ItemTypes from './ItemTypes';\nimport { DragSource } from 'react-dnd';\n\n\n\nconst Box = ({ name, isDragging, connectDragSource }) => {\n  const opacity = isDragging ? 0.4 : 1\n  return (\n    <div ref={connectDragSource}  className=\"block__box\"  style={{ opacity }} >\n      {name}\n    </div>\n  )\n}\n\nexport default DragSource(\n  ItemTypes.BOX,\n  {\n    beginDrag: props => ({ name: props.name }),\n    endDrag(props, monitor) {\n      const item = monitor.getItem()\n      const dropResult = monitor.getDropResult()\n      if (dropResult) {\n        alert(`You dropped ${item.name} into ${dropResult.name}!`)\n      }\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }),\n)(Box)\n"]},"metadata":{},"sourceType":"module"}