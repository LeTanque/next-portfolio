{"ast":null,"code":"import { process, isWatching } from '../ResizeObserverController';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar CATCH_FRAMES = 60 / 5;\nvar observerConfig = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nvar events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];\nvar scheduled = false;\n\nvar Scheduler = function () {\n  function Scheduler() {\n    var _this = this;\n\n    this.stopped = true;\n\n    this.listener = function () {\n      return _this.schedule();\n    };\n  }\n\n  Scheduler.prototype.run = function (frames) {\n    var _this = this;\n\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    queueResizeObserver(function () {\n      var elementsHaveResized = false;\n\n      try {\n        elementsHaveResized = process();\n      } finally {\n        scheduled = false;\n\n        if (!isWatching()) {\n          return;\n        }\n\n        if (elementsHaveResized) {\n          _this.run(60);\n        } else if (frames) {\n          _this.run(frames - 1);\n        } else {\n          _this.start();\n        }\n      }\n    });\n  };\n\n  Scheduler.prototype.schedule = function () {\n    this.stop();\n    this.run(CATCH_FRAMES);\n  };\n\n  Scheduler.prototype.observe = function () {\n    var _this = this;\n\n    var cb = function cb() {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n\n    document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n  };\n\n  Scheduler.prototype.start = function () {\n    var _this = this;\n\n    if (this.stopped) {\n      this.stopped = false;\n      this.observer = new MutationObserver(this.listener);\n      this.observe();\n      events.forEach(function (name) {\n        return global.addEventListener(name, _this.listener, true);\n      });\n    }\n  };\n\n  Scheduler.prototype.stop = function () {\n    var _this = this;\n\n    if (!this.stopped) {\n      this.observer && this.observer.disconnect();\n      events.forEach(function (name) {\n        return global.removeEventListener(name, _this.listener, true);\n      });\n      this.stopped = true;\n    }\n  };\n\n  return Scheduler;\n}();\n\nvar scheduler = new Scheduler();\nexport { scheduler };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/@juggle/resize-observer/lib/utils/scheduler.js"],"names":["process","isWatching","global","queueResizeObserver","CATCH_FRAMES","observerConfig","attributes","characterData","childList","subtree","events","scheduled","Scheduler","_this","stopped","listener","schedule","prototype","run","frames","elementsHaveResized","start","stop","observe","cb","observer","document","body","addEventListener","MutationObserver","forEach","name","disconnect","removeEventListener","scheduler"],"mappings":"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","sourcesContent":["import { process, isWatching } from '../ResizeObserverController';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar CATCH_FRAMES = 60 / 5;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (frames) {\n        var _this = this;\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(60);\n                }\n                else if (frames) {\n                    _this.run(frames - 1);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run(CATCH_FRAMES);\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nexport { scheduler };\n"]},"metadata":{},"sourceType":"module"}