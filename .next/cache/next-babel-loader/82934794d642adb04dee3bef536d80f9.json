{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport { Texture } from './Texture.js';\n\nfunction CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n}\n\nCompressedTexture.prototype = _Object$create(Texture.prototype);\nCompressedTexture.prototype.constructor = CompressedTexture;\nCompressedTexture.prototype.isCompressedTexture = true;\nexport { CompressedTexture };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/textures/CompressedTexture.js"],"names":["Texture","CompressedTexture","mipmaps","width","height","format","type","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","call","image","flipY","generateMipmaps","prototype","constructor","isCompressedTexture"],"mappings":";;AAAA;;;AAIA,SAASA,OAAT,QAAwB,cAAxB;;AAEA,SAASC,iBAAT,CAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,IAA5D,EAAkEC,OAAlE,EAA2EC,KAA3E,EAAkFC,KAAlF,EAAyFC,SAAzF,EAAoGC,SAApG,EAA+GC,UAA/G,EAA2HC,QAA3H,EAAsI;AAErIb,EAAAA,OAAO,CAACc,IAAR,CAAc,IAAd,EAAoB,IAApB,EAA0BP,OAA1B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,SAAjD,EAA4DC,SAA5D,EAAuEN,MAAvE,EAA+EC,IAA/E,EAAqFM,UAArF,EAAiGC,QAAjG;AAEA,OAAKE,KAAL,GAAa;AAAEZ,IAAAA,KAAK,EAAEA,KAAT;AAAgBC,IAAAA,MAAM,EAAEA;AAAxB,GAAb;AACA,OAAKF,OAAL,GAAeA,OAAf,CALqI,CAOrI;AACA;;AAEA,OAAKc,KAAL,GAAa,KAAb,CAVqI,CAYrI;AACA;;AAEA,OAAKC,eAAL,GAAuB,KAAvB;AAEA;;AAEDhB,iBAAiB,CAACiB,SAAlB,GAA8B,eAAelB,OAAO,CAACkB,SAAvB,CAA9B;AACAjB,iBAAiB,CAACiB,SAAlB,CAA4BC,WAA5B,GAA0ClB,iBAA1C;AAEAA,iBAAiB,CAACiB,SAAlB,CAA4BE,mBAA5B,GAAkD,IAAlD;AAGA,SAASnB,iBAAT","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { Texture } from './Texture.js';\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n\nexport { CompressedTexture };\n"]},"metadata":{},"sourceType":"module"}