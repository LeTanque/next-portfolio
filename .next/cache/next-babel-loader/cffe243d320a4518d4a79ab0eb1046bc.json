{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function RenderPass(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.overrideMaterial = overrideMaterial;\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n};\n\nRenderPass.prototype = _Object$assign(_Object$create(Pass.prototype), {\n  constructor: RenderPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.scene.overrideMaterial = this.overrideMaterial;\n    var oldClearColor, oldClearAlpha;\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex();\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { RenderPass };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/examples/jsm/postprocessing/RenderPass.js"],"names":["Pass","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","call","undefined","clear","clearDepth","needsSwap","prototype","constructor","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldClearColor","oldClearAlpha","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"mappings":";;;AAAA;;;AAKA,SAASA,IAAT,QAAqB,2BAArB;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAAWC,KAAX,EAAkBC,MAAlB,EAA0BC,gBAA1B,EAA4CC,UAA5C,EAAwDC,UAAxD,EAAqE;AAErFN,EAAAA,IAAI,CAACO,IAAL,CAAW,IAAX;AAEA,OAAKL,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AAEA,OAAKC,gBAAL,GAAwBA,gBAAxB;AAEA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,UAAL,GAAoBA,UAAU,KAAKE,SAAjB,GAA+BF,UAA/B,GAA4C,CAA9D;AAEA,OAAKG,KAAL,GAAa,IAAb;AACA,OAAKC,UAAL,GAAkB,KAAlB;AACA,OAAKC,SAAL,GAAiB,KAAjB;AAEA,CAhBD;;AAkBAV,UAAU,CAACW,SAAX,GAAuB,eAAe,eAAeZ,IAAI,CAACY,SAApB,CAAf,EAAgD;AAEtEC,EAAAA,WAAW,EAAEZ,UAFyD;AAItEa,EAAAA,MAAM,EAAE,gBAAWC,QAAX,EAAqBC,WAArB,EAAkCC;AAAW;AAA7C,IAA4E;AAEnF,QAAIC,YAAY,GAAGH,QAAQ,CAACI,SAA5B;AACAJ,IAAAA,QAAQ,CAACI,SAAT,GAAqB,KAArB;AAEA,SAAKjB,KAAL,CAAWE,gBAAX,GAA8B,KAAKA,gBAAnC;AAEA,QAAIgB,aAAJ,EAAmBC,aAAnB;;AAEA,QAAK,KAAKhB,UAAV,EAAuB;AAEtBe,MAAAA,aAAa,GAAGL,QAAQ,CAACO,aAAT,GAAyBC,MAAzB,EAAhB;AACAF,MAAAA,aAAa,GAAGN,QAAQ,CAACS,aAAT,EAAhB;AAEAT,MAAAA,QAAQ,CAACU,aAAT,CAAwB,KAAKpB,UAA7B,EAAyC,KAAKC,UAA9C;AAEA;;AAED,QAAK,KAAKI,UAAV,EAAuB;AAEtBK,MAAAA,QAAQ,CAACL,UAAT;AAEA;;AAEDK,IAAAA,QAAQ,CAACW,eAAT,CAA0B,KAAKC,cAAL,GAAsB,IAAtB,GAA6BV,UAAvD,EAxBmF,CA0BnF;;AACA,QAAK,KAAKR,KAAV,EAAkBM,QAAQ,CAACN,KAAT,CAAgBM,QAAQ,CAACa,cAAzB,EAAyCb,QAAQ,CAACc,cAAlD,EAAkEd,QAAQ,CAACe,gBAA3E;AAClBf,IAAAA,QAAQ,CAACD,MAAT,CAAiB,KAAKZ,KAAtB,EAA6B,KAAKC,MAAlC;;AAEA,QAAK,KAAKE,UAAV,EAAuB;AAEtBU,MAAAA,QAAQ,CAACU,aAAT,CAAwBL,aAAxB,EAAuCC,aAAvC;AAEA;;AAED,SAAKnB,KAAL,CAAWE,gBAAX,GAA8B,IAA9B;AACAW,IAAAA,QAAQ,CAACI,SAAT,GAAqBD,YAArB;AAEA;AA3CqE,CAAhD,CAAvB;AA+CA,SAASjB,UAAT","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n"]},"metadata":{},"sourceType":"module"}