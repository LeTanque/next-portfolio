{"ast":null,"code":"import _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Sphere } from '../math/Sphere.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport { InstancedBufferGeometry } from '../core/InstancedBufferGeometry.js';\nimport { InstancedBufferAttribute } from '../core/InstancedBufferAttribute.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader(manager) {\n  Loader.call(this, manager);\n}\n\nBufferGeometryLoader.prototype = _Object$assign(_Object$create(Loader.prototype), {\n  constructor: BufferGeometryLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  parse: function parse(json) {\n    var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n    var index = json.data.index;\n\n    if (index !== undefined) {\n      var typedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n      var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n      var bufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n      if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n      geometry.setAttribute(key, bufferAttribute);\n    }\n\n    var morphAttributes = json.data.morphAttributes;\n\n    if (morphAttributes) {\n      for (var key in morphAttributes) {\n        var attributeArray = morphAttributes[key];\n        var array = [];\n\n        for (var i = 0, il = attributeArray.length; i < il; i++) {\n          var attribute = attributeArray[i];\n          var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n          var bufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n          if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n          array.push(bufferAttribute);\n        }\n\n        geometry.morphAttributes[key] = array;\n      }\n    }\n\n    var morphTargetsRelative = json.data.morphTargetsRelative;\n\n    if (morphTargetsRelative) {\n      geometry.morphTargetsRelative = true;\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var i = 0, n = groups.length; i !== n; ++i) {\n        var group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n\n    if (json.name) geometry.name = json.name;\n    if (json.userData) geometry.userData = json.userData;\n    return geometry;\n  }\n});\nvar TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  // Workaround for IE11 pre KB2929437. See #11440\n  Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array\n};\nexport { BufferGeometryLoader };","map":{"version":3,"sources":["/Users/tank/git/Portfolio/next-portfolio/node_modules/three/src/loaders/BufferGeometryLoader.js"],"names":["Sphere","Vector3","BufferAttribute","BufferGeometry","FileLoader","Loader","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","manager","call","prototype","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","text","parse","JSON","json","geometry","isInstancedBufferGeometry","index","data","undefined","typedArray","TYPED_ARRAYS","type","array","setIndex","attributes","key","attribute","bufferAttributeConstr","isInstancedBufferAttribute","bufferAttribute","itemSize","normalized","name","setAttribute","morphAttributes","attributeArray","i","il","length","push","morphTargetsRelative","groups","drawcalls","offsets","n","group","addGroup","start","count","materialIndex","boundingSphere","center","fromArray","radius","userData","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array"],"mappings":"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","sourcesContent":["import { Sphere } from '../math/Sphere.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport { InstancedBufferGeometry } from '../core/InstancedBufferGeometry.js';\nimport { InstancedBufferAttribute } from '../core/InstancedBufferAttribute.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nexport { BufferGeometryLoader };\n"]},"metadata":{},"sourceType":"module"}